syntax = "proto3";

package c1.reader.v2;

option go_package = "github.com/conductorone/baton-sdk/pb/c1/reader/v2";

import "c1/connector/v2/grant.proto";
import "c1/connector/v2/entitlement.proto";
import "validate/validate.proto";

service GrantsReaderService {
  rpc GetGrant(GrantsReaderServiceGetGrantRequest) returns (c1.connector.v2.Grant);
  rpc ListGrantsForEntitlement(GrantsReaderServiceListGrantsForEntitlementRequest) returns (GrantsReaderServiceListGrantsForEntitlementResponse);
}

message GrantsReaderServiceGetGrantRequest {
  string grant_id = 1 [
    (validate.rules).string = {
      min_bytes: 1
      max_bytes: 1024
    }
  ];
}

message GrantsReaderServiceListGrantsForEntitlementRequest {
  c1.connector.v2.Entitlement entitlement = 1 [
    (validate.rules).message = {
      required: true
    }
  ];
  uint32 page_size = 2 [
    (validate.rules).uint32 = {
      ignore_empty: true
      lte: 250
    }
  ];
  string page_token = 3 [
    (validate.rules).string = {
      ignore_empty: true
      min_bytes: 1
      max_bytes: 2048
    }
  ];
}

message GrantsReaderServiceListGrantsForEntitlementResponse {
  repeated c1.connector.v2.Grant list = 1;
  string next_page_token = 2 [
    (validate.rules).string = {
      ignore_empty: true
      min_bytes: 1
      max_bytes: 2048
    }
  ];
}
