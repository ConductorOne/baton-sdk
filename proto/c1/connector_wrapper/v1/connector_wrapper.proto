syntax = "proto3";

package c1.connector_wrapper.v1;

import "c1/ratelimit/v1/ratelimit.proto";
import "c1/utls/v1/tls.proto";

option go_package = "github.com/conductorone/baton-sdk/pb/c1/connector_wrapper/v1";

message ProfileConfig {
  // Directory to write profile files to. If empty, profiling is disabled.
  // Filenames are generated as: cpu-{syncID}.prof and mem-{syncID}.prof
  string output_dir = 1;
  // Enable CPU profiling
  bool enable_cpu = 2;
  // Enable memory profiling
  bool enable_mem = 3;
}

message ServerConfig {
  utls.v1.Credential credential = 1;
  ratelimit.v1.RateLimiterConfig rate_limiter_config = 2;
  uint32 listen_port = 3;
  ProfileConfig profile_config = 4;
}

service ProfileService {
  // FlushProfiles writes any pending profile data to disk.
  // Should be called before shutting down the server to ensure data is persisted.
  rpc FlushProfiles(FlushProfilesRequest) returns (FlushProfilesResponse);
}

message FlushProfilesRequest {}

message FlushProfilesResponse {
  bool success = 1;
  string error = 2;
}
