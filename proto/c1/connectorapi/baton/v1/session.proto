syntax = "proto3";

package c1.connectorapi.baton.v1;

import "validate/validate.proto";

option go_package = "github.com/conductorone/baton-sdk/pb/c1/connectorapi/baton/v1";

service BatonSessionService {
  rpc Get(GetRequest) returns (GetResponse) {}

  rpc GetMany(GetManyRequest) returns (stream GetManyResponse) {}

  rpc GetAll(GetAllRequest) returns (stream GetAllResponse) {}

  rpc Set(SetRequest) returns (SetResponse) {}

  rpc SetMany(SetManyRequest) returns (SetManyResponse) {}

  rpc Delete(DeleteRequest) returns (DeleteResponse) {}

  rpc DeleteMany(DeleteManyRequest) returns (DeleteManyResponse) {}

  rpc Clear(ClearRequest) returns (ClearResponse) {}
}

message GetRequest {
  string sync_id = 1 [(validate.rules).string = {pattern: "^[a-zA-Z0-9]{27}$"}];

  string key = 2 [(validate.rules).string = {
    min_len: 1
    max_len: 256
  }];
}

message GetResponse {
  bytes value = 1;
}

message GetManyRequest {
  string sync_id = 1 [(validate.rules).string = {pattern: "^[a-zA-Z0-9]{27}$"}];

  repeated string keys = 2 [(validate.rules).repeated = {
    min_items: 1
    max_items: 200
    unique: true
    items: {
      string: {
        min_len: 1
        max_len: 256
      }
    }
  }];
}

message GetManyResponse {
  string key = 1;
  bytes value = 2;
}

message GetAllRequest {
  string sync_id = 1 [(validate.rules).string = {pattern: "^[a-zA-Z0-9]{27}$"}];
  string page_token = 2;
}

message GetAllResponse {
  string key = 1;
  bytes value = 2;
  string next_page_token = 3;
}

message SetRequest {
  string sync_id = 1 [(validate.rules).string = {pattern: "^[a-zA-Z0-9]{27}$"}];
  string key = 2 [(validate.rules).string = {
    min_len: 1
    max_len: 256
  }];
  bytes value = 3 [(validate.rules).bytes = {max_len: 1048576}];
}

message SetResponse {}

message SetManyRequest {
  string sync_id = 1 [(validate.rules).string = {pattern: "^[a-zA-Z0-9]{27}$"}];
  map<string, bytes> values = 2 [(validate.rules).map = {
    keys: {
      string: {
        min_len: 1
        max_len: 256
      }
    }
    values: {
      bytes: {max_len: 1048576}
    }
  }];
}

message SetManyResponse {}

message DeleteRequest {
  string sync_id = 1 [(validate.rules).string = {pattern: "^[a-zA-Z0-9]{27}$"}];
  string key = 2 [(validate.rules).string = {
    min_len: 1
    max_len: 256
  }];
}

message DeleteResponse {}

message DeleteManyRequest {
  string sync_id = 1 [(validate.rules).string = {pattern: "^[a-zA-Z0-9]{27}$"}];
  repeated string keys = 2 [(validate.rules).repeated = {
    min_items: 1
    max_items: 200
    items: {
      string: {
        min_len: 1
        max_len: 256
      }
    }
  }];
}
message DeleteManyResponse {}

message ClearRequest {
  string sync_id = 1 [(validate.rules).string = {pattern: "^[a-zA-Z0-9]{27}$"}];
}

message ClearResponse {}
