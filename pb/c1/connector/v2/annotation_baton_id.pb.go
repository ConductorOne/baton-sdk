// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: c1/connector/v2/annotation_baton_id.proto

//go:build !protoopaque

package v2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExternalResourceMatch struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	ResourceType  ResourceType_Trait     `protobuf:"varint,1,opt,name=resource_type,json=resourceType,proto3,enum=c1.connector.v2.ResourceType_Trait" json:"resource_type,omitempty"`
	Key           string                 `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value         string                 `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExternalResourceMatch) Reset() {
	*x = ExternalResourceMatch{}
	mi := &file_c1_connector_v2_annotation_baton_id_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExternalResourceMatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalResourceMatch) ProtoMessage() {}

func (x *ExternalResourceMatch) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connector_v2_annotation_baton_id_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExternalResourceMatch) GetResourceType() ResourceType_Trait {
	if x != nil {
		return x.ResourceType
	}
	return ResourceType_TRAIT_UNSPECIFIED
}

func (x *ExternalResourceMatch) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ExternalResourceMatch) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ExternalResourceMatch) SetResourceType(v ResourceType_Trait) {
	x.ResourceType = v
}

func (x *ExternalResourceMatch) SetKey(v string) {
	x.Key = v
}

func (x *ExternalResourceMatch) SetValue(v string) {
	x.Value = v
}

type ExternalResourceMatch_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ResourceType ResourceType_Trait
	Key          string
	Value        string
}

func (b0 ExternalResourceMatch_builder) Build() *ExternalResourceMatch {
	m0 := &ExternalResourceMatch{}
	b, x := &b0, m0
	_, _ = b, x
	x.ResourceType = b.ResourceType
	x.Key = b.Key
	x.Value = b.Value
	return m0
}

type ExternalResourceMatchAll struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	ResourceType  ResourceType_Trait     `protobuf:"varint,1,opt,name=resource_type,json=resourceType,proto3,enum=c1.connector.v2.ResourceType_Trait" json:"resource_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExternalResourceMatchAll) Reset() {
	*x = ExternalResourceMatchAll{}
	mi := &file_c1_connector_v2_annotation_baton_id_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExternalResourceMatchAll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalResourceMatchAll) ProtoMessage() {}

func (x *ExternalResourceMatchAll) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connector_v2_annotation_baton_id_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExternalResourceMatchAll) GetResourceType() ResourceType_Trait {
	if x != nil {
		return x.ResourceType
	}
	return ResourceType_TRAIT_UNSPECIFIED
}

func (x *ExternalResourceMatchAll) SetResourceType(v ResourceType_Trait) {
	x.ResourceType = v
}

type ExternalResourceMatchAll_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ResourceType ResourceType_Trait
}

func (b0 ExternalResourceMatchAll_builder) Build() *ExternalResourceMatchAll {
	m0 := &ExternalResourceMatchAll{}
	b, x := &b0, m0
	_, _ = b, x
	x.ResourceType = b.ResourceType
	return m0
}

type ExternalResourceMatchID struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExternalResourceMatchID) Reset() {
	*x = ExternalResourceMatchID{}
	mi := &file_c1_connector_v2_annotation_baton_id_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExternalResourceMatchID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalResourceMatchID) ProtoMessage() {}

func (x *ExternalResourceMatchID) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connector_v2_annotation_baton_id_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExternalResourceMatchID) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ExternalResourceMatchID) SetId(v string) {
	x.Id = v
}

type ExternalResourceMatchID_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id string
}

func (b0 ExternalResourceMatchID_builder) Build() *ExternalResourceMatchID {
	m0 := &ExternalResourceMatchID{}
	b, x := &b0, m0
	_, _ = b, x
	x.Id = b.Id
	return m0
}

type BatonID struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatonID) Reset() {
	*x = BatonID{}
	mi := &file_c1_connector_v2_annotation_baton_id_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatonID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatonID) ProtoMessage() {}

func (x *BatonID) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connector_v2_annotation_baton_id_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type BatonID_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 BatonID_builder) Build() *BatonID {
	m0 := &BatonID{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

var File_c1_connector_v2_annotation_baton_id_proto protoreflect.FileDescriptor

const file_c1_connector_v2_annotation_baton_id_proto_rawDesc = "" +
	"\n" +
	")c1/connector/v2/annotation_baton_id.proto\x12\x0fc1.connector.v2\x1a\x1ec1/connector/v2/resource.proto\"\x89\x01\n" +
	"\x15ExternalResourceMatch\x12H\n" +
	"\rresource_type\x18\x01 \x01(\x0e2#.c1.connector.v2.ResourceType.TraitR\fresourceType\x12\x10\n" +
	"\x03key\x18\x02 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x03 \x01(\tR\x05value\"d\n" +
	"\x18ExternalResourceMatchAll\x12H\n" +
	"\rresource_type\x18\x01 \x01(\x0e2#.c1.connector.v2.ResourceType.TraitR\fresourceType\")\n" +
	"\x17ExternalResourceMatchID\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\t\n" +
	"\aBatonIDB6Z4github.com/conductorone/baton-sdk/pb/c1/connector/v2b\x06proto3"

var file_c1_connector_v2_annotation_baton_id_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_c1_connector_v2_annotation_baton_id_proto_goTypes = []any{
	(*ExternalResourceMatch)(nil),    // 0: c1.connector.v2.ExternalResourceMatch
	(*ExternalResourceMatchAll)(nil), // 1: c1.connector.v2.ExternalResourceMatchAll
	(*ExternalResourceMatchID)(nil),  // 2: c1.connector.v2.ExternalResourceMatchID
	(*BatonID)(nil),                  // 3: c1.connector.v2.BatonID
	(ResourceType_Trait)(0),          // 4: c1.connector.v2.ResourceType.Trait
}
var file_c1_connector_v2_annotation_baton_id_proto_depIdxs = []int32{
	4, // 0: c1.connector.v2.ExternalResourceMatch.resource_type:type_name -> c1.connector.v2.ResourceType.Trait
	4, // 1: c1.connector.v2.ExternalResourceMatchAll.resource_type:type_name -> c1.connector.v2.ResourceType.Trait
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_c1_connector_v2_annotation_baton_id_proto_init() }
func file_c1_connector_v2_annotation_baton_id_proto_init() {
	if File_c1_connector_v2_annotation_baton_id_proto != nil {
		return
	}
	file_c1_connector_v2_resource_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_c1_connector_v2_annotation_baton_id_proto_rawDesc), len(file_c1_connector_v2_annotation_baton_id_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_c1_connector_v2_annotation_baton_id_proto_goTypes,
		DependencyIndexes: file_c1_connector_v2_annotation_baton_id_proto_depIdxs,
		MessageInfos:      file_c1_connector_v2_annotation_baton_id_proto_msgTypes,
	}.Build()
	File_c1_connector_v2_annotation_baton_id_proto = out.File
	file_c1_connector_v2_annotation_baton_id_proto_goTypes = nil
	file_c1_connector_v2_annotation_baton_id_proto_depIdxs = nil
}
