// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        (unknown)
// source: c1/connector_wrapper/v1/connector_wrapper.proto

package v1

import (
	v11 "github.com/conductorone/baton-sdk/pb/c1/ratelimit/v1"
	v1 "github.com/conductorone/baton-sdk/pb/c1/utls/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProfileConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Directory to write profile files to. If empty, profiling is disabled.
	// Filenames are generated as: cpu-{syncID}.prof and mem-{syncID}.prof
	OutputDir string `protobuf:"bytes,1,opt,name=output_dir,json=outputDir,proto3" json:"output_dir,omitempty"`
	// Enable CPU profiling
	EnableCpu bool `protobuf:"varint,2,opt,name=enable_cpu,json=enableCpu,proto3" json:"enable_cpu,omitempty"`
	// Enable memory profiling
	EnableMem     bool `protobuf:"varint,3,opt,name=enable_mem,json=enableMem,proto3" json:"enable_mem,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProfileConfig) Reset() {
	*x = ProfileConfig{}
	mi := &file_c1_connector_wrapper_v1_connector_wrapper_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProfileConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileConfig) ProtoMessage() {}

func (x *ProfileConfig) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connector_wrapper_v1_connector_wrapper_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileConfig.ProtoReflect.Descriptor instead.
func (*ProfileConfig) Descriptor() ([]byte, []int) {
	return file_c1_connector_wrapper_v1_connector_wrapper_proto_rawDescGZIP(), []int{0}
}

func (x *ProfileConfig) GetOutputDir() string {
	if x != nil {
		return x.OutputDir
	}
	return ""
}

func (x *ProfileConfig) GetEnableCpu() bool {
	if x != nil {
		return x.EnableCpu
	}
	return false
}

func (x *ProfileConfig) GetEnableMem() bool {
	if x != nil {
		return x.EnableMem
	}
	return false
}

type ServerConfig struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Credential        *v1.Credential         `protobuf:"bytes,1,opt,name=credential,proto3" json:"credential,omitempty"`
	RateLimiterConfig *v11.RateLimiterConfig `protobuf:"bytes,2,opt,name=rate_limiter_config,json=rateLimiterConfig,proto3" json:"rate_limiter_config,omitempty"`
	ListenPort        uint32                 `protobuf:"varint,3,opt,name=listen_port,json=listenPort,proto3" json:"listen_port,omitempty"`
	ProfileConfig     *ProfileConfig         `protobuf:"bytes,4,opt,name=profile_config,json=profileConfig,proto3" json:"profile_config,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ServerConfig) Reset() {
	*x = ServerConfig{}
	mi := &file_c1_connector_wrapper_v1_connector_wrapper_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerConfig) ProtoMessage() {}

func (x *ServerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connector_wrapper_v1_connector_wrapper_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerConfig.ProtoReflect.Descriptor instead.
func (*ServerConfig) Descriptor() ([]byte, []int) {
	return file_c1_connector_wrapper_v1_connector_wrapper_proto_rawDescGZIP(), []int{1}
}

func (x *ServerConfig) GetCredential() *v1.Credential {
	if x != nil {
		return x.Credential
	}
	return nil
}

func (x *ServerConfig) GetRateLimiterConfig() *v11.RateLimiterConfig {
	if x != nil {
		return x.RateLimiterConfig
	}
	return nil
}

func (x *ServerConfig) GetListenPort() uint32 {
	if x != nil {
		return x.ListenPort
	}
	return 0
}

func (x *ServerConfig) GetProfileConfig() *ProfileConfig {
	if x != nil {
		return x.ProfileConfig
	}
	return nil
}

type FlushProfilesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FlushProfilesRequest) Reset() {
	*x = FlushProfilesRequest{}
	mi := &file_c1_connector_wrapper_v1_connector_wrapper_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlushProfilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlushProfilesRequest) ProtoMessage() {}

func (x *FlushProfilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connector_wrapper_v1_connector_wrapper_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlushProfilesRequest.ProtoReflect.Descriptor instead.
func (*FlushProfilesRequest) Descriptor() ([]byte, []int) {
	return file_c1_connector_wrapper_v1_connector_wrapper_proto_rawDescGZIP(), []int{2}
}

type FlushProfilesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FlushProfilesResponse) Reset() {
	*x = FlushProfilesResponse{}
	mi := &file_c1_connector_wrapper_v1_connector_wrapper_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlushProfilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlushProfilesResponse) ProtoMessage() {}

func (x *FlushProfilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connector_wrapper_v1_connector_wrapper_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlushProfilesResponse.ProtoReflect.Descriptor instead.
func (*FlushProfilesResponse) Descriptor() ([]byte, []int) {
	return file_c1_connector_wrapper_v1_connector_wrapper_proto_rawDescGZIP(), []int{3}
}

func (x *FlushProfilesResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *FlushProfilesResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_c1_connector_wrapper_v1_connector_wrapper_proto protoreflect.FileDescriptor

var file_c1_connector_wrapper_v1_connector_wrapper_proto_rawDesc = string([]byte{
	0x0a, 0x2f, 0x63, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x77,
	0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x5f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x17, 0x63, 0x31, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f,
	0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x63, 0x31, 0x2f, 0x72,
	0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x61, 0x74, 0x65,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x63, 0x31, 0x2f,
	0x75, 0x74, 0x6c, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x6c, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x64, 0x69, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x44, 0x69,
	0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x70, 0x75, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x70, 0x75,
	0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6d, 0x65, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x22,
	0x8a, 0x02, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x36, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x31, 0x2e, 0x75, 0x74, 0x6c, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x52, 0x0a, 0x13, 0x72, 0x61, 0x74, 0x65,
	0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x31, 0x2e, 0x72, 0x61, 0x74, 0x65, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x11, 0x72, 0x61, 0x74, 0x65, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1f, 0x0a, 0x0b,
	0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x4d, 0x0a,
	0x0e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x31, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x5f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x16, 0x0a, 0x14,
	0x46, 0x6c, 0x75, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x47, 0x0a, 0x15, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x32, 0x80, 0x01,
	0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x6e, 0x0a, 0x0d, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x12, 0x2d, 0x2e, 0x63, 0x31, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x5f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6c, 0x75, 0x73,
	0x68, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2e, 0x2e, 0x63, 0x31, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f,
	0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6c, 0x75, 0x73, 0x68,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x3e, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63,
	0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x6f, 0x6e, 0x65, 0x2f, 0x62, 0x61, 0x74, 0x6f,
	0x6e, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2f, 0x76, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_c1_connector_wrapper_v1_connector_wrapper_proto_rawDescOnce sync.Once
	file_c1_connector_wrapper_v1_connector_wrapper_proto_rawDescData []byte
)

func file_c1_connector_wrapper_v1_connector_wrapper_proto_rawDescGZIP() []byte {
	file_c1_connector_wrapper_v1_connector_wrapper_proto_rawDescOnce.Do(func() {
		file_c1_connector_wrapper_v1_connector_wrapper_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_c1_connector_wrapper_v1_connector_wrapper_proto_rawDesc), len(file_c1_connector_wrapper_v1_connector_wrapper_proto_rawDesc)))
	})
	return file_c1_connector_wrapper_v1_connector_wrapper_proto_rawDescData
}

var file_c1_connector_wrapper_v1_connector_wrapper_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_c1_connector_wrapper_v1_connector_wrapper_proto_goTypes = []any{
	(*ProfileConfig)(nil),         // 0: c1.connector_wrapper.v1.ProfileConfig
	(*ServerConfig)(nil),          // 1: c1.connector_wrapper.v1.ServerConfig
	(*FlushProfilesRequest)(nil),  // 2: c1.connector_wrapper.v1.FlushProfilesRequest
	(*FlushProfilesResponse)(nil), // 3: c1.connector_wrapper.v1.FlushProfilesResponse
	(*v1.Credential)(nil),         // 4: c1.utls.v1.Credential
	(*v11.RateLimiterConfig)(nil), // 5: c1.ratelimit.v1.RateLimiterConfig
}
var file_c1_connector_wrapper_v1_connector_wrapper_proto_depIdxs = []int32{
	4, // 0: c1.connector_wrapper.v1.ServerConfig.credential:type_name -> c1.utls.v1.Credential
	5, // 1: c1.connector_wrapper.v1.ServerConfig.rate_limiter_config:type_name -> c1.ratelimit.v1.RateLimiterConfig
	0, // 2: c1.connector_wrapper.v1.ServerConfig.profile_config:type_name -> c1.connector_wrapper.v1.ProfileConfig
	2, // 3: c1.connector_wrapper.v1.ProfileService.FlushProfiles:input_type -> c1.connector_wrapper.v1.FlushProfilesRequest
	3, // 4: c1.connector_wrapper.v1.ProfileService.FlushProfiles:output_type -> c1.connector_wrapper.v1.FlushProfilesResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_c1_connector_wrapper_v1_connector_wrapper_proto_init() }
func file_c1_connector_wrapper_v1_connector_wrapper_proto_init() {
	if File_c1_connector_wrapper_v1_connector_wrapper_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_c1_connector_wrapper_v1_connector_wrapper_proto_rawDesc), len(file_c1_connector_wrapper_v1_connector_wrapper_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_c1_connector_wrapper_v1_connector_wrapper_proto_goTypes,
		DependencyIndexes: file_c1_connector_wrapper_v1_connector_wrapper_proto_depIdxs,
		MessageInfos:      file_c1_connector_wrapper_v1_connector_wrapper_proto_msgTypes,
	}.Build()
	File_c1_connector_wrapper_v1_connector_wrapper_proto = out.File
	file_c1_connector_wrapper_v1_connector_wrapper_proto_goTypes = nil
	file_c1_connector_wrapper_v1_connector_wrapper_proto_depIdxs = nil
}
