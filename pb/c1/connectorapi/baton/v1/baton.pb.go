// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: c1/connectorapi/baton/v1/baton.proto

//go:build !protoopaque

package v1

import (
	v2 "github.com/conductorone/baton-sdk/pb/c1/connector/v2"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	status "google.golang.org/genproto/googleapis/rpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Task_Status int32

const (
	Task_STATUS_UNSPECIFIED Task_Status = 0
	Task_STATUS_PENDING     Task_Status = 1
	Task_STATUS_SCHEDULED   Task_Status = 2
	Task_STATUS_RUNNING     Task_Status = 3
	Task_STATUS_FINISHED    Task_Status = 4
)

// Enum value maps for Task_Status.
var (
	Task_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_PENDING",
		2: "STATUS_SCHEDULED",
		3: "STATUS_RUNNING",
		4: "STATUS_FINISHED",
	}
	Task_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_PENDING":     1,
		"STATUS_SCHEDULED":   2,
		"STATUS_RUNNING":     3,
		"STATUS_FINISHED":    4,
	}
)

func (x Task_Status) Enum() *Task_Status {
	p := new(Task_Status)
	*p = x
	return p
}

func (x Task_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Task_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_c1_connectorapi_baton_v1_baton_proto_enumTypes[0].Descriptor()
}

func (Task_Status) Type() protoreflect.EnumType {
	return &file_c1_connectorapi_baton_v1_baton_proto_enumTypes[0]
}

func (x Task_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type Task struct {
	state  protoimpl.MessageState `protogen:"hybrid.v1"`
	Id     string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status Task_Status            `protobuf:"varint,2,opt,name=status,proto3,enum=c1.connectorapi.baton.v1.Task_Status" json:"status,omitempty"`
	// Types that are valid to be assigned to TaskType:
	//
	//	*Task_None
	//	*Task_Hello
	//	*Task_SyncFull
	//	*Task_Grant
	//	*Task_Revoke
	//	*Task_CreateAccount
	//	*Task_CreateResource
	//	*Task_DeleteResource
	//	*Task_RotateCredentials
	//	*Task_EventFeed
	//	*Task_CreateTicketTask_
	//	*Task_ListTicketSchemas
	//	*Task_GetTicket
	//	*Task_BulkCreateTickets
	//	*Task_BulkGetTickets
	//	*Task_ActionListSchemas
	//	*Task_ActionGetSchema
	//	*Task_ActionInvoke
	//	*Task_ActionStatus
	//	*Task_CreateSyncDiff
	//	*Task_CompactSyncs_
	TaskType      isTask_TaskType `protobuf_oneof:"task_type"`
	Debug         bool            `protobuf:"varint,3,opt,name=debug,proto3" json:"debug,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task) Reset() {
	*x = Task{}
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Task) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Task) GetStatus() Task_Status {
	if x != nil {
		return x.Status
	}
	return Task_STATUS_UNSPECIFIED
}

func (x *Task) GetTaskType() isTask_TaskType {
	if x != nil {
		return x.TaskType
	}
	return nil
}

func (x *Task) GetNone() *Task_NoneTask {
	if x != nil {
		if x, ok := x.TaskType.(*Task_None); ok {
			return x.None
		}
	}
	return nil
}

func (x *Task) GetHello() *Task_HelloTask {
	if x != nil {
		if x, ok := x.TaskType.(*Task_Hello); ok {
			return x.Hello
		}
	}
	return nil
}

func (x *Task) GetSyncFull() *Task_SyncFullTask {
	if x != nil {
		if x, ok := x.TaskType.(*Task_SyncFull); ok {
			return x.SyncFull
		}
	}
	return nil
}

func (x *Task) GetGrant() *Task_GrantTask {
	if x != nil {
		if x, ok := x.TaskType.(*Task_Grant); ok {
			return x.Grant
		}
	}
	return nil
}

func (x *Task) GetRevoke() *Task_RevokeTask {
	if x != nil {
		if x, ok := x.TaskType.(*Task_Revoke); ok {
			return x.Revoke
		}
	}
	return nil
}

func (x *Task) GetCreateAccount() *Task_CreateAccountTask {
	if x != nil {
		if x, ok := x.TaskType.(*Task_CreateAccount); ok {
			return x.CreateAccount
		}
	}
	return nil
}

func (x *Task) GetCreateResource() *Task_CreateResourceTask {
	if x != nil {
		if x, ok := x.TaskType.(*Task_CreateResource); ok {
			return x.CreateResource
		}
	}
	return nil
}

func (x *Task) GetDeleteResource() *Task_DeleteResourceTask {
	if x != nil {
		if x, ok := x.TaskType.(*Task_DeleteResource); ok {
			return x.DeleteResource
		}
	}
	return nil
}

func (x *Task) GetRotateCredentials() *Task_RotateCredentialsTask {
	if x != nil {
		if x, ok := x.TaskType.(*Task_RotateCredentials); ok {
			return x.RotateCredentials
		}
	}
	return nil
}

func (x *Task) GetEventFeed() *Task_EventFeedTask {
	if x != nil {
		if x, ok := x.TaskType.(*Task_EventFeed); ok {
			return x.EventFeed
		}
	}
	return nil
}

func (x *Task) GetCreateTicketTask() *Task_CreateTicketTask {
	if x != nil {
		if x, ok := x.TaskType.(*Task_CreateTicketTask_); ok {
			return x.CreateTicketTask
		}
	}
	return nil
}

func (x *Task) GetListTicketSchemas() *Task_ListTicketSchemasTask {
	if x != nil {
		if x, ok := x.TaskType.(*Task_ListTicketSchemas); ok {
			return x.ListTicketSchemas
		}
	}
	return nil
}

func (x *Task) GetGetTicket() *Task_GetTicketTask {
	if x != nil {
		if x, ok := x.TaskType.(*Task_GetTicket); ok {
			return x.GetTicket
		}
	}
	return nil
}

func (x *Task) GetBulkCreateTickets() *Task_BulkCreateTicketsTask {
	if x != nil {
		if x, ok := x.TaskType.(*Task_BulkCreateTickets); ok {
			return x.BulkCreateTickets
		}
	}
	return nil
}

func (x *Task) GetBulkGetTickets() *Task_BulkGetTicketsTask {
	if x != nil {
		if x, ok := x.TaskType.(*Task_BulkGetTickets); ok {
			return x.BulkGetTickets
		}
	}
	return nil
}

func (x *Task) GetActionListSchemas() *Task_ActionListSchemasTask {
	if x != nil {
		if x, ok := x.TaskType.(*Task_ActionListSchemas); ok {
			return x.ActionListSchemas
		}
	}
	return nil
}

func (x *Task) GetActionGetSchema() *Task_ActionGetSchemaTask {
	if x != nil {
		if x, ok := x.TaskType.(*Task_ActionGetSchema); ok {
			return x.ActionGetSchema
		}
	}
	return nil
}

func (x *Task) GetActionInvoke() *Task_ActionInvokeTask {
	if x != nil {
		if x, ok := x.TaskType.(*Task_ActionInvoke); ok {
			return x.ActionInvoke
		}
	}
	return nil
}

func (x *Task) GetActionStatus() *Task_ActionStatusTask {
	if x != nil {
		if x, ok := x.TaskType.(*Task_ActionStatus); ok {
			return x.ActionStatus
		}
	}
	return nil
}

func (x *Task) GetCreateSyncDiff() *Task_CreateSyncDiffTask {
	if x != nil {
		if x, ok := x.TaskType.(*Task_CreateSyncDiff); ok {
			return x.CreateSyncDiff
		}
	}
	return nil
}

func (x *Task) GetCompactSyncs() *Task_CompactSyncs {
	if x != nil {
		if x, ok := x.TaskType.(*Task_CompactSyncs_); ok {
			return x.CompactSyncs
		}
	}
	return nil
}

func (x *Task) GetDebug() bool {
	if x != nil {
		return x.Debug
	}
	return false
}

func (x *Task) SetId(v string) {
	x.Id = v
}

func (x *Task) SetStatus(v Task_Status) {
	x.Status = v
}

func (x *Task) SetNone(v *Task_NoneTask) {
	if v == nil {
		x.TaskType = nil
		return
	}
	x.TaskType = &Task_None{v}
}

func (x *Task) SetHello(v *Task_HelloTask) {
	if v == nil {
		x.TaskType = nil
		return
	}
	x.TaskType = &Task_Hello{v}
}

func (x *Task) SetSyncFull(v *Task_SyncFullTask) {
	if v == nil {
		x.TaskType = nil
		return
	}
	x.TaskType = &Task_SyncFull{v}
}

func (x *Task) SetGrant(v *Task_GrantTask) {
	if v == nil {
		x.TaskType = nil
		return
	}
	x.TaskType = &Task_Grant{v}
}

func (x *Task) SetRevoke(v *Task_RevokeTask) {
	if v == nil {
		x.TaskType = nil
		return
	}
	x.TaskType = &Task_Revoke{v}
}

func (x *Task) SetCreateAccount(v *Task_CreateAccountTask) {
	if v == nil {
		x.TaskType = nil
		return
	}
	x.TaskType = &Task_CreateAccount{v}
}

func (x *Task) SetCreateResource(v *Task_CreateResourceTask) {
	if v == nil {
		x.TaskType = nil
		return
	}
	x.TaskType = &Task_CreateResource{v}
}

func (x *Task) SetDeleteResource(v *Task_DeleteResourceTask) {
	if v == nil {
		x.TaskType = nil
		return
	}
	x.TaskType = &Task_DeleteResource{v}
}

func (x *Task) SetRotateCredentials(v *Task_RotateCredentialsTask) {
	if v == nil {
		x.TaskType = nil
		return
	}
	x.TaskType = &Task_RotateCredentials{v}
}

func (x *Task) SetEventFeed(v *Task_EventFeedTask) {
	if v == nil {
		x.TaskType = nil
		return
	}
	x.TaskType = &Task_EventFeed{v}
}

func (x *Task) SetCreateTicketTask(v *Task_CreateTicketTask) {
	if v == nil {
		x.TaskType = nil
		return
	}
	x.TaskType = &Task_CreateTicketTask_{v}
}

func (x *Task) SetListTicketSchemas(v *Task_ListTicketSchemasTask) {
	if v == nil {
		x.TaskType = nil
		return
	}
	x.TaskType = &Task_ListTicketSchemas{v}
}

func (x *Task) SetGetTicket(v *Task_GetTicketTask) {
	if v == nil {
		x.TaskType = nil
		return
	}
	x.TaskType = &Task_GetTicket{v}
}

func (x *Task) SetBulkCreateTickets(v *Task_BulkCreateTicketsTask) {
	if v == nil {
		x.TaskType = nil
		return
	}
	x.TaskType = &Task_BulkCreateTickets{v}
}

func (x *Task) SetBulkGetTickets(v *Task_BulkGetTicketsTask) {
	if v == nil {
		x.TaskType = nil
		return
	}
	x.TaskType = &Task_BulkGetTickets{v}
}

func (x *Task) SetActionListSchemas(v *Task_ActionListSchemasTask) {
	if v == nil {
		x.TaskType = nil
		return
	}
	x.TaskType = &Task_ActionListSchemas{v}
}

func (x *Task) SetActionGetSchema(v *Task_ActionGetSchemaTask) {
	if v == nil {
		x.TaskType = nil
		return
	}
	x.TaskType = &Task_ActionGetSchema{v}
}

func (x *Task) SetActionInvoke(v *Task_ActionInvokeTask) {
	if v == nil {
		x.TaskType = nil
		return
	}
	x.TaskType = &Task_ActionInvoke{v}
}

func (x *Task) SetActionStatus(v *Task_ActionStatusTask) {
	if v == nil {
		x.TaskType = nil
		return
	}
	x.TaskType = &Task_ActionStatus{v}
}

func (x *Task) SetCreateSyncDiff(v *Task_CreateSyncDiffTask) {
	if v == nil {
		x.TaskType = nil
		return
	}
	x.TaskType = &Task_CreateSyncDiff{v}
}

func (x *Task) SetCompactSyncs(v *Task_CompactSyncs) {
	if v == nil {
		x.TaskType = nil
		return
	}
	x.TaskType = &Task_CompactSyncs_{v}
}

func (x *Task) SetDebug(v bool) {
	x.Debug = v
}

func (x *Task) HasTaskType() bool {
	if x == nil {
		return false
	}
	return x.TaskType != nil
}

func (x *Task) HasNone() bool {
	if x == nil {
		return false
	}
	_, ok := x.TaskType.(*Task_None)
	return ok
}

func (x *Task) HasHello() bool {
	if x == nil {
		return false
	}
	_, ok := x.TaskType.(*Task_Hello)
	return ok
}

func (x *Task) HasSyncFull() bool {
	if x == nil {
		return false
	}
	_, ok := x.TaskType.(*Task_SyncFull)
	return ok
}

func (x *Task) HasGrant() bool {
	if x == nil {
		return false
	}
	_, ok := x.TaskType.(*Task_Grant)
	return ok
}

func (x *Task) HasRevoke() bool {
	if x == nil {
		return false
	}
	_, ok := x.TaskType.(*Task_Revoke)
	return ok
}

func (x *Task) HasCreateAccount() bool {
	if x == nil {
		return false
	}
	_, ok := x.TaskType.(*Task_CreateAccount)
	return ok
}

func (x *Task) HasCreateResource() bool {
	if x == nil {
		return false
	}
	_, ok := x.TaskType.(*Task_CreateResource)
	return ok
}

func (x *Task) HasDeleteResource() bool {
	if x == nil {
		return false
	}
	_, ok := x.TaskType.(*Task_DeleteResource)
	return ok
}

func (x *Task) HasRotateCredentials() bool {
	if x == nil {
		return false
	}
	_, ok := x.TaskType.(*Task_RotateCredentials)
	return ok
}

func (x *Task) HasEventFeed() bool {
	if x == nil {
		return false
	}
	_, ok := x.TaskType.(*Task_EventFeed)
	return ok
}

func (x *Task) HasCreateTicketTask() bool {
	if x == nil {
		return false
	}
	_, ok := x.TaskType.(*Task_CreateTicketTask_)
	return ok
}

func (x *Task) HasListTicketSchemas() bool {
	if x == nil {
		return false
	}
	_, ok := x.TaskType.(*Task_ListTicketSchemas)
	return ok
}

func (x *Task) HasGetTicket() bool {
	if x == nil {
		return false
	}
	_, ok := x.TaskType.(*Task_GetTicket)
	return ok
}

func (x *Task) HasBulkCreateTickets() bool {
	if x == nil {
		return false
	}
	_, ok := x.TaskType.(*Task_BulkCreateTickets)
	return ok
}

func (x *Task) HasBulkGetTickets() bool {
	if x == nil {
		return false
	}
	_, ok := x.TaskType.(*Task_BulkGetTickets)
	return ok
}

func (x *Task) HasActionListSchemas() bool {
	if x == nil {
		return false
	}
	_, ok := x.TaskType.(*Task_ActionListSchemas)
	return ok
}

func (x *Task) HasActionGetSchema() bool {
	if x == nil {
		return false
	}
	_, ok := x.TaskType.(*Task_ActionGetSchema)
	return ok
}

func (x *Task) HasActionInvoke() bool {
	if x == nil {
		return false
	}
	_, ok := x.TaskType.(*Task_ActionInvoke)
	return ok
}

func (x *Task) HasActionStatus() bool {
	if x == nil {
		return false
	}
	_, ok := x.TaskType.(*Task_ActionStatus)
	return ok
}

func (x *Task) HasCreateSyncDiff() bool {
	if x == nil {
		return false
	}
	_, ok := x.TaskType.(*Task_CreateSyncDiff)
	return ok
}

func (x *Task) HasCompactSyncs() bool {
	if x == nil {
		return false
	}
	_, ok := x.TaskType.(*Task_CompactSyncs_)
	return ok
}

func (x *Task) ClearTaskType() {
	x.TaskType = nil
}

func (x *Task) ClearNone() {
	if _, ok := x.TaskType.(*Task_None); ok {
		x.TaskType = nil
	}
}

func (x *Task) ClearHello() {
	if _, ok := x.TaskType.(*Task_Hello); ok {
		x.TaskType = nil
	}
}

func (x *Task) ClearSyncFull() {
	if _, ok := x.TaskType.(*Task_SyncFull); ok {
		x.TaskType = nil
	}
}

func (x *Task) ClearGrant() {
	if _, ok := x.TaskType.(*Task_Grant); ok {
		x.TaskType = nil
	}
}

func (x *Task) ClearRevoke() {
	if _, ok := x.TaskType.(*Task_Revoke); ok {
		x.TaskType = nil
	}
}

func (x *Task) ClearCreateAccount() {
	if _, ok := x.TaskType.(*Task_CreateAccount); ok {
		x.TaskType = nil
	}
}

func (x *Task) ClearCreateResource() {
	if _, ok := x.TaskType.(*Task_CreateResource); ok {
		x.TaskType = nil
	}
}

func (x *Task) ClearDeleteResource() {
	if _, ok := x.TaskType.(*Task_DeleteResource); ok {
		x.TaskType = nil
	}
}

func (x *Task) ClearRotateCredentials() {
	if _, ok := x.TaskType.(*Task_RotateCredentials); ok {
		x.TaskType = nil
	}
}

func (x *Task) ClearEventFeed() {
	if _, ok := x.TaskType.(*Task_EventFeed); ok {
		x.TaskType = nil
	}
}

func (x *Task) ClearCreateTicketTask() {
	if _, ok := x.TaskType.(*Task_CreateTicketTask_); ok {
		x.TaskType = nil
	}
}

func (x *Task) ClearListTicketSchemas() {
	if _, ok := x.TaskType.(*Task_ListTicketSchemas); ok {
		x.TaskType = nil
	}
}

func (x *Task) ClearGetTicket() {
	if _, ok := x.TaskType.(*Task_GetTicket); ok {
		x.TaskType = nil
	}
}

func (x *Task) ClearBulkCreateTickets() {
	if _, ok := x.TaskType.(*Task_BulkCreateTickets); ok {
		x.TaskType = nil
	}
}

func (x *Task) ClearBulkGetTickets() {
	if _, ok := x.TaskType.(*Task_BulkGetTickets); ok {
		x.TaskType = nil
	}
}

func (x *Task) ClearActionListSchemas() {
	if _, ok := x.TaskType.(*Task_ActionListSchemas); ok {
		x.TaskType = nil
	}
}

func (x *Task) ClearActionGetSchema() {
	if _, ok := x.TaskType.(*Task_ActionGetSchema); ok {
		x.TaskType = nil
	}
}

func (x *Task) ClearActionInvoke() {
	if _, ok := x.TaskType.(*Task_ActionInvoke); ok {
		x.TaskType = nil
	}
}

func (x *Task) ClearActionStatus() {
	if _, ok := x.TaskType.(*Task_ActionStatus); ok {
		x.TaskType = nil
	}
}

func (x *Task) ClearCreateSyncDiff() {
	if _, ok := x.TaskType.(*Task_CreateSyncDiff); ok {
		x.TaskType = nil
	}
}

func (x *Task) ClearCompactSyncs() {
	if _, ok := x.TaskType.(*Task_CompactSyncs_); ok {
		x.TaskType = nil
	}
}

const Task_TaskType_not_set_case case_Task_TaskType = 0
const Task_None_case case_Task_TaskType = 100
const Task_Hello_case case_Task_TaskType = 101
const Task_SyncFull_case case_Task_TaskType = 102
const Task_Grant_case case_Task_TaskType = 103
const Task_Revoke_case case_Task_TaskType = 104
const Task_CreateAccount_case case_Task_TaskType = 105
const Task_CreateResource_case case_Task_TaskType = 106
const Task_DeleteResource_case case_Task_TaskType = 107
const Task_RotateCredentials_case case_Task_TaskType = 108
const Task_EventFeed_case case_Task_TaskType = 109
const Task_CreateTicketTask_case case_Task_TaskType = 110
const Task_ListTicketSchemas_case case_Task_TaskType = 111
const Task_GetTicket_case case_Task_TaskType = 112
const Task_BulkCreateTickets_case case_Task_TaskType = 113
const Task_BulkGetTickets_case case_Task_TaskType = 114
const Task_ActionListSchemas_case case_Task_TaskType = 115
const Task_ActionGetSchema_case case_Task_TaskType = 116
const Task_ActionInvoke_case case_Task_TaskType = 117
const Task_ActionStatus_case case_Task_TaskType = 118
const Task_CreateSyncDiff_case case_Task_TaskType = 119
const Task_CompactSyncs_case case_Task_TaskType = 120

func (x *Task) WhichTaskType() case_Task_TaskType {
	if x == nil {
		return Task_TaskType_not_set_case
	}
	switch x.TaskType.(type) {
	case *Task_None:
		return Task_None_case
	case *Task_Hello:
		return Task_Hello_case
	case *Task_SyncFull:
		return Task_SyncFull_case
	case *Task_Grant:
		return Task_Grant_case
	case *Task_Revoke:
		return Task_Revoke_case
	case *Task_CreateAccount:
		return Task_CreateAccount_case
	case *Task_CreateResource:
		return Task_CreateResource_case
	case *Task_DeleteResource:
		return Task_DeleteResource_case
	case *Task_RotateCredentials:
		return Task_RotateCredentials_case
	case *Task_EventFeed:
		return Task_EventFeed_case
	case *Task_CreateTicketTask_:
		return Task_CreateTicketTask_case
	case *Task_ListTicketSchemas:
		return Task_ListTicketSchemas_case
	case *Task_GetTicket:
		return Task_GetTicket_case
	case *Task_BulkCreateTickets:
		return Task_BulkCreateTickets_case
	case *Task_BulkGetTickets:
		return Task_BulkGetTickets_case
	case *Task_ActionListSchemas:
		return Task_ActionListSchemas_case
	case *Task_ActionGetSchema:
		return Task_ActionGetSchema_case
	case *Task_ActionInvoke:
		return Task_ActionInvoke_case
	case *Task_ActionStatus:
		return Task_ActionStatus_case
	case *Task_CreateSyncDiff:
		return Task_CreateSyncDiff_case
	case *Task_CompactSyncs_:
		return Task_CompactSyncs_case
	default:
		return Task_TaskType_not_set_case
	}
}

type Task_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id     string
	Status Task_Status
	// Fields of oneof TaskType:
	None              *Task_NoneTask
	Hello             *Task_HelloTask
	SyncFull          *Task_SyncFullTask
	Grant             *Task_GrantTask
	Revoke            *Task_RevokeTask
	CreateAccount     *Task_CreateAccountTask
	CreateResource    *Task_CreateResourceTask
	DeleteResource    *Task_DeleteResourceTask
	RotateCredentials *Task_RotateCredentialsTask
	EventFeed         *Task_EventFeedTask
	CreateTicketTask  *Task_CreateTicketTask
	ListTicketSchemas *Task_ListTicketSchemasTask
	GetTicket         *Task_GetTicketTask
	BulkCreateTickets *Task_BulkCreateTicketsTask
	BulkGetTickets    *Task_BulkGetTicketsTask
	ActionListSchemas *Task_ActionListSchemasTask
	ActionGetSchema   *Task_ActionGetSchemaTask
	ActionInvoke      *Task_ActionInvokeTask
	ActionStatus      *Task_ActionStatusTask
	CreateSyncDiff    *Task_CreateSyncDiffTask
	CompactSyncs      *Task_CompactSyncs
	// -- end of TaskType
	Debug bool
}

func (b0 Task_builder) Build() *Task {
	m0 := &Task{}
	b, x := &b0, m0
	_, _ = b, x
	x.Id = b.Id
	x.Status = b.Status
	if b.None != nil {
		x.TaskType = &Task_None{b.None}
	}
	if b.Hello != nil {
		x.TaskType = &Task_Hello{b.Hello}
	}
	if b.SyncFull != nil {
		x.TaskType = &Task_SyncFull{b.SyncFull}
	}
	if b.Grant != nil {
		x.TaskType = &Task_Grant{b.Grant}
	}
	if b.Revoke != nil {
		x.TaskType = &Task_Revoke{b.Revoke}
	}
	if b.CreateAccount != nil {
		x.TaskType = &Task_CreateAccount{b.CreateAccount}
	}
	if b.CreateResource != nil {
		x.TaskType = &Task_CreateResource{b.CreateResource}
	}
	if b.DeleteResource != nil {
		x.TaskType = &Task_DeleteResource{b.DeleteResource}
	}
	if b.RotateCredentials != nil {
		x.TaskType = &Task_RotateCredentials{b.RotateCredentials}
	}
	if b.EventFeed != nil {
		x.TaskType = &Task_EventFeed{b.EventFeed}
	}
	if b.CreateTicketTask != nil {
		x.TaskType = &Task_CreateTicketTask_{b.CreateTicketTask}
	}
	if b.ListTicketSchemas != nil {
		x.TaskType = &Task_ListTicketSchemas{b.ListTicketSchemas}
	}
	if b.GetTicket != nil {
		x.TaskType = &Task_GetTicket{b.GetTicket}
	}
	if b.BulkCreateTickets != nil {
		x.TaskType = &Task_BulkCreateTickets{b.BulkCreateTickets}
	}
	if b.BulkGetTickets != nil {
		x.TaskType = &Task_BulkGetTickets{b.BulkGetTickets}
	}
	if b.ActionListSchemas != nil {
		x.TaskType = &Task_ActionListSchemas{b.ActionListSchemas}
	}
	if b.ActionGetSchema != nil {
		x.TaskType = &Task_ActionGetSchema{b.ActionGetSchema}
	}
	if b.ActionInvoke != nil {
		x.TaskType = &Task_ActionInvoke{b.ActionInvoke}
	}
	if b.ActionStatus != nil {
		x.TaskType = &Task_ActionStatus{b.ActionStatus}
	}
	if b.CreateSyncDiff != nil {
		x.TaskType = &Task_CreateSyncDiff{b.CreateSyncDiff}
	}
	if b.CompactSyncs != nil {
		x.TaskType = &Task_CompactSyncs_{b.CompactSyncs}
	}
	x.Debug = b.Debug
	return m0
}

type case_Task_TaskType protoreflect.FieldNumber

func (x case_Task_TaskType) String() string {
	md := file_c1_connectorapi_baton_v1_baton_proto_msgTypes[0].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isTask_TaskType interface {
	isTask_TaskType()
}

type Task_None struct {
	None *Task_NoneTask `protobuf:"bytes,100,opt,name=none,proto3,oneof"`
}

type Task_Hello struct {
	Hello *Task_HelloTask `protobuf:"bytes,101,opt,name=hello,proto3,oneof"`
}

type Task_SyncFull struct {
	SyncFull *Task_SyncFullTask `protobuf:"bytes,102,opt,name=sync_full,json=syncFull,proto3,oneof"`
}

type Task_Grant struct {
	Grant *Task_GrantTask `protobuf:"bytes,103,opt,name=grant,proto3,oneof"`
}

type Task_Revoke struct {
	Revoke *Task_RevokeTask `protobuf:"bytes,104,opt,name=revoke,proto3,oneof"`
}

type Task_CreateAccount struct {
	CreateAccount *Task_CreateAccountTask `protobuf:"bytes,105,opt,name=create_account,json=createAccount,proto3,oneof"`
}

type Task_CreateResource struct {
	CreateResource *Task_CreateResourceTask `protobuf:"bytes,106,opt,name=create_resource,json=createResource,proto3,oneof"`
}

type Task_DeleteResource struct {
	DeleteResource *Task_DeleteResourceTask `protobuf:"bytes,107,opt,name=delete_resource,json=deleteResource,proto3,oneof"`
}

type Task_RotateCredentials struct {
	RotateCredentials *Task_RotateCredentialsTask `protobuf:"bytes,108,opt,name=rotate_credentials,json=rotateCredentials,proto3,oneof"`
}

type Task_EventFeed struct {
	EventFeed *Task_EventFeedTask `protobuf:"bytes,109,opt,name=event_feed,json=eventFeed,proto3,oneof"`
}

type Task_CreateTicketTask_ struct {
	CreateTicketTask *Task_CreateTicketTask `protobuf:"bytes,110,opt,name=create_ticket_task,json=createTicketTask,proto3,oneof"`
}

type Task_ListTicketSchemas struct {
	ListTicketSchemas *Task_ListTicketSchemasTask `protobuf:"bytes,111,opt,name=list_ticket_schemas,json=listTicketSchemas,proto3,oneof"`
}

type Task_GetTicket struct {
	GetTicket *Task_GetTicketTask `protobuf:"bytes,112,opt,name=get_ticket,json=getTicket,proto3,oneof"`
}

type Task_BulkCreateTickets struct {
	BulkCreateTickets *Task_BulkCreateTicketsTask `protobuf:"bytes,113,opt,name=bulk_create_tickets,json=bulkCreateTickets,proto3,oneof"`
}

type Task_BulkGetTickets struct {
	BulkGetTickets *Task_BulkGetTicketsTask `protobuf:"bytes,114,opt,name=bulk_get_tickets,json=bulkGetTickets,proto3,oneof"`
}

type Task_ActionListSchemas struct {
	ActionListSchemas *Task_ActionListSchemasTask `protobuf:"bytes,115,opt,name=action_list_schemas,json=actionListSchemas,proto3,oneof"`
}

type Task_ActionGetSchema struct {
	ActionGetSchema *Task_ActionGetSchemaTask `protobuf:"bytes,116,opt,name=action_get_schema,json=actionGetSchema,proto3,oneof"`
}

type Task_ActionInvoke struct {
	ActionInvoke *Task_ActionInvokeTask `protobuf:"bytes,117,opt,name=action_invoke,json=actionInvoke,proto3,oneof"`
}

type Task_ActionStatus struct {
	ActionStatus *Task_ActionStatusTask `protobuf:"bytes,118,opt,name=action_status,json=actionStatus,proto3,oneof"`
}

type Task_CreateSyncDiff struct {
	CreateSyncDiff *Task_CreateSyncDiffTask `protobuf:"bytes,119,opt,name=create_sync_diff,json=createSyncDiff,proto3,oneof"`
}

type Task_CompactSyncs_ struct {
	CompactSyncs *Task_CompactSyncs `protobuf:"bytes,120,opt,name=compact_syncs,json=compactSyncs,proto3,oneof"`
}

func (*Task_None) isTask_TaskType() {}

func (*Task_Hello) isTask_TaskType() {}

func (*Task_SyncFull) isTask_TaskType() {}

func (*Task_Grant) isTask_TaskType() {}

func (*Task_Revoke) isTask_TaskType() {}

func (*Task_CreateAccount) isTask_TaskType() {}

func (*Task_CreateResource) isTask_TaskType() {}

func (*Task_DeleteResource) isTask_TaskType() {}

func (*Task_RotateCredentials) isTask_TaskType() {}

func (*Task_EventFeed) isTask_TaskType() {}

func (*Task_CreateTicketTask_) isTask_TaskType() {}

func (*Task_ListTicketSchemas) isTask_TaskType() {}

func (*Task_GetTicket) isTask_TaskType() {}

func (*Task_BulkCreateTickets) isTask_TaskType() {}

func (*Task_BulkGetTickets) isTask_TaskType() {}

func (*Task_ActionListSchemas) isTask_TaskType() {}

func (*Task_ActionGetSchema) isTask_TaskType() {}

func (*Task_ActionInvoke) isTask_TaskType() {}

func (*Task_ActionStatus) isTask_TaskType() {}

func (*Task_CreateSyncDiff) isTask_TaskType() {}

func (*Task_CompactSyncs_) isTask_TaskType() {}

type BatonServiceHelloRequest struct {
	state             protoimpl.MessageState              `protogen:"hybrid.v1"`
	HostId            string                              `protobuf:"bytes,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	TaskId            string                              `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"` // You may say Hello anytime, but if you are responding to a task, you must provide the task_id
	BuildInfo         *BatonServiceHelloRequest_BuildInfo `protobuf:"bytes,3,opt,name=build_info,json=buildInfo,proto3" json:"build_info,omitempty"`
	OsInfo            *BatonServiceHelloRequest_OSInfo    `protobuf:"bytes,4,opt,name=os_info,json=osInfo,proto3" json:"os_info,omitempty"`
	ConnectorMetadata *v2.ConnectorMetadata               `protobuf:"bytes,5,opt,name=connector_metadata,json=connectorMetadata,proto3" json:"connector_metadata,omitempty"`
	Annotations       []*anypb.Any                        `protobuf:"bytes,6,rep,name=annotations,proto3" json:"annotations,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *BatonServiceHelloRequest) Reset() {
	*x = BatonServiceHelloRequest{}
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatonServiceHelloRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatonServiceHelloRequest) ProtoMessage() {}

func (x *BatonServiceHelloRequest) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BatonServiceHelloRequest) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *BatonServiceHelloRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *BatonServiceHelloRequest) GetBuildInfo() *BatonServiceHelloRequest_BuildInfo {
	if x != nil {
		return x.BuildInfo
	}
	return nil
}

func (x *BatonServiceHelloRequest) GetOsInfo() *BatonServiceHelloRequest_OSInfo {
	if x != nil {
		return x.OsInfo
	}
	return nil
}

func (x *BatonServiceHelloRequest) GetConnectorMetadata() *v2.ConnectorMetadata {
	if x != nil {
		return x.ConnectorMetadata
	}
	return nil
}

func (x *BatonServiceHelloRequest) GetAnnotations() []*anypb.Any {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *BatonServiceHelloRequest) SetHostId(v string) {
	x.HostId = v
}

func (x *BatonServiceHelloRequest) SetTaskId(v string) {
	x.TaskId = v
}

func (x *BatonServiceHelloRequest) SetBuildInfo(v *BatonServiceHelloRequest_BuildInfo) {
	x.BuildInfo = v
}

func (x *BatonServiceHelloRequest) SetOsInfo(v *BatonServiceHelloRequest_OSInfo) {
	x.OsInfo = v
}

func (x *BatonServiceHelloRequest) SetConnectorMetadata(v *v2.ConnectorMetadata) {
	x.ConnectorMetadata = v
}

func (x *BatonServiceHelloRequest) SetAnnotations(v []*anypb.Any) {
	x.Annotations = v
}

func (x *BatonServiceHelloRequest) HasBuildInfo() bool {
	if x == nil {
		return false
	}
	return x.BuildInfo != nil
}

func (x *BatonServiceHelloRequest) HasOsInfo() bool {
	if x == nil {
		return false
	}
	return x.OsInfo != nil
}

func (x *BatonServiceHelloRequest) HasConnectorMetadata() bool {
	if x == nil {
		return false
	}
	return x.ConnectorMetadata != nil
}

func (x *BatonServiceHelloRequest) ClearBuildInfo() {
	x.BuildInfo = nil
}

func (x *BatonServiceHelloRequest) ClearOsInfo() {
	x.OsInfo = nil
}

func (x *BatonServiceHelloRequest) ClearConnectorMetadata() {
	x.ConnectorMetadata = nil
}

type BatonServiceHelloRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	HostId            string
	TaskId            string
	BuildInfo         *BatonServiceHelloRequest_BuildInfo
	OsInfo            *BatonServiceHelloRequest_OSInfo
	ConnectorMetadata *v2.ConnectorMetadata
	Annotations       []*anypb.Any
}

func (b0 BatonServiceHelloRequest_builder) Build() *BatonServiceHelloRequest {
	m0 := &BatonServiceHelloRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.HostId = b.HostId
	x.TaskId = b.TaskId
	x.BuildInfo = b.BuildInfo
	x.OsInfo = b.OsInfo
	x.ConnectorMetadata = b.ConnectorMetadata
	x.Annotations = b.Annotations
	return m0
}

type BatonServiceHelloResponse struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Annotations   []*anypb.Any           `protobuf:"bytes,1,rep,name=annotations,proto3" json:"annotations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatonServiceHelloResponse) Reset() {
	*x = BatonServiceHelloResponse{}
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatonServiceHelloResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatonServiceHelloResponse) ProtoMessage() {}

func (x *BatonServiceHelloResponse) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BatonServiceHelloResponse) GetAnnotations() []*anypb.Any {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *BatonServiceHelloResponse) SetAnnotations(v []*anypb.Any) {
	x.Annotations = v
}

type BatonServiceHelloResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Annotations []*anypb.Any
}

func (b0 BatonServiceHelloResponse_builder) Build() *BatonServiceHelloResponse {
	m0 := &BatonServiceHelloResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Annotations = b.Annotations
	return m0
}

type BatonServiceGetTaskRequest struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	HostId        string                 `protobuf:"bytes,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatonServiceGetTaskRequest) Reset() {
	*x = BatonServiceGetTaskRequest{}
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatonServiceGetTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatonServiceGetTaskRequest) ProtoMessage() {}

func (x *BatonServiceGetTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BatonServiceGetTaskRequest) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *BatonServiceGetTaskRequest) SetHostId(v string) {
	x.HostId = v
}

type BatonServiceGetTaskRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	HostId string
}

func (b0 BatonServiceGetTaskRequest_builder) Build() *BatonServiceGetTaskRequest {
	m0 := &BatonServiceGetTaskRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.HostId = b.HostId
	return m0
}

type BatonServiceGetTaskResponse struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Task          *Task                  `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	NextPoll      *durationpb.Duration   `protobuf:"bytes,2,opt,name=next_poll,json=nextPoll,proto3" json:"next_poll,omitempty"`
	NextHeartbeat *durationpb.Duration   `protobuf:"bytes,3,opt,name=next_heartbeat,json=nextHeartbeat,proto3" json:"next_heartbeat,omitempty"`
	Annotations   []*anypb.Any           `protobuf:"bytes,4,rep,name=annotations,proto3" json:"annotations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatonServiceGetTaskResponse) Reset() {
	*x = BatonServiceGetTaskResponse{}
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatonServiceGetTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatonServiceGetTaskResponse) ProtoMessage() {}

func (x *BatonServiceGetTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BatonServiceGetTaskResponse) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *BatonServiceGetTaskResponse) GetNextPoll() *durationpb.Duration {
	if x != nil {
		return x.NextPoll
	}
	return nil
}

func (x *BatonServiceGetTaskResponse) GetNextHeartbeat() *durationpb.Duration {
	if x != nil {
		return x.NextHeartbeat
	}
	return nil
}

func (x *BatonServiceGetTaskResponse) GetAnnotations() []*anypb.Any {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *BatonServiceGetTaskResponse) SetTask(v *Task) {
	x.Task = v
}

func (x *BatonServiceGetTaskResponse) SetNextPoll(v *durationpb.Duration) {
	x.NextPoll = v
}

func (x *BatonServiceGetTaskResponse) SetNextHeartbeat(v *durationpb.Duration) {
	x.NextHeartbeat = v
}

func (x *BatonServiceGetTaskResponse) SetAnnotations(v []*anypb.Any) {
	x.Annotations = v
}

func (x *BatonServiceGetTaskResponse) HasTask() bool {
	if x == nil {
		return false
	}
	return x.Task != nil
}

func (x *BatonServiceGetTaskResponse) HasNextPoll() bool {
	if x == nil {
		return false
	}
	return x.NextPoll != nil
}

func (x *BatonServiceGetTaskResponse) HasNextHeartbeat() bool {
	if x == nil {
		return false
	}
	return x.NextHeartbeat != nil
}

func (x *BatonServiceGetTaskResponse) ClearTask() {
	x.Task = nil
}

func (x *BatonServiceGetTaskResponse) ClearNextPoll() {
	x.NextPoll = nil
}

func (x *BatonServiceGetTaskResponse) ClearNextHeartbeat() {
	x.NextHeartbeat = nil
}

type BatonServiceGetTaskResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Task          *Task
	NextPoll      *durationpb.Duration
	NextHeartbeat *durationpb.Duration
	Annotations   []*anypb.Any
}

func (b0 BatonServiceGetTaskResponse_builder) Build() *BatonServiceGetTaskResponse {
	m0 := &BatonServiceGetTaskResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Task = b.Task
	x.NextPoll = b.NextPoll
	x.NextHeartbeat = b.NextHeartbeat
	x.Annotations = b.Annotations
	return m0
}

type BatonServiceHeartbeatRequest struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	HostId        string                 `protobuf:"bytes,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	TaskId        string                 `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Annotations   []*anypb.Any           `protobuf:"bytes,3,rep,name=annotations,proto3" json:"annotations,omitempty"` // Useful for returning status updates on the task
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatonServiceHeartbeatRequest) Reset() {
	*x = BatonServiceHeartbeatRequest{}
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatonServiceHeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatonServiceHeartbeatRequest) ProtoMessage() {}

func (x *BatonServiceHeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BatonServiceHeartbeatRequest) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *BatonServiceHeartbeatRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *BatonServiceHeartbeatRequest) GetAnnotations() []*anypb.Any {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *BatonServiceHeartbeatRequest) SetHostId(v string) {
	x.HostId = v
}

func (x *BatonServiceHeartbeatRequest) SetTaskId(v string) {
	x.TaskId = v
}

func (x *BatonServiceHeartbeatRequest) SetAnnotations(v []*anypb.Any) {
	x.Annotations = v
}

type BatonServiceHeartbeatRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	HostId      string
	TaskId      string
	Annotations []*anypb.Any
}

func (b0 BatonServiceHeartbeatRequest_builder) Build() *BatonServiceHeartbeatRequest {
	m0 := &BatonServiceHeartbeatRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.HostId = b.HostId
	x.TaskId = b.TaskId
	x.Annotations = b.Annotations
	return m0
}

type BatonServiceHeartbeatResponse struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	NextHeartbeat *durationpb.Duration   `protobuf:"bytes,1,opt,name=next_heartbeat,json=nextHeartbeat,proto3" json:"next_heartbeat,omitempty"`
	Cancelled     bool                   `protobuf:"varint,2,opt,name=cancelled,proto3" json:"cancelled,omitempty"` // Backend has decided that we should stop working on this
	Annotations   []*anypb.Any           `protobuf:"bytes,3,rep,name=annotations,proto3" json:"annotations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatonServiceHeartbeatResponse) Reset() {
	*x = BatonServiceHeartbeatResponse{}
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatonServiceHeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatonServiceHeartbeatResponse) ProtoMessage() {}

func (x *BatonServiceHeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BatonServiceHeartbeatResponse) GetNextHeartbeat() *durationpb.Duration {
	if x != nil {
		return x.NextHeartbeat
	}
	return nil
}

func (x *BatonServiceHeartbeatResponse) GetCancelled() bool {
	if x != nil {
		return x.Cancelled
	}
	return false
}

func (x *BatonServiceHeartbeatResponse) GetAnnotations() []*anypb.Any {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *BatonServiceHeartbeatResponse) SetNextHeartbeat(v *durationpb.Duration) {
	x.NextHeartbeat = v
}

func (x *BatonServiceHeartbeatResponse) SetCancelled(v bool) {
	x.Cancelled = v
}

func (x *BatonServiceHeartbeatResponse) SetAnnotations(v []*anypb.Any) {
	x.Annotations = v
}

func (x *BatonServiceHeartbeatResponse) HasNextHeartbeat() bool {
	if x == nil {
		return false
	}
	return x.NextHeartbeat != nil
}

func (x *BatonServiceHeartbeatResponse) ClearNextHeartbeat() {
	x.NextHeartbeat = nil
}

type BatonServiceHeartbeatResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	NextHeartbeat *durationpb.Duration
	Cancelled     bool
	Annotations   []*anypb.Any
}

func (b0 BatonServiceHeartbeatResponse_builder) Build() *BatonServiceHeartbeatResponse {
	m0 := &BatonServiceHeartbeatResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.NextHeartbeat = b.NextHeartbeat
	x.Cancelled = b.Cancelled
	x.Annotations = b.Annotations
	return m0
}

type BatonServiceUploadAssetRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Types that are valid to be assigned to Msg:
	//
	//	*BatonServiceUploadAssetRequest_Metadata
	//	*BatonServiceUploadAssetRequest_Data
	//	*BatonServiceUploadAssetRequest_Eof
	Msg           isBatonServiceUploadAssetRequest_Msg `protobuf_oneof:"msg"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatonServiceUploadAssetRequest) Reset() {
	*x = BatonServiceUploadAssetRequest{}
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatonServiceUploadAssetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatonServiceUploadAssetRequest) ProtoMessage() {}

func (x *BatonServiceUploadAssetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BatonServiceUploadAssetRequest) GetMsg() isBatonServiceUploadAssetRequest_Msg {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *BatonServiceUploadAssetRequest) GetMetadata() *BatonServiceUploadAssetRequest_UploadMetadata {
	if x != nil {
		if x, ok := x.Msg.(*BatonServiceUploadAssetRequest_Metadata); ok {
			return x.Metadata
		}
	}
	return nil
}

func (x *BatonServiceUploadAssetRequest) GetData() *BatonServiceUploadAssetRequest_UploadData {
	if x != nil {
		if x, ok := x.Msg.(*BatonServiceUploadAssetRequest_Data); ok {
			return x.Data
		}
	}
	return nil
}

func (x *BatonServiceUploadAssetRequest) GetEof() *BatonServiceUploadAssetRequest_UploadEOF {
	if x != nil {
		if x, ok := x.Msg.(*BatonServiceUploadAssetRequest_Eof); ok {
			return x.Eof
		}
	}
	return nil
}

func (x *BatonServiceUploadAssetRequest) SetMetadata(v *BatonServiceUploadAssetRequest_UploadMetadata) {
	if v == nil {
		x.Msg = nil
		return
	}
	x.Msg = &BatonServiceUploadAssetRequest_Metadata{v}
}

func (x *BatonServiceUploadAssetRequest) SetData(v *BatonServiceUploadAssetRequest_UploadData) {
	if v == nil {
		x.Msg = nil
		return
	}
	x.Msg = &BatonServiceUploadAssetRequest_Data{v}
}

func (x *BatonServiceUploadAssetRequest) SetEof(v *BatonServiceUploadAssetRequest_UploadEOF) {
	if v == nil {
		x.Msg = nil
		return
	}
	x.Msg = &BatonServiceUploadAssetRequest_Eof{v}
}

func (x *BatonServiceUploadAssetRequest) HasMsg() bool {
	if x == nil {
		return false
	}
	return x.Msg != nil
}

func (x *BatonServiceUploadAssetRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	_, ok := x.Msg.(*BatonServiceUploadAssetRequest_Metadata)
	return ok
}

func (x *BatonServiceUploadAssetRequest) HasData() bool {
	if x == nil {
		return false
	}
	_, ok := x.Msg.(*BatonServiceUploadAssetRequest_Data)
	return ok
}

func (x *BatonServiceUploadAssetRequest) HasEof() bool {
	if x == nil {
		return false
	}
	_, ok := x.Msg.(*BatonServiceUploadAssetRequest_Eof)
	return ok
}

func (x *BatonServiceUploadAssetRequest) ClearMsg() {
	x.Msg = nil
}

func (x *BatonServiceUploadAssetRequest) ClearMetadata() {
	if _, ok := x.Msg.(*BatonServiceUploadAssetRequest_Metadata); ok {
		x.Msg = nil
	}
}

func (x *BatonServiceUploadAssetRequest) ClearData() {
	if _, ok := x.Msg.(*BatonServiceUploadAssetRequest_Data); ok {
		x.Msg = nil
	}
}

func (x *BatonServiceUploadAssetRequest) ClearEof() {
	if _, ok := x.Msg.(*BatonServiceUploadAssetRequest_Eof); ok {
		x.Msg = nil
	}
}

const BatonServiceUploadAssetRequest_Msg_not_set_case case_BatonServiceUploadAssetRequest_Msg = 0
const BatonServiceUploadAssetRequest_Metadata_case case_BatonServiceUploadAssetRequest_Msg = 100
const BatonServiceUploadAssetRequest_Data_case case_BatonServiceUploadAssetRequest_Msg = 101
const BatonServiceUploadAssetRequest_Eof_case case_BatonServiceUploadAssetRequest_Msg = 102

func (x *BatonServiceUploadAssetRequest) WhichMsg() case_BatonServiceUploadAssetRequest_Msg {
	if x == nil {
		return BatonServiceUploadAssetRequest_Msg_not_set_case
	}
	switch x.Msg.(type) {
	case *BatonServiceUploadAssetRequest_Metadata:
		return BatonServiceUploadAssetRequest_Metadata_case
	case *BatonServiceUploadAssetRequest_Data:
		return BatonServiceUploadAssetRequest_Data_case
	case *BatonServiceUploadAssetRequest_Eof:
		return BatonServiceUploadAssetRequest_Eof_case
	default:
		return BatonServiceUploadAssetRequest_Msg_not_set_case
	}
}

type BatonServiceUploadAssetRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof Msg:
	Metadata *BatonServiceUploadAssetRequest_UploadMetadata
	Data     *BatonServiceUploadAssetRequest_UploadData
	Eof      *BatonServiceUploadAssetRequest_UploadEOF
	// -- end of Msg
}

func (b0 BatonServiceUploadAssetRequest_builder) Build() *BatonServiceUploadAssetRequest {
	m0 := &BatonServiceUploadAssetRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Metadata != nil {
		x.Msg = &BatonServiceUploadAssetRequest_Metadata{b.Metadata}
	}
	if b.Data != nil {
		x.Msg = &BatonServiceUploadAssetRequest_Data{b.Data}
	}
	if b.Eof != nil {
		x.Msg = &BatonServiceUploadAssetRequest_Eof{b.Eof}
	}
	return m0
}

type case_BatonServiceUploadAssetRequest_Msg protoreflect.FieldNumber

func (x case_BatonServiceUploadAssetRequest_Msg) String() string {
	md := file_c1_connectorapi_baton_v1_baton_proto_msgTypes[7].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isBatonServiceUploadAssetRequest_Msg interface {
	isBatonServiceUploadAssetRequest_Msg()
}

type BatonServiceUploadAssetRequest_Metadata struct {
	Metadata *BatonServiceUploadAssetRequest_UploadMetadata `protobuf:"bytes,100,opt,name=metadata,proto3,oneof"`
}

type BatonServiceUploadAssetRequest_Data struct {
	Data *BatonServiceUploadAssetRequest_UploadData `protobuf:"bytes,101,opt,name=data,proto3,oneof"`
}

type BatonServiceUploadAssetRequest_Eof struct {
	Eof *BatonServiceUploadAssetRequest_UploadEOF `protobuf:"bytes,102,opt,name=eof,proto3,oneof"`
}

func (*BatonServiceUploadAssetRequest_Metadata) isBatonServiceUploadAssetRequest_Msg() {}

func (*BatonServiceUploadAssetRequest_Data) isBatonServiceUploadAssetRequest_Msg() {}

func (*BatonServiceUploadAssetRequest_Eof) isBatonServiceUploadAssetRequest_Msg() {}

type BatonServiceUploadAssetResponse struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Annotations   []*anypb.Any           `protobuf:"bytes,1,rep,name=annotations,proto3" json:"annotations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatonServiceUploadAssetResponse) Reset() {
	*x = BatonServiceUploadAssetResponse{}
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatonServiceUploadAssetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatonServiceUploadAssetResponse) ProtoMessage() {}

func (x *BatonServiceUploadAssetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BatonServiceUploadAssetResponse) GetAnnotations() []*anypb.Any {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *BatonServiceUploadAssetResponse) SetAnnotations(v []*anypb.Any) {
	x.Annotations = v
}

type BatonServiceUploadAssetResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Annotations []*anypb.Any
}

func (b0 BatonServiceUploadAssetResponse_builder) Build() *BatonServiceUploadAssetResponse {
	m0 := &BatonServiceUploadAssetResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Annotations = b.Annotations
	return m0
}

// Connector submits a task has been finished. It should always be removed from the queue, and if it isn't a fatal error, we should re-add it to the queue to try again.
type BatonServiceFinishTaskRequest struct {
	state  protoimpl.MessageState `protogen:"hybrid.v1"`
	HostId string                 `protobuf:"bytes,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	TaskId string                 `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Status *status.Status         `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	// Types that are valid to be assigned to FinalState:
	//
	//	*BatonServiceFinishTaskRequest_Error_
	//	*BatonServiceFinishTaskRequest_Success_
	FinalState    isBatonServiceFinishTaskRequest_FinalState `protobuf_oneof:"final_state"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatonServiceFinishTaskRequest) Reset() {
	*x = BatonServiceFinishTaskRequest{}
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatonServiceFinishTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatonServiceFinishTaskRequest) ProtoMessage() {}

func (x *BatonServiceFinishTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BatonServiceFinishTaskRequest) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *BatonServiceFinishTaskRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *BatonServiceFinishTaskRequest) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *BatonServiceFinishTaskRequest) GetFinalState() isBatonServiceFinishTaskRequest_FinalState {
	if x != nil {
		return x.FinalState
	}
	return nil
}

func (x *BatonServiceFinishTaskRequest) GetError() *BatonServiceFinishTaskRequest_Error {
	if x != nil {
		if x, ok := x.FinalState.(*BatonServiceFinishTaskRequest_Error_); ok {
			return x.Error
		}
	}
	return nil
}

func (x *BatonServiceFinishTaskRequest) GetSuccess() *BatonServiceFinishTaskRequest_Success {
	if x != nil {
		if x, ok := x.FinalState.(*BatonServiceFinishTaskRequest_Success_); ok {
			return x.Success
		}
	}
	return nil
}

func (x *BatonServiceFinishTaskRequest) SetHostId(v string) {
	x.HostId = v
}

func (x *BatonServiceFinishTaskRequest) SetTaskId(v string) {
	x.TaskId = v
}

func (x *BatonServiceFinishTaskRequest) SetStatus(v *status.Status) {
	x.Status = v
}

func (x *BatonServiceFinishTaskRequest) SetError(v *BatonServiceFinishTaskRequest_Error) {
	if v == nil {
		x.FinalState = nil
		return
	}
	x.FinalState = &BatonServiceFinishTaskRequest_Error_{v}
}

func (x *BatonServiceFinishTaskRequest) SetSuccess(v *BatonServiceFinishTaskRequest_Success) {
	if v == nil {
		x.FinalState = nil
		return
	}
	x.FinalState = &BatonServiceFinishTaskRequest_Success_{v}
}

func (x *BatonServiceFinishTaskRequest) HasStatus() bool {
	if x == nil {
		return false
	}
	return x.Status != nil
}

func (x *BatonServiceFinishTaskRequest) HasFinalState() bool {
	if x == nil {
		return false
	}
	return x.FinalState != nil
}

func (x *BatonServiceFinishTaskRequest) HasError() bool {
	if x == nil {
		return false
	}
	_, ok := x.FinalState.(*BatonServiceFinishTaskRequest_Error_)
	return ok
}

func (x *BatonServiceFinishTaskRequest) HasSuccess() bool {
	if x == nil {
		return false
	}
	_, ok := x.FinalState.(*BatonServiceFinishTaskRequest_Success_)
	return ok
}

func (x *BatonServiceFinishTaskRequest) ClearStatus() {
	x.Status = nil
}

func (x *BatonServiceFinishTaskRequest) ClearFinalState() {
	x.FinalState = nil
}

func (x *BatonServiceFinishTaskRequest) ClearError() {
	if _, ok := x.FinalState.(*BatonServiceFinishTaskRequest_Error_); ok {
		x.FinalState = nil
	}
}

func (x *BatonServiceFinishTaskRequest) ClearSuccess() {
	if _, ok := x.FinalState.(*BatonServiceFinishTaskRequest_Success_); ok {
		x.FinalState = nil
	}
}

const BatonServiceFinishTaskRequest_FinalState_not_set_case case_BatonServiceFinishTaskRequest_FinalState = 0
const BatonServiceFinishTaskRequest_Error_case case_BatonServiceFinishTaskRequest_FinalState = 100
const BatonServiceFinishTaskRequest_Success_case case_BatonServiceFinishTaskRequest_FinalState = 101

func (x *BatonServiceFinishTaskRequest) WhichFinalState() case_BatonServiceFinishTaskRequest_FinalState {
	if x == nil {
		return BatonServiceFinishTaskRequest_FinalState_not_set_case
	}
	switch x.FinalState.(type) {
	case *BatonServiceFinishTaskRequest_Error_:
		return BatonServiceFinishTaskRequest_Error_case
	case *BatonServiceFinishTaskRequest_Success_:
		return BatonServiceFinishTaskRequest_Success_case
	default:
		return BatonServiceFinishTaskRequest_FinalState_not_set_case
	}
}

type BatonServiceFinishTaskRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	HostId string
	TaskId string
	Status *status.Status
	// Fields of oneof FinalState:
	Error   *BatonServiceFinishTaskRequest_Error
	Success *BatonServiceFinishTaskRequest_Success
	// -- end of FinalState
}

func (b0 BatonServiceFinishTaskRequest_builder) Build() *BatonServiceFinishTaskRequest {
	m0 := &BatonServiceFinishTaskRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.HostId = b.HostId
	x.TaskId = b.TaskId
	x.Status = b.Status
	if b.Error != nil {
		x.FinalState = &BatonServiceFinishTaskRequest_Error_{b.Error}
	}
	if b.Success != nil {
		x.FinalState = &BatonServiceFinishTaskRequest_Success_{b.Success}
	}
	return m0
}

type case_BatonServiceFinishTaskRequest_FinalState protoreflect.FieldNumber

func (x case_BatonServiceFinishTaskRequest_FinalState) String() string {
	md := file_c1_connectorapi_baton_v1_baton_proto_msgTypes[9].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isBatonServiceFinishTaskRequest_FinalState interface {
	isBatonServiceFinishTaskRequest_FinalState()
}

type BatonServiceFinishTaskRequest_Error_ struct {
	Error *BatonServiceFinishTaskRequest_Error `protobuf:"bytes,100,opt,name=error,proto3,oneof"`
}

type BatonServiceFinishTaskRequest_Success_ struct {
	Success *BatonServiceFinishTaskRequest_Success `protobuf:"bytes,101,opt,name=success,proto3,oneof"`
}

func (*BatonServiceFinishTaskRequest_Error_) isBatonServiceFinishTaskRequest_FinalState() {}

func (*BatonServiceFinishTaskRequest_Success_) isBatonServiceFinishTaskRequest_FinalState() {}

type BatonServiceFinishTaskResponse struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Annotations   []*anypb.Any           `protobuf:"bytes,1,rep,name=annotations,proto3" json:"annotations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatonServiceFinishTaskResponse) Reset() {
	*x = BatonServiceFinishTaskResponse{}
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatonServiceFinishTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatonServiceFinishTaskResponse) ProtoMessage() {}

func (x *BatonServiceFinishTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BatonServiceFinishTaskResponse) GetAnnotations() []*anypb.Any {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *BatonServiceFinishTaskResponse) SetAnnotations(v []*anypb.Any) {
	x.Annotations = v
}

type BatonServiceFinishTaskResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Annotations []*anypb.Any
}

func (b0 BatonServiceFinishTaskResponse_builder) Build() *BatonServiceFinishTaskResponse {
	m0 := &BatonServiceFinishTaskResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Annotations = b.Annotations
	return m0
}

type StartDebuggingRequest struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartDebuggingRequest) Reset() {
	*x = StartDebuggingRequest{}
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartDebuggingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartDebuggingRequest) ProtoMessage() {}

func (x *StartDebuggingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type StartDebuggingRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 StartDebuggingRequest_builder) Build() *StartDebuggingRequest {
	m0 := &StartDebuggingRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type StartDebuggingResponse struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartDebuggingResponse) Reset() {
	*x = StartDebuggingResponse{}
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartDebuggingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartDebuggingResponse) ProtoMessage() {}

func (x *StartDebuggingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StartDebuggingResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *StartDebuggingResponse) SetStatus(v bool) {
	x.Status = v
}

type StartDebuggingResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Status bool
}

func (b0 StartDebuggingResponse_builder) Build() *StartDebuggingResponse {
	m0 := &StartDebuggingResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Status = b.Status
	return m0
}

type Task_NoneTask struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Annotations   []*anypb.Any           `protobuf:"bytes,1,rep,name=annotations,proto3" json:"annotations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_NoneTask) Reset() {
	*x = Task_NoneTask{}
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_NoneTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_NoneTask) ProtoMessage() {}

func (x *Task_NoneTask) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Task_NoneTask) GetAnnotations() []*anypb.Any {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *Task_NoneTask) SetAnnotations(v []*anypb.Any) {
	x.Annotations = v
}

type Task_NoneTask_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Annotations []*anypb.Any
}

func (b0 Task_NoneTask_builder) Build() *Task_NoneTask {
	m0 := &Task_NoneTask{}
	b, x := &b0, m0
	_, _ = b, x
	x.Annotations = b.Annotations
	return m0
}

type Task_HelloTask struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Annotations   []*anypb.Any           `protobuf:"bytes,1,rep,name=annotations,proto3" json:"annotations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_HelloTask) Reset() {
	*x = Task_HelloTask{}
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_HelloTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_HelloTask) ProtoMessage() {}

func (x *Task_HelloTask) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Task_HelloTask) GetAnnotations() []*anypb.Any {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *Task_HelloTask) SetAnnotations(v []*anypb.Any) {
	x.Annotations = v
}

type Task_HelloTask_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Annotations []*anypb.Any
}

func (b0 Task_HelloTask_builder) Build() *Task_HelloTask {
	m0 := &Task_HelloTask{}
	b, x := &b0, m0
	_, _ = b, x
	x.Annotations = b.Annotations
	return m0
}

type Task_SyncFullTask struct {
	state                     protoimpl.MessageState `protogen:"hybrid.v1"`
	Annotations               []*anypb.Any           `protobuf:"bytes,1,rep,name=annotations,proto3" json:"annotations,omitempty"`
	SkipExpandGrants          bool                   `protobuf:"varint,2,opt,name=skip_expand_grants,json=skipExpandGrants,proto3" json:"skip_expand_grants,omitempty"`
	SkipEntitlementsAndGrants bool                   `protobuf:"varint,3,opt,name=skip_entitlements_and_grants,json=skipEntitlementsAndGrants,proto3" json:"skip_entitlements_and_grants,omitempty"`
	SkipGrants                bool                   `protobuf:"varint,4,opt,name=skip_grants,json=skipGrants,proto3" json:"skip_grants,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *Task_SyncFullTask) Reset() {
	*x = Task_SyncFullTask{}
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_SyncFullTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_SyncFullTask) ProtoMessage() {}

func (x *Task_SyncFullTask) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Task_SyncFullTask) GetAnnotations() []*anypb.Any {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *Task_SyncFullTask) GetSkipExpandGrants() bool {
	if x != nil {
		return x.SkipExpandGrants
	}
	return false
}

func (x *Task_SyncFullTask) GetSkipEntitlementsAndGrants() bool {
	if x != nil {
		return x.SkipEntitlementsAndGrants
	}
	return false
}

func (x *Task_SyncFullTask) GetSkipGrants() bool {
	if x != nil {
		return x.SkipGrants
	}
	return false
}

func (x *Task_SyncFullTask) SetAnnotations(v []*anypb.Any) {
	x.Annotations = v
}

func (x *Task_SyncFullTask) SetSkipExpandGrants(v bool) {
	x.SkipExpandGrants = v
}

func (x *Task_SyncFullTask) SetSkipEntitlementsAndGrants(v bool) {
	x.SkipEntitlementsAndGrants = v
}

func (x *Task_SyncFullTask) SetSkipGrants(v bool) {
	x.SkipGrants = v
}

type Task_SyncFullTask_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Annotations               []*anypb.Any
	SkipExpandGrants          bool
	SkipEntitlementsAndGrants bool
	SkipGrants                bool
}

func (b0 Task_SyncFullTask_builder) Build() *Task_SyncFullTask {
	m0 := &Task_SyncFullTask{}
	b, x := &b0, m0
	_, _ = b, x
	x.Annotations = b.Annotations
	x.SkipExpandGrants = b.SkipExpandGrants
	x.SkipEntitlementsAndGrants = b.SkipEntitlementsAndGrants
	x.SkipGrants = b.SkipGrants
	return m0
}

type Task_EventFeedTask struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Annotations   []*anypb.Any           `protobuf:"bytes,1,rep,name=annotations,proto3" json:"annotations,omitempty"`
	StartAt       *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_at,json=startAt,proto3" json:"start_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_EventFeedTask) Reset() {
	*x = Task_EventFeedTask{}
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_EventFeedTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_EventFeedTask) ProtoMessage() {}

func (x *Task_EventFeedTask) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Task_EventFeedTask) GetAnnotations() []*anypb.Any {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *Task_EventFeedTask) GetStartAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartAt
	}
	return nil
}

func (x *Task_EventFeedTask) SetAnnotations(v []*anypb.Any) {
	x.Annotations = v
}

func (x *Task_EventFeedTask) SetStartAt(v *timestamppb.Timestamp) {
	x.StartAt = v
}

func (x *Task_EventFeedTask) HasStartAt() bool {
	if x == nil {
		return false
	}
	return x.StartAt != nil
}

func (x *Task_EventFeedTask) ClearStartAt() {
	x.StartAt = nil
}

type Task_EventFeedTask_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Annotations []*anypb.Any
	StartAt     *timestamppb.Timestamp
}

func (b0 Task_EventFeedTask_builder) Build() *Task_EventFeedTask {
	m0 := &Task_EventFeedTask{}
	b, x := &b0, m0
	_, _ = b, x
	x.Annotations = b.Annotations
	x.StartAt = b.StartAt
	return m0
}

type Task_GrantTask struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Entitlement   *v2.Entitlement        `protobuf:"bytes,1,opt,name=entitlement,proto3" json:"entitlement,omitempty"`
	Principal     *v2.Resource           `protobuf:"bytes,2,opt,name=principal,proto3" json:"principal,omitempty"`
	Annotations   []*anypb.Any           `protobuf:"bytes,3,rep,name=annotations,proto3" json:"annotations,omitempty"`
	Duration      *durationpb.Duration   `protobuf:"bytes,4,opt,name=duration,proto3" json:"duration,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_GrantTask) Reset() {
	*x = Task_GrantTask{}
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_GrantTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_GrantTask) ProtoMessage() {}

func (x *Task_GrantTask) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Task_GrantTask) GetEntitlement() *v2.Entitlement {
	if x != nil {
		return x.Entitlement
	}
	return nil
}

func (x *Task_GrantTask) GetPrincipal() *v2.Resource {
	if x != nil {
		return x.Principal
	}
	return nil
}

func (x *Task_GrantTask) GetAnnotations() []*anypb.Any {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *Task_GrantTask) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *Task_GrantTask) SetEntitlement(v *v2.Entitlement) {
	x.Entitlement = v
}

func (x *Task_GrantTask) SetPrincipal(v *v2.Resource) {
	x.Principal = v
}

func (x *Task_GrantTask) SetAnnotations(v []*anypb.Any) {
	x.Annotations = v
}

func (x *Task_GrantTask) SetDuration(v *durationpb.Duration) {
	x.Duration = v
}

func (x *Task_GrantTask) HasEntitlement() bool {
	if x == nil {
		return false
	}
	return x.Entitlement != nil
}

func (x *Task_GrantTask) HasPrincipal() bool {
	if x == nil {
		return false
	}
	return x.Principal != nil
}

func (x *Task_GrantTask) HasDuration() bool {
	if x == nil {
		return false
	}
	return x.Duration != nil
}

func (x *Task_GrantTask) ClearEntitlement() {
	x.Entitlement = nil
}

func (x *Task_GrantTask) ClearPrincipal() {
	x.Principal = nil
}

func (x *Task_GrantTask) ClearDuration() {
	x.Duration = nil
}

type Task_GrantTask_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Entitlement *v2.Entitlement
	Principal   *v2.Resource
	Annotations []*anypb.Any
	Duration    *durationpb.Duration
}

func (b0 Task_GrantTask_builder) Build() *Task_GrantTask {
	m0 := &Task_GrantTask{}
	b, x := &b0, m0
	_, _ = b, x
	x.Entitlement = b.Entitlement
	x.Principal = b.Principal
	x.Annotations = b.Annotations
	x.Duration = b.Duration
	return m0
}

type Task_RevokeTask struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Grant         *v2.Grant              `protobuf:"bytes,1,opt,name=grant,proto3" json:"grant,omitempty"`
	Annotations   []*anypb.Any           `protobuf:"bytes,2,rep,name=annotations,proto3" json:"annotations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_RevokeTask) Reset() {
	*x = Task_RevokeTask{}
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_RevokeTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_RevokeTask) ProtoMessage() {}

func (x *Task_RevokeTask) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Task_RevokeTask) GetGrant() *v2.Grant {
	if x != nil {
		return x.Grant
	}
	return nil
}

func (x *Task_RevokeTask) GetAnnotations() []*anypb.Any {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *Task_RevokeTask) SetGrant(v *v2.Grant) {
	x.Grant = v
}

func (x *Task_RevokeTask) SetAnnotations(v []*anypb.Any) {
	x.Annotations = v
}

func (x *Task_RevokeTask) HasGrant() bool {
	if x == nil {
		return false
	}
	return x.Grant != nil
}

func (x *Task_RevokeTask) ClearGrant() {
	x.Grant = nil
}

type Task_RevokeTask_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Grant       *v2.Grant
	Annotations []*anypb.Any
}

func (b0 Task_RevokeTask_builder) Build() *Task_RevokeTask {
	m0 := &Task_RevokeTask{}
	b, x := &b0, m0
	_, _ = b, x
	x.Grant = b.Grant
	x.Annotations = b.Annotations
	return m0
}

type Task_CreateAccountTask struct {
	state             protoimpl.MessageState `protogen:"hybrid.v1"`
	AccountInfo       *v2.AccountInfo        `protobuf:"bytes,1,opt,name=account_info,json=accountInfo,proto3" json:"account_info,omitempty"`
	CredentialOptions *v2.CredentialOptions  `protobuf:"bytes,2,opt,name=credential_options,json=credentialOptions,proto3" json:"credential_options,omitempty"`
	EncryptionConfigs []*v2.EncryptionConfig `protobuf:"bytes,3,rep,name=encryption_configs,json=encryptionConfigs,proto3" json:"encryption_configs,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Task_CreateAccountTask) Reset() {
	*x = Task_CreateAccountTask{}
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_CreateAccountTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_CreateAccountTask) ProtoMessage() {}

func (x *Task_CreateAccountTask) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Task_CreateAccountTask) GetAccountInfo() *v2.AccountInfo {
	if x != nil {
		return x.AccountInfo
	}
	return nil
}

func (x *Task_CreateAccountTask) GetCredentialOptions() *v2.CredentialOptions {
	if x != nil {
		return x.CredentialOptions
	}
	return nil
}

func (x *Task_CreateAccountTask) GetEncryptionConfigs() []*v2.EncryptionConfig {
	if x != nil {
		return x.EncryptionConfigs
	}
	return nil
}

func (x *Task_CreateAccountTask) SetAccountInfo(v *v2.AccountInfo) {
	x.AccountInfo = v
}

func (x *Task_CreateAccountTask) SetCredentialOptions(v *v2.CredentialOptions) {
	x.CredentialOptions = v
}

func (x *Task_CreateAccountTask) SetEncryptionConfigs(v []*v2.EncryptionConfig) {
	x.EncryptionConfigs = v
}

func (x *Task_CreateAccountTask) HasAccountInfo() bool {
	if x == nil {
		return false
	}
	return x.AccountInfo != nil
}

func (x *Task_CreateAccountTask) HasCredentialOptions() bool {
	if x == nil {
		return false
	}
	return x.CredentialOptions != nil
}

func (x *Task_CreateAccountTask) ClearAccountInfo() {
	x.AccountInfo = nil
}

func (x *Task_CreateAccountTask) ClearCredentialOptions() {
	x.CredentialOptions = nil
}

type Task_CreateAccountTask_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	AccountInfo       *v2.AccountInfo
	CredentialOptions *v2.CredentialOptions
	EncryptionConfigs []*v2.EncryptionConfig
}

func (b0 Task_CreateAccountTask_builder) Build() *Task_CreateAccountTask {
	m0 := &Task_CreateAccountTask{}
	b, x := &b0, m0
	_, _ = b, x
	x.AccountInfo = b.AccountInfo
	x.CredentialOptions = b.CredentialOptions
	x.EncryptionConfigs = b.EncryptionConfigs
	return m0
}

type Task_CreateResourceTask struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Resource      *v2.Resource           `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_CreateResourceTask) Reset() {
	*x = Task_CreateResourceTask{}
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_CreateResourceTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_CreateResourceTask) ProtoMessage() {}

func (x *Task_CreateResourceTask) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Task_CreateResourceTask) GetResource() *v2.Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *Task_CreateResourceTask) SetResource(v *v2.Resource) {
	x.Resource = v
}

func (x *Task_CreateResourceTask) HasResource() bool {
	if x == nil {
		return false
	}
	return x.Resource != nil
}

func (x *Task_CreateResourceTask) ClearResource() {
	x.Resource = nil
}

type Task_CreateResourceTask_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Resource *v2.Resource
}

func (b0 Task_CreateResourceTask_builder) Build() *Task_CreateResourceTask {
	m0 := &Task_CreateResourceTask{}
	b, x := &b0, m0
	_, _ = b, x
	x.Resource = b.Resource
	return m0
}

type Task_DeleteResourceTask struct {
	state            protoimpl.MessageState `protogen:"hybrid.v1"`
	ResourceId       *v2.ResourceId         `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	ParentResourceId *v2.ResourceId         `protobuf:"bytes,2,opt,name=parent_resource_id,json=parentResourceId,proto3" json:"parent_resource_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Task_DeleteResourceTask) Reset() {
	*x = Task_DeleteResourceTask{}
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_DeleteResourceTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_DeleteResourceTask) ProtoMessage() {}

func (x *Task_DeleteResourceTask) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Task_DeleteResourceTask) GetResourceId() *v2.ResourceId {
	if x != nil {
		return x.ResourceId
	}
	return nil
}

func (x *Task_DeleteResourceTask) GetParentResourceId() *v2.ResourceId {
	if x != nil {
		return x.ParentResourceId
	}
	return nil
}

func (x *Task_DeleteResourceTask) SetResourceId(v *v2.ResourceId) {
	x.ResourceId = v
}

func (x *Task_DeleteResourceTask) SetParentResourceId(v *v2.ResourceId) {
	x.ParentResourceId = v
}

func (x *Task_DeleteResourceTask) HasResourceId() bool {
	if x == nil {
		return false
	}
	return x.ResourceId != nil
}

func (x *Task_DeleteResourceTask) HasParentResourceId() bool {
	if x == nil {
		return false
	}
	return x.ParentResourceId != nil
}

func (x *Task_DeleteResourceTask) ClearResourceId() {
	x.ResourceId = nil
}

func (x *Task_DeleteResourceTask) ClearParentResourceId() {
	x.ParentResourceId = nil
}

type Task_DeleteResourceTask_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ResourceId       *v2.ResourceId
	ParentResourceId *v2.ResourceId
}

func (b0 Task_DeleteResourceTask_builder) Build() *Task_DeleteResourceTask {
	m0 := &Task_DeleteResourceTask{}
	b, x := &b0, m0
	_, _ = b, x
	x.ResourceId = b.ResourceId
	x.ParentResourceId = b.ParentResourceId
	return m0
}

type Task_RotateCredentialsTask struct {
	state             protoimpl.MessageState `protogen:"hybrid.v1"`
	ResourceId        *v2.ResourceId         `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	CredentialOptions *v2.CredentialOptions  `protobuf:"bytes,2,opt,name=credential_options,json=credentialOptions,proto3" json:"credential_options,omitempty"`
	EncryptionConfigs []*v2.EncryptionConfig `protobuf:"bytes,3,rep,name=encryption_configs,json=encryptionConfigs,proto3" json:"encryption_configs,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Task_RotateCredentialsTask) Reset() {
	*x = Task_RotateCredentialsTask{}
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_RotateCredentialsTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_RotateCredentialsTask) ProtoMessage() {}

func (x *Task_RotateCredentialsTask) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Task_RotateCredentialsTask) GetResourceId() *v2.ResourceId {
	if x != nil {
		return x.ResourceId
	}
	return nil
}

func (x *Task_RotateCredentialsTask) GetCredentialOptions() *v2.CredentialOptions {
	if x != nil {
		return x.CredentialOptions
	}
	return nil
}

func (x *Task_RotateCredentialsTask) GetEncryptionConfigs() []*v2.EncryptionConfig {
	if x != nil {
		return x.EncryptionConfigs
	}
	return nil
}

func (x *Task_RotateCredentialsTask) SetResourceId(v *v2.ResourceId) {
	x.ResourceId = v
}

func (x *Task_RotateCredentialsTask) SetCredentialOptions(v *v2.CredentialOptions) {
	x.CredentialOptions = v
}

func (x *Task_RotateCredentialsTask) SetEncryptionConfigs(v []*v2.EncryptionConfig) {
	x.EncryptionConfigs = v
}

func (x *Task_RotateCredentialsTask) HasResourceId() bool {
	if x == nil {
		return false
	}
	return x.ResourceId != nil
}

func (x *Task_RotateCredentialsTask) HasCredentialOptions() bool {
	if x == nil {
		return false
	}
	return x.CredentialOptions != nil
}

func (x *Task_RotateCredentialsTask) ClearResourceId() {
	x.ResourceId = nil
}

func (x *Task_RotateCredentialsTask) ClearCredentialOptions() {
	x.CredentialOptions = nil
}

type Task_RotateCredentialsTask_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ResourceId        *v2.ResourceId
	CredentialOptions *v2.CredentialOptions
	EncryptionConfigs []*v2.EncryptionConfig
}

func (b0 Task_RotateCredentialsTask_builder) Build() *Task_RotateCredentialsTask {
	m0 := &Task_RotateCredentialsTask{}
	b, x := &b0, m0
	_, _ = b, x
	x.ResourceId = b.ResourceId
	x.CredentialOptions = b.CredentialOptions
	x.EncryptionConfigs = b.EncryptionConfigs
	return m0
}

type Task_CreateTicketTask struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	TicketRequest *v2.TicketRequest      `protobuf:"bytes,1,opt,name=ticket_request,json=ticketRequest,proto3" json:"ticket_request,omitempty"`
	TicketSchema  *v2.TicketSchema       `protobuf:"bytes,2,opt,name=ticket_schema,json=ticketSchema,proto3" json:"ticket_schema,omitempty"`
	Annotations   []*anypb.Any           `protobuf:"bytes,3,rep,name=annotations,proto3" json:"annotations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_CreateTicketTask) Reset() {
	*x = Task_CreateTicketTask{}
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_CreateTicketTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_CreateTicketTask) ProtoMessage() {}

func (x *Task_CreateTicketTask) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Task_CreateTicketTask) GetTicketRequest() *v2.TicketRequest {
	if x != nil {
		return x.TicketRequest
	}
	return nil
}

func (x *Task_CreateTicketTask) GetTicketSchema() *v2.TicketSchema {
	if x != nil {
		return x.TicketSchema
	}
	return nil
}

func (x *Task_CreateTicketTask) GetAnnotations() []*anypb.Any {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *Task_CreateTicketTask) SetTicketRequest(v *v2.TicketRequest) {
	x.TicketRequest = v
}

func (x *Task_CreateTicketTask) SetTicketSchema(v *v2.TicketSchema) {
	x.TicketSchema = v
}

func (x *Task_CreateTicketTask) SetAnnotations(v []*anypb.Any) {
	x.Annotations = v
}

func (x *Task_CreateTicketTask) HasTicketRequest() bool {
	if x == nil {
		return false
	}
	return x.TicketRequest != nil
}

func (x *Task_CreateTicketTask) HasTicketSchema() bool {
	if x == nil {
		return false
	}
	return x.TicketSchema != nil
}

func (x *Task_CreateTicketTask) ClearTicketRequest() {
	x.TicketRequest = nil
}

func (x *Task_CreateTicketTask) ClearTicketSchema() {
	x.TicketSchema = nil
}

type Task_CreateTicketTask_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	TicketRequest *v2.TicketRequest
	TicketSchema  *v2.TicketSchema
	Annotations   []*anypb.Any
}

func (b0 Task_CreateTicketTask_builder) Build() *Task_CreateTicketTask {
	m0 := &Task_CreateTicketTask{}
	b, x := &b0, m0
	_, _ = b, x
	x.TicketRequest = b.TicketRequest
	x.TicketSchema = b.TicketSchema
	x.Annotations = b.Annotations
	return m0
}

type Task_BulkCreateTicketsTask struct {
	state          protoimpl.MessageState   `protogen:"hybrid.v1"`
	TicketRequests []*Task_CreateTicketTask `protobuf:"bytes,1,rep,name=ticket_requests,json=ticketRequests,proto3" json:"ticket_requests,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Task_BulkCreateTicketsTask) Reset() {
	*x = Task_BulkCreateTicketsTask{}
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_BulkCreateTicketsTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_BulkCreateTicketsTask) ProtoMessage() {}

func (x *Task_BulkCreateTicketsTask) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Task_BulkCreateTicketsTask) GetTicketRequests() []*Task_CreateTicketTask {
	if x != nil {
		return x.TicketRequests
	}
	return nil
}

func (x *Task_BulkCreateTicketsTask) SetTicketRequests(v []*Task_CreateTicketTask) {
	x.TicketRequests = v
}

type Task_BulkCreateTicketsTask_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	TicketRequests []*Task_CreateTicketTask
}

func (b0 Task_BulkCreateTicketsTask_builder) Build() *Task_BulkCreateTicketsTask {
	m0 := &Task_BulkCreateTicketsTask{}
	b, x := &b0, m0
	_, _ = b, x
	x.TicketRequests = b.TicketRequests
	return m0
}

type Task_BulkGetTicketsTask struct {
	state          protoimpl.MessageState `protogen:"hybrid.v1"`
	TicketRequests []*Task_GetTicketTask  `protobuf:"bytes,1,rep,name=ticket_requests,json=ticketRequests,proto3" json:"ticket_requests,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Task_BulkGetTicketsTask) Reset() {
	*x = Task_BulkGetTicketsTask{}
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_BulkGetTicketsTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_BulkGetTicketsTask) ProtoMessage() {}

func (x *Task_BulkGetTicketsTask) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Task_BulkGetTicketsTask) GetTicketRequests() []*Task_GetTicketTask {
	if x != nil {
		return x.TicketRequests
	}
	return nil
}

func (x *Task_BulkGetTicketsTask) SetTicketRequests(v []*Task_GetTicketTask) {
	x.TicketRequests = v
}

type Task_BulkGetTicketsTask_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	TicketRequests []*Task_GetTicketTask
}

func (b0 Task_BulkGetTicketsTask_builder) Build() *Task_BulkGetTicketsTask {
	m0 := &Task_BulkGetTicketsTask{}
	b, x := &b0, m0
	_, _ = b, x
	x.TicketRequests = b.TicketRequests
	return m0
}

type Task_ListTicketSchemasTask struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Annotations   []*anypb.Any           `protobuf:"bytes,1,rep,name=annotations,proto3" json:"annotations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_ListTicketSchemasTask) Reset() {
	*x = Task_ListTicketSchemasTask{}
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_ListTicketSchemasTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_ListTicketSchemasTask) ProtoMessage() {}

func (x *Task_ListTicketSchemasTask) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Task_ListTicketSchemasTask) GetAnnotations() []*anypb.Any {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *Task_ListTicketSchemasTask) SetAnnotations(v []*anypb.Any) {
	x.Annotations = v
}

type Task_ListTicketSchemasTask_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Annotations []*anypb.Any
}

func (b0 Task_ListTicketSchemasTask_builder) Build() *Task_ListTicketSchemasTask {
	m0 := &Task_ListTicketSchemasTask{}
	b, x := &b0, m0
	_, _ = b, x
	x.Annotations = b.Annotations
	return m0
}

type Task_GetTicketTask struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	TicketId      string                 `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	Annotations   []*anypb.Any           `protobuf:"bytes,2,rep,name=annotations,proto3" json:"annotations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_GetTicketTask) Reset() {
	*x = Task_GetTicketTask{}
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_GetTicketTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_GetTicketTask) ProtoMessage() {}

func (x *Task_GetTicketTask) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Task_GetTicketTask) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *Task_GetTicketTask) GetAnnotations() []*anypb.Any {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *Task_GetTicketTask) SetTicketId(v string) {
	x.TicketId = v
}

func (x *Task_GetTicketTask) SetAnnotations(v []*anypb.Any) {
	x.Annotations = v
}

type Task_GetTicketTask_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	TicketId    string
	Annotations []*anypb.Any
}

func (b0 Task_GetTicketTask_builder) Build() *Task_GetTicketTask {
	m0 := &Task_GetTicketTask{}
	b, x := &b0, m0
	_, _ = b, x
	x.TicketId = b.TicketId
	x.Annotations = b.Annotations
	return m0
}

type Task_ActionListSchemasTask struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Annotations   []*anypb.Any           `protobuf:"bytes,1,rep,name=annotations,proto3" json:"annotations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_ActionListSchemasTask) Reset() {
	*x = Task_ActionListSchemasTask{}
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_ActionListSchemasTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_ActionListSchemasTask) ProtoMessage() {}

func (x *Task_ActionListSchemasTask) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Task_ActionListSchemasTask) GetAnnotations() []*anypb.Any {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *Task_ActionListSchemasTask) SetAnnotations(v []*anypb.Any) {
	x.Annotations = v
}

type Task_ActionListSchemasTask_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Annotations []*anypb.Any
}

func (b0 Task_ActionListSchemasTask_builder) Build() *Task_ActionListSchemasTask {
	m0 := &Task_ActionListSchemasTask{}
	b, x := &b0, m0
	_, _ = b, x
	x.Annotations = b.Annotations
	return m0
}

type Task_ActionGetSchemaTask struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Annotations   []*anypb.Any           `protobuf:"bytes,2,rep,name=annotations,proto3" json:"annotations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_ActionGetSchemaTask) Reset() {
	*x = Task_ActionGetSchemaTask{}
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_ActionGetSchemaTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_ActionGetSchemaTask) ProtoMessage() {}

func (x *Task_ActionGetSchemaTask) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Task_ActionGetSchemaTask) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Task_ActionGetSchemaTask) GetAnnotations() []*anypb.Any {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *Task_ActionGetSchemaTask) SetName(v string) {
	x.Name = v
}

func (x *Task_ActionGetSchemaTask) SetAnnotations(v []*anypb.Any) {
	x.Annotations = v
}

type Task_ActionGetSchemaTask_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name        string
	Annotations []*anypb.Any
}

func (b0 Task_ActionGetSchemaTask_builder) Build() *Task_ActionGetSchemaTask {
	m0 := &Task_ActionGetSchemaTask{}
	b, x := &b0, m0
	_, _ = b, x
	x.Name = b.Name
	x.Annotations = b.Annotations
	return m0
}

type Task_ActionInvokeTask struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Args          *structpb.Struct       `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty"`
	Annotations   []*anypb.Any           `protobuf:"bytes,3,rep,name=annotations,proto3" json:"annotations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_ActionInvokeTask) Reset() {
	*x = Task_ActionInvokeTask{}
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_ActionInvokeTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_ActionInvokeTask) ProtoMessage() {}

func (x *Task_ActionInvokeTask) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Task_ActionInvokeTask) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Task_ActionInvokeTask) GetArgs() *structpb.Struct {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *Task_ActionInvokeTask) GetAnnotations() []*anypb.Any {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *Task_ActionInvokeTask) SetName(v string) {
	x.Name = v
}

func (x *Task_ActionInvokeTask) SetArgs(v *structpb.Struct) {
	x.Args = v
}

func (x *Task_ActionInvokeTask) SetAnnotations(v []*anypb.Any) {
	x.Annotations = v
}

func (x *Task_ActionInvokeTask) HasArgs() bool {
	if x == nil {
		return false
	}
	return x.Args != nil
}

func (x *Task_ActionInvokeTask) ClearArgs() {
	x.Args = nil
}

type Task_ActionInvokeTask_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name        string
	Args        *structpb.Struct
	Annotations []*anypb.Any
}

func (b0 Task_ActionInvokeTask_builder) Build() *Task_ActionInvokeTask {
	m0 := &Task_ActionInvokeTask{}
	b, x := &b0, m0
	_, _ = b, x
	x.Name = b.Name
	x.Args = b.Args
	x.Annotations = b.Annotations
	return m0
}

type Task_ActionStatusTask struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Annotations   []*anypb.Any           `protobuf:"bytes,3,rep,name=annotations,proto3" json:"annotations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_ActionStatusTask) Reset() {
	*x = Task_ActionStatusTask{}
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_ActionStatusTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_ActionStatusTask) ProtoMessage() {}

func (x *Task_ActionStatusTask) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Task_ActionStatusTask) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Task_ActionStatusTask) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Task_ActionStatusTask) GetAnnotations() []*anypb.Any {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *Task_ActionStatusTask) SetName(v string) {
	x.Name = v
}

func (x *Task_ActionStatusTask) SetId(v string) {
	x.Id = v
}

func (x *Task_ActionStatusTask) SetAnnotations(v []*anypb.Any) {
	x.Annotations = v
}

type Task_ActionStatusTask_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name        string
	Id          string
	Annotations []*anypb.Any
}

func (b0 Task_ActionStatusTask_builder) Build() *Task_ActionStatusTask {
	m0 := &Task_ActionStatusTask{}
	b, x := &b0, m0
	_, _ = b, x
	x.Name = b.Name
	x.Id = b.Id
	x.Annotations = b.Annotations
	return m0
}

type Task_CreateSyncDiffTask struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Open to suggestions here
	BaseSyncId    string       `protobuf:"bytes,1,opt,name=base_sync_id,json=baseSyncId,proto3" json:"base_sync_id,omitempty"`
	NewSyncId     string       `protobuf:"bytes,2,opt,name=new_sync_id,json=newSyncId,proto3" json:"new_sync_id,omitempty"`
	Annotations   []*anypb.Any `protobuf:"bytes,3,rep,name=annotations,proto3" json:"annotations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_CreateSyncDiffTask) Reset() {
	*x = Task_CreateSyncDiffTask{}
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_CreateSyncDiffTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_CreateSyncDiffTask) ProtoMessage() {}

func (x *Task_CreateSyncDiffTask) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Task_CreateSyncDiffTask) GetBaseSyncId() string {
	if x != nil {
		return x.BaseSyncId
	}
	return ""
}

func (x *Task_CreateSyncDiffTask) GetNewSyncId() string {
	if x != nil {
		return x.NewSyncId
	}
	return ""
}

func (x *Task_CreateSyncDiffTask) GetAnnotations() []*anypb.Any {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *Task_CreateSyncDiffTask) SetBaseSyncId(v string) {
	x.BaseSyncId = v
}

func (x *Task_CreateSyncDiffTask) SetNewSyncId(v string) {
	x.NewSyncId = v
}

func (x *Task_CreateSyncDiffTask) SetAnnotations(v []*anypb.Any) {
	x.Annotations = v
}

type Task_CreateSyncDiffTask_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Open to suggestions here
	BaseSyncId  string
	NewSyncId   string
	Annotations []*anypb.Any
}

func (b0 Task_CreateSyncDiffTask_builder) Build() *Task_CreateSyncDiffTask {
	m0 := &Task_CreateSyncDiffTask{}
	b, x := &b0, m0
	_, _ = b, x
	x.BaseSyncId = b.BaseSyncId
	x.NewSyncId = b.NewSyncId
	x.Annotations = b.Annotations
	return m0
}

type Task_CompactSyncs struct {
	state            protoimpl.MessageState               `protogen:"hybrid.v1"`
	CompactableSyncs []*Task_CompactSyncs_CompactableSync `protobuf:"bytes,1,rep,name=compactable_syncs,json=compactableSyncs,proto3" json:"compactable_syncs,omitempty"`
	Annotations      []*anypb.Any                         `protobuf:"bytes,2,rep,name=annotations,proto3" json:"annotations,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Task_CompactSyncs) Reset() {
	*x = Task_CompactSyncs{}
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_CompactSyncs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_CompactSyncs) ProtoMessage() {}

func (x *Task_CompactSyncs) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Task_CompactSyncs) GetCompactableSyncs() []*Task_CompactSyncs_CompactableSync {
	if x != nil {
		return x.CompactableSyncs
	}
	return nil
}

func (x *Task_CompactSyncs) GetAnnotations() []*anypb.Any {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *Task_CompactSyncs) SetCompactableSyncs(v []*Task_CompactSyncs_CompactableSync) {
	x.CompactableSyncs = v
}

func (x *Task_CompactSyncs) SetAnnotations(v []*anypb.Any) {
	x.Annotations = v
}

type Task_CompactSyncs_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	CompactableSyncs []*Task_CompactSyncs_CompactableSync
	Annotations      []*anypb.Any
}

func (b0 Task_CompactSyncs_builder) Build() *Task_CompactSyncs {
	m0 := &Task_CompactSyncs{}
	b, x := &b0, m0
	_, _ = b, x
	x.CompactableSyncs = b.CompactableSyncs
	x.Annotations = b.Annotations
	return m0
}

type Task_CompactSyncs_CompactableSync struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	FilePath      string                 `protobuf:"bytes,1,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	SyncId        string                 `protobuf:"bytes,2,opt,name=sync_id,json=syncId,proto3" json:"sync_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_CompactSyncs_CompactableSync) Reset() {
	*x = Task_CompactSyncs_CompactableSync{}
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_CompactSyncs_CompactableSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_CompactSyncs_CompactableSync) ProtoMessage() {}

func (x *Task_CompactSyncs_CompactableSync) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Task_CompactSyncs_CompactableSync) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *Task_CompactSyncs_CompactableSync) GetSyncId() string {
	if x != nil {
		return x.SyncId
	}
	return ""
}

func (x *Task_CompactSyncs_CompactableSync) SetFilePath(v string) {
	x.FilePath = v
}

func (x *Task_CompactSyncs_CompactableSync) SetSyncId(v string) {
	x.SyncId = v
}

type Task_CompactSyncs_CompactableSync_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	FilePath string
	SyncId   string
}

func (b0 Task_CompactSyncs_CompactableSync_builder) Build() *Task_CompactSyncs_CompactableSync {
	m0 := &Task_CompactSyncs_CompactableSync{}
	b, x := &b0, m0
	_, _ = b, x
	x.FilePath = b.FilePath
	x.SyncId = b.SyncId
	return m0
}

type BatonServiceHelloRequest_BuildInfo struct {
	state          protoimpl.MessageState `protogen:"hybrid.v1"`
	LangVersion    string                 `protobuf:"bytes,1,opt,name=lang_version,json=langVersion,proto3" json:"lang_version,omitempty"`
	Package        string                 `protobuf:"bytes,2,opt,name=package,proto3" json:"package,omitempty"`
	PackageVersion string                 `protobuf:"bytes,3,opt,name=package_version,json=packageVersion,proto3" json:"package_version,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *BatonServiceHelloRequest_BuildInfo) Reset() {
	*x = BatonServiceHelloRequest_BuildInfo{}
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatonServiceHelloRequest_BuildInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatonServiceHelloRequest_BuildInfo) ProtoMessage() {}

func (x *BatonServiceHelloRequest_BuildInfo) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BatonServiceHelloRequest_BuildInfo) GetLangVersion() string {
	if x != nil {
		return x.LangVersion
	}
	return ""
}

func (x *BatonServiceHelloRequest_BuildInfo) GetPackage() string {
	if x != nil {
		return x.Package
	}
	return ""
}

func (x *BatonServiceHelloRequest_BuildInfo) GetPackageVersion() string {
	if x != nil {
		return x.PackageVersion
	}
	return ""
}

func (x *BatonServiceHelloRequest_BuildInfo) SetLangVersion(v string) {
	x.LangVersion = v
}

func (x *BatonServiceHelloRequest_BuildInfo) SetPackage(v string) {
	x.Package = v
}

func (x *BatonServiceHelloRequest_BuildInfo) SetPackageVersion(v string) {
	x.PackageVersion = v
}

type BatonServiceHelloRequest_BuildInfo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	LangVersion    string
	Package        string
	PackageVersion string
}

func (b0 BatonServiceHelloRequest_BuildInfo_builder) Build() *BatonServiceHelloRequest_BuildInfo {
	m0 := &BatonServiceHelloRequest_BuildInfo{}
	b, x := &b0, m0
	_, _ = b, x
	x.LangVersion = b.LangVersion
	x.Package = b.Package
	x.PackageVersion = b.PackageVersion
	return m0
}

type BatonServiceHelloRequest_OSInfo struct {
	state                protoimpl.MessageState `protogen:"hybrid.v1"`
	Hostname             string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Os                   string                 `protobuf:"bytes,2,opt,name=os,proto3" json:"os,omitempty"`
	Platform             string                 `protobuf:"bytes,3,opt,name=platform,proto3" json:"platform,omitempty"`
	PlatformVersion      string                 `protobuf:"bytes,4,opt,name=platform_version,json=platformVersion,proto3" json:"platform_version,omitempty"`
	PlatformFamily       string                 `protobuf:"bytes,5,opt,name=platform_family,json=platformFamily,proto3" json:"platform_family,omitempty"`
	KernelVersion        string                 `protobuf:"bytes,6,opt,name=kernel_version,json=kernelVersion,proto3" json:"kernel_version,omitempty"`
	KernelArch           string                 `protobuf:"bytes,7,opt,name=kernel_arch,json=kernelArch,proto3" json:"kernel_arch,omitempty"`
	VirtualizationSystem string                 `protobuf:"bytes,8,opt,name=virtualization_system,json=virtualizationSystem,proto3" json:"virtualization_system,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *BatonServiceHelloRequest_OSInfo) Reset() {
	*x = BatonServiceHelloRequest_OSInfo{}
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatonServiceHelloRequest_OSInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatonServiceHelloRequest_OSInfo) ProtoMessage() {}

func (x *BatonServiceHelloRequest_OSInfo) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BatonServiceHelloRequest_OSInfo) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *BatonServiceHelloRequest_OSInfo) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *BatonServiceHelloRequest_OSInfo) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *BatonServiceHelloRequest_OSInfo) GetPlatformVersion() string {
	if x != nil {
		return x.PlatformVersion
	}
	return ""
}

func (x *BatonServiceHelloRequest_OSInfo) GetPlatformFamily() string {
	if x != nil {
		return x.PlatformFamily
	}
	return ""
}

func (x *BatonServiceHelloRequest_OSInfo) GetKernelVersion() string {
	if x != nil {
		return x.KernelVersion
	}
	return ""
}

func (x *BatonServiceHelloRequest_OSInfo) GetKernelArch() string {
	if x != nil {
		return x.KernelArch
	}
	return ""
}

func (x *BatonServiceHelloRequest_OSInfo) GetVirtualizationSystem() string {
	if x != nil {
		return x.VirtualizationSystem
	}
	return ""
}

func (x *BatonServiceHelloRequest_OSInfo) SetHostname(v string) {
	x.Hostname = v
}

func (x *BatonServiceHelloRequest_OSInfo) SetOs(v string) {
	x.Os = v
}

func (x *BatonServiceHelloRequest_OSInfo) SetPlatform(v string) {
	x.Platform = v
}

func (x *BatonServiceHelloRequest_OSInfo) SetPlatformVersion(v string) {
	x.PlatformVersion = v
}

func (x *BatonServiceHelloRequest_OSInfo) SetPlatformFamily(v string) {
	x.PlatformFamily = v
}

func (x *BatonServiceHelloRequest_OSInfo) SetKernelVersion(v string) {
	x.KernelVersion = v
}

func (x *BatonServiceHelloRequest_OSInfo) SetKernelArch(v string) {
	x.KernelArch = v
}

func (x *BatonServiceHelloRequest_OSInfo) SetVirtualizationSystem(v string) {
	x.VirtualizationSystem = v
}

type BatonServiceHelloRequest_OSInfo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Hostname             string
	Os                   string
	Platform             string
	PlatformVersion      string
	PlatformFamily       string
	KernelVersion        string
	KernelArch           string
	VirtualizationSystem string
}

func (b0 BatonServiceHelloRequest_OSInfo_builder) Build() *BatonServiceHelloRequest_OSInfo {
	m0 := &BatonServiceHelloRequest_OSInfo{}
	b, x := &b0, m0
	_, _ = b, x
	x.Hostname = b.Hostname
	x.Os = b.Os
	x.Platform = b.Platform
	x.PlatformVersion = b.PlatformVersion
	x.PlatformFamily = b.PlatformFamily
	x.KernelVersion = b.KernelVersion
	x.KernelArch = b.KernelArch
	x.VirtualizationSystem = b.VirtualizationSystem
	return m0
}

type BatonServiceUploadAssetRequest_UploadMetadata struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	HostId        string                 `protobuf:"bytes,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	TaskId        string                 `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Annotations   []*anypb.Any           `protobuf:"bytes,4,rep,name=annotations,proto3" json:"annotations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatonServiceUploadAssetRequest_UploadMetadata) Reset() {
	*x = BatonServiceUploadAssetRequest_UploadMetadata{}
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatonServiceUploadAssetRequest_UploadMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatonServiceUploadAssetRequest_UploadMetadata) ProtoMessage() {}

func (x *BatonServiceUploadAssetRequest_UploadMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BatonServiceUploadAssetRequest_UploadMetadata) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *BatonServiceUploadAssetRequest_UploadMetadata) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *BatonServiceUploadAssetRequest_UploadMetadata) GetAnnotations() []*anypb.Any {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *BatonServiceUploadAssetRequest_UploadMetadata) SetHostId(v string) {
	x.HostId = v
}

func (x *BatonServiceUploadAssetRequest_UploadMetadata) SetTaskId(v string) {
	x.TaskId = v
}

func (x *BatonServiceUploadAssetRequest_UploadMetadata) SetAnnotations(v []*anypb.Any) {
	x.Annotations = v
}

type BatonServiceUploadAssetRequest_UploadMetadata_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	HostId      string
	TaskId      string
	Annotations []*anypb.Any
}

func (b0 BatonServiceUploadAssetRequest_UploadMetadata_builder) Build() *BatonServiceUploadAssetRequest_UploadMetadata {
	m0 := &BatonServiceUploadAssetRequest_UploadMetadata{}
	b, x := &b0, m0
	_, _ = b, x
	x.HostId = b.HostId
	x.TaskId = b.TaskId
	x.Annotations = b.Annotations
	return m0
}

type BatonServiceUploadAssetRequest_UploadData struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// 1MB limit
	Data          []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatonServiceUploadAssetRequest_UploadData) Reset() {
	*x = BatonServiceUploadAssetRequest_UploadData{}
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatonServiceUploadAssetRequest_UploadData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatonServiceUploadAssetRequest_UploadData) ProtoMessage() {}

func (x *BatonServiceUploadAssetRequest_UploadData) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BatonServiceUploadAssetRequest_UploadData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *BatonServiceUploadAssetRequest_UploadData) SetData(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.Data = v
}

type BatonServiceUploadAssetRequest_UploadData_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// 1MB limit
	Data []byte
}

func (b0 BatonServiceUploadAssetRequest_UploadData_builder) Build() *BatonServiceUploadAssetRequest_UploadData {
	m0 := &BatonServiceUploadAssetRequest_UploadData{}
	b, x := &b0, m0
	_, _ = b, x
	x.Data = b.Data
	return m0
}

type BatonServiceUploadAssetRequest_UploadEOF struct {
	state          protoimpl.MessageState `protogen:"hybrid.v1"`
	Sha256Checksum []byte                 `protobuf:"bytes,1,opt,name=sha256_checksum,json=sha256Checksum,proto3" json:"sha256_checksum,omitempty"`
	Annotations    []*anypb.Any           `protobuf:"bytes,2,rep,name=annotations,proto3" json:"annotations,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *BatonServiceUploadAssetRequest_UploadEOF) Reset() {
	*x = BatonServiceUploadAssetRequest_UploadEOF{}
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatonServiceUploadAssetRequest_UploadEOF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatonServiceUploadAssetRequest_UploadEOF) ProtoMessage() {}

func (x *BatonServiceUploadAssetRequest_UploadEOF) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BatonServiceUploadAssetRequest_UploadEOF) GetSha256Checksum() []byte {
	if x != nil {
		return x.Sha256Checksum
	}
	return nil
}

func (x *BatonServiceUploadAssetRequest_UploadEOF) GetAnnotations() []*anypb.Any {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *BatonServiceUploadAssetRequest_UploadEOF) SetSha256Checksum(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.Sha256Checksum = v
}

func (x *BatonServiceUploadAssetRequest_UploadEOF) SetAnnotations(v []*anypb.Any) {
	x.Annotations = v
}

type BatonServiceUploadAssetRequest_UploadEOF_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Sha256Checksum []byte
	Annotations    []*anypb.Any
}

func (b0 BatonServiceUploadAssetRequest_UploadEOF_builder) Build() *BatonServiceUploadAssetRequest_UploadEOF {
	m0 := &BatonServiceUploadAssetRequest_UploadEOF{}
	b, x := &b0, m0
	_, _ = b, x
	x.Sha256Checksum = b.Sha256Checksum
	x.Annotations = b.Annotations
	return m0
}

type BatonServiceFinishTaskRequest_Error struct {
	state        protoimpl.MessageState `protogen:"hybrid.v1"`
	NonRetryable bool                   `protobuf:"varint,1,opt,name=non_retryable,json=nonRetryable,proto3" json:"non_retryable,omitempty"`
	Annotations  []*anypb.Any           `protobuf:"bytes,2,rep,name=annotations,proto3" json:"annotations,omitempty"`
	// The response from the connector, if any.
	Response      *anypb.Any `protobuf:"bytes,3,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatonServiceFinishTaskRequest_Error) Reset() {
	*x = BatonServiceFinishTaskRequest_Error{}
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatonServiceFinishTaskRequest_Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatonServiceFinishTaskRequest_Error) ProtoMessage() {}

func (x *BatonServiceFinishTaskRequest_Error) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BatonServiceFinishTaskRequest_Error) GetNonRetryable() bool {
	if x != nil {
		return x.NonRetryable
	}
	return false
}

func (x *BatonServiceFinishTaskRequest_Error) GetAnnotations() []*anypb.Any {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *BatonServiceFinishTaskRequest_Error) GetResponse() *anypb.Any {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *BatonServiceFinishTaskRequest_Error) SetNonRetryable(v bool) {
	x.NonRetryable = v
}

func (x *BatonServiceFinishTaskRequest_Error) SetAnnotations(v []*anypb.Any) {
	x.Annotations = v
}

func (x *BatonServiceFinishTaskRequest_Error) SetResponse(v *anypb.Any) {
	x.Response = v
}

func (x *BatonServiceFinishTaskRequest_Error) HasResponse() bool {
	if x == nil {
		return false
	}
	return x.Response != nil
}

func (x *BatonServiceFinishTaskRequest_Error) ClearResponse() {
	x.Response = nil
}

type BatonServiceFinishTaskRequest_Error_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	NonRetryable bool
	Annotations  []*anypb.Any
	// The response from the connector, if any.
	Response *anypb.Any
}

func (b0 BatonServiceFinishTaskRequest_Error_builder) Build() *BatonServiceFinishTaskRequest_Error {
	m0 := &BatonServiceFinishTaskRequest_Error{}
	b, x := &b0, m0
	_, _ = b, x
	x.NonRetryable = b.NonRetryable
	x.Annotations = b.Annotations
	x.Response = b.Response
	return m0
}

type BatonServiceFinishTaskRequest_Success struct {
	state       protoimpl.MessageState `protogen:"hybrid.v1"`
	Annotations []*anypb.Any           `protobuf:"bytes,1,rep,name=annotations,proto3" json:"annotations,omitempty"`
	// The response from the connector, if any.
	Response      *anypb.Any `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatonServiceFinishTaskRequest_Success) Reset() {
	*x = BatonServiceFinishTaskRequest_Success{}
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatonServiceFinishTaskRequest_Success) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatonServiceFinishTaskRequest_Success) ProtoMessage() {}

func (x *BatonServiceFinishTaskRequest_Success) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_baton_v1_baton_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BatonServiceFinishTaskRequest_Success) GetAnnotations() []*anypb.Any {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *BatonServiceFinishTaskRequest_Success) GetResponse() *anypb.Any {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *BatonServiceFinishTaskRequest_Success) SetAnnotations(v []*anypb.Any) {
	x.Annotations = v
}

func (x *BatonServiceFinishTaskRequest_Success) SetResponse(v *anypb.Any) {
	x.Response = v
}

func (x *BatonServiceFinishTaskRequest_Success) HasResponse() bool {
	if x == nil {
		return false
	}
	return x.Response != nil
}

func (x *BatonServiceFinishTaskRequest_Success) ClearResponse() {
	x.Response = nil
}

type BatonServiceFinishTaskRequest_Success_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Annotations []*anypb.Any
	// The response from the connector, if any.
	Response *anypb.Any
}

func (b0 BatonServiceFinishTaskRequest_Success_builder) Build() *BatonServiceFinishTaskRequest_Success {
	m0 := &BatonServiceFinishTaskRequest_Success{}
	b, x := &b0, m0
	_, _ = b, x
	x.Annotations = b.Annotations
	x.Response = b.Response
	return m0
}

var File_c1_connectorapi_baton_v1_baton_proto protoreflect.FileDescriptor

const file_c1_connectorapi_baton_v1_baton_proto_rawDesc = "" +
	"\n" +
	"$c1/connectorapi/baton/v1/baton.proto\x12\x18c1.connectorapi.baton.v1\x1a\x1fc1/connector/v2/connector.proto\x1a!c1/connector/v2/entitlement.proto\x1a\x1bc1/connector/v2/grant.proto\x1a\x1ec1/connector/v2/resource.proto\x1a\x1cc1/connector/v2/ticket.proto\x1a\x19google/protobuf/any.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x17google/rpc/status.proto\x1a\x17validate/validate.proto\"\xfa'\n" +
	"\x04Task\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12=\n" +
	"\x06status\x18\x02 \x01(\x0e2%.c1.connectorapi.baton.v1.Task.StatusR\x06status\x12=\n" +
	"\x04none\x18d \x01(\v2'.c1.connectorapi.baton.v1.Task.NoneTaskH\x00R\x04none\x12@\n" +
	"\x05hello\x18e \x01(\v2(.c1.connectorapi.baton.v1.Task.HelloTaskH\x00R\x05hello\x12J\n" +
	"\tsync_full\x18f \x01(\v2+.c1.connectorapi.baton.v1.Task.SyncFullTaskH\x00R\bsyncFull\x12@\n" +
	"\x05grant\x18g \x01(\v2(.c1.connectorapi.baton.v1.Task.GrantTaskH\x00R\x05grant\x12C\n" +
	"\x06revoke\x18h \x01(\v2).c1.connectorapi.baton.v1.Task.RevokeTaskH\x00R\x06revoke\x12Y\n" +
	"\x0ecreate_account\x18i \x01(\v20.c1.connectorapi.baton.v1.Task.CreateAccountTaskH\x00R\rcreateAccount\x12\\\n" +
	"\x0fcreate_resource\x18j \x01(\v21.c1.connectorapi.baton.v1.Task.CreateResourceTaskH\x00R\x0ecreateResource\x12\\\n" +
	"\x0fdelete_resource\x18k \x01(\v21.c1.connectorapi.baton.v1.Task.DeleteResourceTaskH\x00R\x0edeleteResource\x12e\n" +
	"\x12rotate_credentials\x18l \x01(\v24.c1.connectorapi.baton.v1.Task.RotateCredentialsTaskH\x00R\x11rotateCredentials\x12M\n" +
	"\n" +
	"event_feed\x18m \x01(\v2,.c1.connectorapi.baton.v1.Task.EventFeedTaskH\x00R\teventFeed\x12_\n" +
	"\x12create_ticket_task\x18n \x01(\v2/.c1.connectorapi.baton.v1.Task.CreateTicketTaskH\x00R\x10createTicketTask\x12f\n" +
	"\x13list_ticket_schemas\x18o \x01(\v24.c1.connectorapi.baton.v1.Task.ListTicketSchemasTaskH\x00R\x11listTicketSchemas\x12M\n" +
	"\n" +
	"get_ticket\x18p \x01(\v2,.c1.connectorapi.baton.v1.Task.GetTicketTaskH\x00R\tgetTicket\x12f\n" +
	"\x13bulk_create_tickets\x18q \x01(\v24.c1.connectorapi.baton.v1.Task.BulkCreateTicketsTaskH\x00R\x11bulkCreateTickets\x12]\n" +
	"\x10bulk_get_tickets\x18r \x01(\v21.c1.connectorapi.baton.v1.Task.BulkGetTicketsTaskH\x00R\x0ebulkGetTickets\x12f\n" +
	"\x13action_list_schemas\x18s \x01(\v24.c1.connectorapi.baton.v1.Task.ActionListSchemasTaskH\x00R\x11actionListSchemas\x12`\n" +
	"\x11action_get_schema\x18t \x01(\v22.c1.connectorapi.baton.v1.Task.ActionGetSchemaTaskH\x00R\x0factionGetSchema\x12V\n" +
	"\raction_invoke\x18u \x01(\v2/.c1.connectorapi.baton.v1.Task.ActionInvokeTaskH\x00R\factionInvoke\x12V\n" +
	"\raction_status\x18v \x01(\v2/.c1.connectorapi.baton.v1.Task.ActionStatusTaskH\x00R\factionStatus\x12]\n" +
	"\x10create_sync_diff\x18w \x01(\v21.c1.connectorapi.baton.v1.Task.CreateSyncDiffTaskH\x00R\x0ecreateSyncDiff\x12R\n" +
	"\rcompact_syncs\x18x \x01(\v2+.c1.connectorapi.baton.v1.Task.CompactSyncsH\x00R\fcompactSyncs\x12\x14\n" +
	"\x05debug\x18\x03 \x01(\bR\x05debug\x1aB\n" +
	"\bNoneTask\x126\n" +
	"\vannotations\x18\x01 \x03(\v2\x14.google.protobuf.AnyR\vannotations\x1aC\n" +
	"\tHelloTask\x126\n" +
	"\vannotations\x18\x01 \x03(\v2\x14.google.protobuf.AnyR\vannotations\x1a\xd6\x01\n" +
	"\fSyncFullTask\x126\n" +
	"\vannotations\x18\x01 \x03(\v2\x14.google.protobuf.AnyR\vannotations\x12,\n" +
	"\x12skip_expand_grants\x18\x02 \x01(\bR\x10skipExpandGrants\x12?\n" +
	"\x1cskip_entitlements_and_grants\x18\x03 \x01(\bR\x19skipEntitlementsAndGrants\x12\x1f\n" +
	"\vskip_grants\x18\x04 \x01(\bR\n" +
	"skipGrants\x1a~\n" +
	"\rEventFeedTask\x126\n" +
	"\vannotations\x18\x01 \x03(\v2\x14.google.protobuf.AnyR\vannotations\x125\n" +
	"\bstart_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\astartAt\x1a\xf3\x01\n" +
	"\tGrantTask\x12>\n" +
	"\ventitlement\x18\x01 \x01(\v2\x1c.c1.connector.v2.EntitlementR\ventitlement\x127\n" +
	"\tprincipal\x18\x02 \x01(\v2\x19.c1.connector.v2.ResourceR\tprincipal\x126\n" +
	"\vannotations\x18\x03 \x03(\v2\x14.google.protobuf.AnyR\vannotations\x125\n" +
	"\bduration\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\bduration\x1ar\n" +
	"\n" +
	"RevokeTask\x12,\n" +
	"\x05grant\x18\x01 \x01(\v2\x16.c1.connector.v2.GrantR\x05grant\x126\n" +
	"\vannotations\x18\x02 \x03(\v2\x14.google.protobuf.AnyR\vannotations\x1a\xf9\x01\n" +
	"\x11CreateAccountTask\x12?\n" +
	"\faccount_info\x18\x01 \x01(\v2\x1c.c1.connector.v2.AccountInfoR\vaccountInfo\x12Q\n" +
	"\x12credential_options\x18\x02 \x01(\v2\".c1.connector.v2.CredentialOptionsR\x11credentialOptions\x12P\n" +
	"\x12encryption_configs\x18\x03 \x03(\v2!.c1.connector.v2.EncryptionConfigR\x11encryptionConfigs\x1aK\n" +
	"\x12CreateResourceTask\x125\n" +
	"\bresource\x18\x01 \x01(\v2\x19.c1.connector.v2.ResourceR\bresource\x1a\x9d\x01\n" +
	"\x12DeleteResourceTask\x12<\n" +
	"\vresource_id\x18\x01 \x01(\v2\x1b.c1.connector.v2.ResourceIdR\n" +
	"resourceId\x12I\n" +
	"\x12parent_resource_id\x18\x02 \x01(\v2\x1b.c1.connector.v2.ResourceIdR\x10parentResourceId\x1a\xfa\x01\n" +
	"\x15RotateCredentialsTask\x12<\n" +
	"\vresource_id\x18\x01 \x01(\v2\x1b.c1.connector.v2.ResourceIdR\n" +
	"resourceId\x12Q\n" +
	"\x12credential_options\x18\x02 \x01(\v2\".c1.connector.v2.CredentialOptionsR\x11credentialOptions\x12P\n" +
	"\x12encryption_configs\x18\x03 \x03(\v2!.c1.connector.v2.EncryptionConfigR\x11encryptionConfigs\x1a\xd5\x01\n" +
	"\x10CreateTicketTask\x12E\n" +
	"\x0eticket_request\x18\x01 \x01(\v2\x1e.c1.connector.v2.TicketRequestR\rticketRequest\x12B\n" +
	"\rticket_schema\x18\x02 \x01(\v2\x1d.c1.connector.v2.TicketSchemaR\fticketSchema\x126\n" +
	"\vannotations\x18\x03 \x03(\v2\x14.google.protobuf.AnyR\vannotations\x1aq\n" +
	"\x15BulkCreateTicketsTask\x12X\n" +
	"\x0fticket_requests\x18\x01 \x03(\v2/.c1.connectorapi.baton.v1.Task.CreateTicketTaskR\x0eticketRequests\x1ak\n" +
	"\x12BulkGetTicketsTask\x12U\n" +
	"\x0fticket_requests\x18\x01 \x03(\v2,.c1.connectorapi.baton.v1.Task.GetTicketTaskR\x0eticketRequests\x1aO\n" +
	"\x15ListTicketSchemasTask\x126\n" +
	"\vannotations\x18\x01 \x03(\v2\x14.google.protobuf.AnyR\vannotations\x1ad\n" +
	"\rGetTicketTask\x12\x1b\n" +
	"\tticket_id\x18\x01 \x01(\tR\bticketId\x126\n" +
	"\vannotations\x18\x02 \x03(\v2\x14.google.protobuf.AnyR\vannotations\x1aO\n" +
	"\x15ActionListSchemasTask\x126\n" +
	"\vannotations\x18\x01 \x03(\v2\x14.google.protobuf.AnyR\vannotations\x1aa\n" +
	"\x13ActionGetSchemaTask\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x126\n" +
	"\vannotations\x18\x02 \x03(\v2\x14.google.protobuf.AnyR\vannotations\x1a\x8b\x01\n" +
	"\x10ActionInvokeTask\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12+\n" +
	"\x04args\x18\x02 \x01(\v2\x17.google.protobuf.StructR\x04args\x126\n" +
	"\vannotations\x18\x03 \x03(\v2\x14.google.protobuf.AnyR\vannotations\x1an\n" +
	"\x10ActionStatusTask\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x126\n" +
	"\vannotations\x18\x03 \x03(\v2\x14.google.protobuf.AnyR\vannotations\x1a\x8e\x01\n" +
	"\x12CreateSyncDiffTask\x12 \n" +
	"\fbase_sync_id\x18\x01 \x01(\tR\n" +
	"baseSyncId\x12\x1e\n" +
	"\vnew_sync_id\x18\x02 \x01(\tR\tnewSyncId\x126\n" +
	"\vannotations\x18\x03 \x03(\v2\x14.google.protobuf.AnyR\vannotations\x1a\xf9\x01\n" +
	"\fCompactSyncs\x12h\n" +
	"\x11compactable_syncs\x18\x01 \x03(\v2;.c1.connectorapi.baton.v1.Task.CompactSyncs.CompactableSyncR\x10compactableSyncs\x126\n" +
	"\vannotations\x18\x02 \x03(\v2\x14.google.protobuf.AnyR\vannotations\x1aG\n" +
	"\x0fCompactableSync\x12\x1b\n" +
	"\tfile_path\x18\x01 \x01(\tR\bfilePath\x12\x17\n" +
	"\async_id\x18\x02 \x01(\tR\x06syncId\"s\n" +
	"\x06Status\x12\x16\n" +
	"\x12STATUS_UNSPECIFIED\x10\x00\x12\x12\n" +
	"\x0eSTATUS_PENDING\x10\x01\x12\x14\n" +
	"\x10STATUS_SCHEDULED\x10\x02\x12\x12\n" +
	"\x0eSTATUS_RUNNING\x10\x03\x12\x13\n" +
	"\x0fSTATUS_FINISHED\x10\x04B\v\n" +
	"\ttask_type\"\xf3\a\n" +
	"\x18BatonServiceHelloRequest\x12#\n" +
	"\ahost_id\x18\x01 \x01(\tB\n" +
	"\xfaB\ar\x05\x10\x01\x18\x80\x02R\x06hostId\x122\n" +
	"\atask_id\x18\x02 \x01(\tB\x19\xfaB\x16r\x142\x12^[a-zA-Z0-9]{27}|$R\x06taskId\x12e\n" +
	"\n" +
	"build_info\x18\x03 \x01(\v2<.c1.connectorapi.baton.v1.BatonServiceHelloRequest.BuildInfoB\b\xfaB\x05\x8a\x01\x02\x10\x01R\tbuildInfo\x12\\\n" +
	"\aos_info\x18\x04 \x01(\v29.c1.connectorapi.baton.v1.BatonServiceHelloRequest.OSInfoB\b\xfaB\x05\x8a\x01\x02\x10\x01R\x06osInfo\x12[\n" +
	"\x12connector_metadata\x18\x05 \x01(\v2\".c1.connector.v2.ConnectorMetadataB\b\xfaB\x05\x8a\x01\x02\x10\x01R\x11connectorMetadata\x12@\n" +
	"\vannotations\x18\x06 \x03(\v2\x14.google.protobuf.AnyB\b\xfaB\x05\x92\x01\x02\x10\x10R\vannotations\x1a\x95\x01\n" +
	"\tBuildInfo\x12-\n" +
	"\flang_version\x18\x01 \x01(\tB\n" +
	"\xfaB\ar\x05\x10\x01\x18\x80\x02R\vlangVersion\x12$\n" +
	"\apackage\x18\x02 \x01(\tB\n" +
	"\xfaB\ar\x05\x10\x01\x18\x80\x02R\apackage\x123\n" +
	"\x0fpackage_version\x18\x03 \x01(\tB\n" +
	"\xfaB\ar\x05\x10\x01\x18\x80\x02R\x0epackageVersion\x1a\x81\x03\n" +
	"\x06OSInfo\x12&\n" +
	"\bhostname\x18\x01 \x01(\tB\n" +
	"\xfaB\ar\x05\x10\x01\x18\x80\x02R\bhostname\x12\x1a\n" +
	"\x02os\x18\x02 \x01(\tB\n" +
	"\xfaB\ar\x05\x10\x01\x18\x80\x02R\x02os\x12&\n" +
	"\bplatform\x18\x03 \x01(\tB\n" +
	"\xfaB\ar\x05\x10\x01\x18\x80\x02R\bplatform\x125\n" +
	"\x10platform_version\x18\x04 \x01(\tB\n" +
	"\xfaB\ar\x05\x10\x01\x18\x80\x02R\x0fplatformVersion\x123\n" +
	"\x0fplatform_family\x18\x05 \x01(\tB\n" +
	"\xfaB\ar\x05\x10\x01\x18\x80\x02R\x0eplatformFamily\x121\n" +
	"\x0ekernel_version\x18\x06 \x01(\tB\n" +
	"\xfaB\ar\x05\x10\x01\x18\x80\x02R\rkernelVersion\x12+\n" +
	"\vkernel_arch\x18\a \x01(\tB\n" +
	"\xfaB\ar\x05\x10\x01\x18\x80\x02R\n" +
	"kernelArch\x12?\n" +
	"\x15virtualization_system\x18\b \x01(\tB\n" +
	"\xfaB\ar\x05\x10\x01\x18\x80\x02R\x14virtualizationSystem\"S\n" +
	"\x19BatonServiceHelloResponse\x126\n" +
	"\vannotations\x18\x01 \x03(\v2\x14.google.protobuf.AnyR\vannotations\"A\n" +
	"\x1aBatonServiceGetTaskRequest\x12#\n" +
	"\ahost_id\x18\x01 \x01(\tB\n" +
	"\xfaB\ar\x05\x10\x01\x18\x80\x02R\x06hostId\"\x83\x02\n" +
	"\x1bBatonServiceGetTaskResponse\x122\n" +
	"\x04task\x18\x01 \x01(\v2\x1e.c1.connectorapi.baton.v1.TaskR\x04task\x126\n" +
	"\tnext_poll\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\bnextPoll\x12@\n" +
	"\x0enext_heartbeat\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\rnextHeartbeat\x126\n" +
	"\vannotations\x18\x04 \x03(\v2\x14.google.protobuf.AnyR\vannotations\"\xb8\x01\n" +
	"\x1cBatonServiceHeartbeatRequest\x12#\n" +
	"\ahost_id\x18\x01 \x01(\tB\n" +
	"\xfaB\ar\x05\x10\x01\x18\x80\x02R\x06hostId\x121\n" +
	"\atask_id\x18\x02 \x01(\tB\x18\xfaB\x15r\x132\x11^[a-zA-Z0-9]{27}$R\x06taskId\x12@\n" +
	"\vannotations\x18\x03 \x03(\v2\x14.google.protobuf.AnyB\b\xfaB\x05\x92\x01\x02\x10\x10R\vannotations\"\xb7\x01\n" +
	"\x1dBatonServiceHeartbeatResponse\x12@\n" +
	"\x0enext_heartbeat\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\rnextHeartbeat\x12\x1c\n" +
	"\tcancelled\x18\x02 \x01(\bR\tcancelled\x126\n" +
	"\vannotations\x18\x03 \x03(\v2\x14.google.protobuf.AnyR\vannotations\"\xa3\x05\n" +
	"\x1eBatonServiceUploadAssetRequest\x12e\n" +
	"\bmetadata\x18d \x01(\v2G.c1.connectorapi.baton.v1.BatonServiceUploadAssetRequest.UploadMetadataH\x00R\bmetadata\x12Y\n" +
	"\x04data\x18e \x01(\v2C.c1.connectorapi.baton.v1.BatonServiceUploadAssetRequest.UploadDataH\x00R\x04data\x12V\n" +
	"\x03eof\x18f \x01(\v2B.c1.connectorapi.baton.v1.BatonServiceUploadAssetRequest.UploadEOFH\x00R\x03eof\x1a\xaa\x01\n" +
	"\x0eUploadMetadata\x12#\n" +
	"\ahost_id\x18\x01 \x01(\tB\n" +
	"\xfaB\ar\x05\x10\x01\x18\x80\x02R\x06hostId\x121\n" +
	"\atask_id\x18\x02 \x01(\tB\x18\xfaB\x15r\x132\x11^[a-zA-Z0-9]{27}$R\x06taskId\x12@\n" +
	"\vannotations\x18\x04 \x03(\v2\x14.google.protobuf.AnyB\b\xfaB\x05\x92\x01\x02\x10\x10R\vannotations\x1a-\n" +
	"\n" +
	"UploadData\x12\x1f\n" +
	"\x04data\x18\x01 \x01(\fB\v\xfaB\bz\x06\x10\x01\x18\x80\x80@R\x04data\x1a\x7f\n" +
	"\tUploadEOF\x120\n" +
	"\x0fsha256_checksum\x18\x01 \x01(\fB\a\xfaB\x04z\x02h R\x0esha256Checksum\x12@\n" +
	"\vannotations\x18\x02 \x03(\v2\x14.google.protobuf.AnyB\b\xfaB\x05\x92\x01\x02\x10\x10R\vannotationsB\n" +
	"\n" +
	"\x03msg\x12\x03\xf8B\x01\"Y\n" +
	"\x1fBatonServiceUploadAssetResponse\x126\n" +
	"\vannotations\x18\x01 \x03(\v2\x14.google.protobuf.AnyR\vannotations\"\x8d\x05\n" +
	"\x1dBatonServiceFinishTaskRequest\x12#\n" +
	"\ahost_id\x18\x01 \x01(\tB\n" +
	"\xfaB\ar\x05\x10\x01\x18\x80\x02R\x06hostId\x121\n" +
	"\atask_id\x18\x02 \x01(\tB\x18\xfaB\x15r\x132\x11^[a-zA-Z0-9]{27}$R\x06taskId\x12*\n" +
	"\x06status\x18\x03 \x01(\v2\x12.google.rpc.StatusR\x06status\x12U\n" +
	"\x05error\x18d \x01(\v2=.c1.connectorapi.baton.v1.BatonServiceFinishTaskRequest.ErrorH\x00R\x05error\x12[\n" +
	"\asuccess\x18e \x01(\v2?.c1.connectorapi.baton.v1.BatonServiceFinishTaskRequest.SuccessH\x00R\asuccess\x1a\xa0\x01\n" +
	"\x05Error\x12#\n" +
	"\rnon_retryable\x18\x01 \x01(\bR\fnonRetryable\x12@\n" +
	"\vannotations\x18\x02 \x03(\v2\x14.google.protobuf.AnyB\b\xfaB\x05\x92\x01\x02\x10\x10R\vannotations\x120\n" +
	"\bresponse\x18\x03 \x01(\v2\x14.google.protobuf.AnyR\bresponse\x1a}\n" +
	"\aSuccess\x12@\n" +
	"\vannotations\x18\x01 \x03(\v2\x14.google.protobuf.AnyB\b\xfaB\x05\x92\x01\x02\x10\x10R\vannotations\x120\n" +
	"\bresponse\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\bresponseB\x12\n" +
	"\vfinal_state\x12\x03\xf8B\x01\"X\n" +
	"\x1eBatonServiceFinishTaskResponse\x126\n" +
	"\vannotations\x18\x01 \x03(\v2\x14.google.protobuf.AnyR\vannotations\"\x17\n" +
	"\x15StartDebuggingRequest\"0\n" +
	"\x16StartDebuggingResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status2\x80\x06\n" +
	"\fBatonService\x12r\n" +
	"\x05Hello\x122.c1.connectorapi.baton.v1.BatonServiceHelloRequest\x1a3.c1.connectorapi.baton.v1.BatonServiceHelloResponse\"\x00\x12x\n" +
	"\aGetTask\x124.c1.connectorapi.baton.v1.BatonServiceGetTaskRequest\x1a5.c1.connectorapi.baton.v1.BatonServiceGetTaskResponse\"\x00\x12~\n" +
	"\tHeartbeat\x126.c1.connectorapi.baton.v1.BatonServiceHeartbeatRequest\x1a7.c1.connectorapi.baton.v1.BatonServiceHeartbeatResponse\"\x00\x12\x81\x01\n" +
	"\n" +
	"FinishTask\x127.c1.connectorapi.baton.v1.BatonServiceFinishTaskRequest\x1a8.c1.connectorapi.baton.v1.BatonServiceFinishTaskResponse\"\x00\x12\x86\x01\n" +
	"\vUploadAsset\x128.c1.connectorapi.baton.v1.BatonServiceUploadAssetRequest\x1a9.c1.connectorapi.baton.v1.BatonServiceUploadAssetResponse\"\x00(\x01\x12u\n" +
	"\x0eStartDebugging\x12/.c1.connectorapi.baton.v1.StartDebuggingRequest\x1a0.c1.connectorapi.baton.v1.StartDebuggingResponse\"\x00B7Z5gitlab.com/ductone/c1/pkg/pb/c1/connectorapi/baton/v1b\x06proto3"

var file_c1_connectorapi_baton_v1_baton_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_c1_connectorapi_baton_v1_baton_proto_msgTypes = make([]protoimpl.MessageInfo, 42)
var file_c1_connectorapi_baton_v1_baton_proto_goTypes = []any{
	(Task_Status)(0),                                      // 0: c1.connectorapi.baton.v1.Task.Status
	(*Task)(nil),                                          // 1: c1.connectorapi.baton.v1.Task
	(*BatonServiceHelloRequest)(nil),                      // 2: c1.connectorapi.baton.v1.BatonServiceHelloRequest
	(*BatonServiceHelloResponse)(nil),                     // 3: c1.connectorapi.baton.v1.BatonServiceHelloResponse
	(*BatonServiceGetTaskRequest)(nil),                    // 4: c1.connectorapi.baton.v1.BatonServiceGetTaskRequest
	(*BatonServiceGetTaskResponse)(nil),                   // 5: c1.connectorapi.baton.v1.BatonServiceGetTaskResponse
	(*BatonServiceHeartbeatRequest)(nil),                  // 6: c1.connectorapi.baton.v1.BatonServiceHeartbeatRequest
	(*BatonServiceHeartbeatResponse)(nil),                 // 7: c1.connectorapi.baton.v1.BatonServiceHeartbeatResponse
	(*BatonServiceUploadAssetRequest)(nil),                // 8: c1.connectorapi.baton.v1.BatonServiceUploadAssetRequest
	(*BatonServiceUploadAssetResponse)(nil),               // 9: c1.connectorapi.baton.v1.BatonServiceUploadAssetResponse
	(*BatonServiceFinishTaskRequest)(nil),                 // 10: c1.connectorapi.baton.v1.BatonServiceFinishTaskRequest
	(*BatonServiceFinishTaskResponse)(nil),                // 11: c1.connectorapi.baton.v1.BatonServiceFinishTaskResponse
	(*StartDebuggingRequest)(nil),                         // 12: c1.connectorapi.baton.v1.StartDebuggingRequest
	(*StartDebuggingResponse)(nil),                        // 13: c1.connectorapi.baton.v1.StartDebuggingResponse
	(*Task_NoneTask)(nil),                                 // 14: c1.connectorapi.baton.v1.Task.NoneTask
	(*Task_HelloTask)(nil),                                // 15: c1.connectorapi.baton.v1.Task.HelloTask
	(*Task_SyncFullTask)(nil),                             // 16: c1.connectorapi.baton.v1.Task.SyncFullTask
	(*Task_EventFeedTask)(nil),                            // 17: c1.connectorapi.baton.v1.Task.EventFeedTask
	(*Task_GrantTask)(nil),                                // 18: c1.connectorapi.baton.v1.Task.GrantTask
	(*Task_RevokeTask)(nil),                               // 19: c1.connectorapi.baton.v1.Task.RevokeTask
	(*Task_CreateAccountTask)(nil),                        // 20: c1.connectorapi.baton.v1.Task.CreateAccountTask
	(*Task_CreateResourceTask)(nil),                       // 21: c1.connectorapi.baton.v1.Task.CreateResourceTask
	(*Task_DeleteResourceTask)(nil),                       // 22: c1.connectorapi.baton.v1.Task.DeleteResourceTask
	(*Task_RotateCredentialsTask)(nil),                    // 23: c1.connectorapi.baton.v1.Task.RotateCredentialsTask
	(*Task_CreateTicketTask)(nil),                         // 24: c1.connectorapi.baton.v1.Task.CreateTicketTask
	(*Task_BulkCreateTicketsTask)(nil),                    // 25: c1.connectorapi.baton.v1.Task.BulkCreateTicketsTask
	(*Task_BulkGetTicketsTask)(nil),                       // 26: c1.connectorapi.baton.v1.Task.BulkGetTicketsTask
	(*Task_ListTicketSchemasTask)(nil),                    // 27: c1.connectorapi.baton.v1.Task.ListTicketSchemasTask
	(*Task_GetTicketTask)(nil),                            // 28: c1.connectorapi.baton.v1.Task.GetTicketTask
	(*Task_ActionListSchemasTask)(nil),                    // 29: c1.connectorapi.baton.v1.Task.ActionListSchemasTask
	(*Task_ActionGetSchemaTask)(nil),                      // 30: c1.connectorapi.baton.v1.Task.ActionGetSchemaTask
	(*Task_ActionInvokeTask)(nil),                         // 31: c1.connectorapi.baton.v1.Task.ActionInvokeTask
	(*Task_ActionStatusTask)(nil),                         // 32: c1.connectorapi.baton.v1.Task.ActionStatusTask
	(*Task_CreateSyncDiffTask)(nil),                       // 33: c1.connectorapi.baton.v1.Task.CreateSyncDiffTask
	(*Task_CompactSyncs)(nil),                             // 34: c1.connectorapi.baton.v1.Task.CompactSyncs
	(*Task_CompactSyncs_CompactableSync)(nil),             // 35: c1.connectorapi.baton.v1.Task.CompactSyncs.CompactableSync
	(*BatonServiceHelloRequest_BuildInfo)(nil),            // 36: c1.connectorapi.baton.v1.BatonServiceHelloRequest.BuildInfo
	(*BatonServiceHelloRequest_OSInfo)(nil),               // 37: c1.connectorapi.baton.v1.BatonServiceHelloRequest.OSInfo
	(*BatonServiceUploadAssetRequest_UploadMetadata)(nil), // 38: c1.connectorapi.baton.v1.BatonServiceUploadAssetRequest.UploadMetadata
	(*BatonServiceUploadAssetRequest_UploadData)(nil),     // 39: c1.connectorapi.baton.v1.BatonServiceUploadAssetRequest.UploadData
	(*BatonServiceUploadAssetRequest_UploadEOF)(nil),      // 40: c1.connectorapi.baton.v1.BatonServiceUploadAssetRequest.UploadEOF
	(*BatonServiceFinishTaskRequest_Error)(nil),           // 41: c1.connectorapi.baton.v1.BatonServiceFinishTaskRequest.Error
	(*BatonServiceFinishTaskRequest_Success)(nil),         // 42: c1.connectorapi.baton.v1.BatonServiceFinishTaskRequest.Success
	(*v2.ConnectorMetadata)(nil),                          // 43: c1.connector.v2.ConnectorMetadata
	(*anypb.Any)(nil),                                     // 44: google.protobuf.Any
	(*durationpb.Duration)(nil),                           // 45: google.protobuf.Duration
	(*status.Status)(nil),                                 // 46: google.rpc.Status
	(*timestamppb.Timestamp)(nil),                         // 47: google.protobuf.Timestamp
	(*v2.Entitlement)(nil),                                // 48: c1.connector.v2.Entitlement
	(*v2.Resource)(nil),                                   // 49: c1.connector.v2.Resource
	(*v2.Grant)(nil),                                      // 50: c1.connector.v2.Grant
	(*v2.AccountInfo)(nil),                                // 51: c1.connector.v2.AccountInfo
	(*v2.CredentialOptions)(nil),                          // 52: c1.connector.v2.CredentialOptions
	(*v2.EncryptionConfig)(nil),                           // 53: c1.connector.v2.EncryptionConfig
	(*v2.ResourceId)(nil),                                 // 54: c1.connector.v2.ResourceId
	(*v2.TicketRequest)(nil),                              // 55: c1.connector.v2.TicketRequest
	(*v2.TicketSchema)(nil),                               // 56: c1.connector.v2.TicketSchema
	(*structpb.Struct)(nil),                               // 57: google.protobuf.Struct
}
var file_c1_connectorapi_baton_v1_baton_proto_depIdxs = []int32{
	0,  // 0: c1.connectorapi.baton.v1.Task.status:type_name -> c1.connectorapi.baton.v1.Task.Status
	14, // 1: c1.connectorapi.baton.v1.Task.none:type_name -> c1.connectorapi.baton.v1.Task.NoneTask
	15, // 2: c1.connectorapi.baton.v1.Task.hello:type_name -> c1.connectorapi.baton.v1.Task.HelloTask
	16, // 3: c1.connectorapi.baton.v1.Task.sync_full:type_name -> c1.connectorapi.baton.v1.Task.SyncFullTask
	18, // 4: c1.connectorapi.baton.v1.Task.grant:type_name -> c1.connectorapi.baton.v1.Task.GrantTask
	19, // 5: c1.connectorapi.baton.v1.Task.revoke:type_name -> c1.connectorapi.baton.v1.Task.RevokeTask
	20, // 6: c1.connectorapi.baton.v1.Task.create_account:type_name -> c1.connectorapi.baton.v1.Task.CreateAccountTask
	21, // 7: c1.connectorapi.baton.v1.Task.create_resource:type_name -> c1.connectorapi.baton.v1.Task.CreateResourceTask
	22, // 8: c1.connectorapi.baton.v1.Task.delete_resource:type_name -> c1.connectorapi.baton.v1.Task.DeleteResourceTask
	23, // 9: c1.connectorapi.baton.v1.Task.rotate_credentials:type_name -> c1.connectorapi.baton.v1.Task.RotateCredentialsTask
	17, // 10: c1.connectorapi.baton.v1.Task.event_feed:type_name -> c1.connectorapi.baton.v1.Task.EventFeedTask
	24, // 11: c1.connectorapi.baton.v1.Task.create_ticket_task:type_name -> c1.connectorapi.baton.v1.Task.CreateTicketTask
	27, // 12: c1.connectorapi.baton.v1.Task.list_ticket_schemas:type_name -> c1.connectorapi.baton.v1.Task.ListTicketSchemasTask
	28, // 13: c1.connectorapi.baton.v1.Task.get_ticket:type_name -> c1.connectorapi.baton.v1.Task.GetTicketTask
	25, // 14: c1.connectorapi.baton.v1.Task.bulk_create_tickets:type_name -> c1.connectorapi.baton.v1.Task.BulkCreateTicketsTask
	26, // 15: c1.connectorapi.baton.v1.Task.bulk_get_tickets:type_name -> c1.connectorapi.baton.v1.Task.BulkGetTicketsTask
	29, // 16: c1.connectorapi.baton.v1.Task.action_list_schemas:type_name -> c1.connectorapi.baton.v1.Task.ActionListSchemasTask
	30, // 17: c1.connectorapi.baton.v1.Task.action_get_schema:type_name -> c1.connectorapi.baton.v1.Task.ActionGetSchemaTask
	31, // 18: c1.connectorapi.baton.v1.Task.action_invoke:type_name -> c1.connectorapi.baton.v1.Task.ActionInvokeTask
	32, // 19: c1.connectorapi.baton.v1.Task.action_status:type_name -> c1.connectorapi.baton.v1.Task.ActionStatusTask
	33, // 20: c1.connectorapi.baton.v1.Task.create_sync_diff:type_name -> c1.connectorapi.baton.v1.Task.CreateSyncDiffTask
	34, // 21: c1.connectorapi.baton.v1.Task.compact_syncs:type_name -> c1.connectorapi.baton.v1.Task.CompactSyncs
	36, // 22: c1.connectorapi.baton.v1.BatonServiceHelloRequest.build_info:type_name -> c1.connectorapi.baton.v1.BatonServiceHelloRequest.BuildInfo
	37, // 23: c1.connectorapi.baton.v1.BatonServiceHelloRequest.os_info:type_name -> c1.connectorapi.baton.v1.BatonServiceHelloRequest.OSInfo
	43, // 24: c1.connectorapi.baton.v1.BatonServiceHelloRequest.connector_metadata:type_name -> c1.connector.v2.ConnectorMetadata
	44, // 25: c1.connectorapi.baton.v1.BatonServiceHelloRequest.annotations:type_name -> google.protobuf.Any
	44, // 26: c1.connectorapi.baton.v1.BatonServiceHelloResponse.annotations:type_name -> google.protobuf.Any
	1,  // 27: c1.connectorapi.baton.v1.BatonServiceGetTaskResponse.task:type_name -> c1.connectorapi.baton.v1.Task
	45, // 28: c1.connectorapi.baton.v1.BatonServiceGetTaskResponse.next_poll:type_name -> google.protobuf.Duration
	45, // 29: c1.connectorapi.baton.v1.BatonServiceGetTaskResponse.next_heartbeat:type_name -> google.protobuf.Duration
	44, // 30: c1.connectorapi.baton.v1.BatonServiceGetTaskResponse.annotations:type_name -> google.protobuf.Any
	44, // 31: c1.connectorapi.baton.v1.BatonServiceHeartbeatRequest.annotations:type_name -> google.protobuf.Any
	45, // 32: c1.connectorapi.baton.v1.BatonServiceHeartbeatResponse.next_heartbeat:type_name -> google.protobuf.Duration
	44, // 33: c1.connectorapi.baton.v1.BatonServiceHeartbeatResponse.annotations:type_name -> google.protobuf.Any
	38, // 34: c1.connectorapi.baton.v1.BatonServiceUploadAssetRequest.metadata:type_name -> c1.connectorapi.baton.v1.BatonServiceUploadAssetRequest.UploadMetadata
	39, // 35: c1.connectorapi.baton.v1.BatonServiceUploadAssetRequest.data:type_name -> c1.connectorapi.baton.v1.BatonServiceUploadAssetRequest.UploadData
	40, // 36: c1.connectorapi.baton.v1.BatonServiceUploadAssetRequest.eof:type_name -> c1.connectorapi.baton.v1.BatonServiceUploadAssetRequest.UploadEOF
	44, // 37: c1.connectorapi.baton.v1.BatonServiceUploadAssetResponse.annotations:type_name -> google.protobuf.Any
	46, // 38: c1.connectorapi.baton.v1.BatonServiceFinishTaskRequest.status:type_name -> google.rpc.Status
	41, // 39: c1.connectorapi.baton.v1.BatonServiceFinishTaskRequest.error:type_name -> c1.connectorapi.baton.v1.BatonServiceFinishTaskRequest.Error
	42, // 40: c1.connectorapi.baton.v1.BatonServiceFinishTaskRequest.success:type_name -> c1.connectorapi.baton.v1.BatonServiceFinishTaskRequest.Success
	44, // 41: c1.connectorapi.baton.v1.BatonServiceFinishTaskResponse.annotations:type_name -> google.protobuf.Any
	44, // 42: c1.connectorapi.baton.v1.Task.NoneTask.annotations:type_name -> google.protobuf.Any
	44, // 43: c1.connectorapi.baton.v1.Task.HelloTask.annotations:type_name -> google.protobuf.Any
	44, // 44: c1.connectorapi.baton.v1.Task.SyncFullTask.annotations:type_name -> google.protobuf.Any
	44, // 45: c1.connectorapi.baton.v1.Task.EventFeedTask.annotations:type_name -> google.protobuf.Any
	47, // 46: c1.connectorapi.baton.v1.Task.EventFeedTask.start_at:type_name -> google.protobuf.Timestamp
	48, // 47: c1.connectorapi.baton.v1.Task.GrantTask.entitlement:type_name -> c1.connector.v2.Entitlement
	49, // 48: c1.connectorapi.baton.v1.Task.GrantTask.principal:type_name -> c1.connector.v2.Resource
	44, // 49: c1.connectorapi.baton.v1.Task.GrantTask.annotations:type_name -> google.protobuf.Any
	45, // 50: c1.connectorapi.baton.v1.Task.GrantTask.duration:type_name -> google.protobuf.Duration
	50, // 51: c1.connectorapi.baton.v1.Task.RevokeTask.grant:type_name -> c1.connector.v2.Grant
	44, // 52: c1.connectorapi.baton.v1.Task.RevokeTask.annotations:type_name -> google.protobuf.Any
	51, // 53: c1.connectorapi.baton.v1.Task.CreateAccountTask.account_info:type_name -> c1.connector.v2.AccountInfo
	52, // 54: c1.connectorapi.baton.v1.Task.CreateAccountTask.credential_options:type_name -> c1.connector.v2.CredentialOptions
	53, // 55: c1.connectorapi.baton.v1.Task.CreateAccountTask.encryption_configs:type_name -> c1.connector.v2.EncryptionConfig
	49, // 56: c1.connectorapi.baton.v1.Task.CreateResourceTask.resource:type_name -> c1.connector.v2.Resource
	54, // 57: c1.connectorapi.baton.v1.Task.DeleteResourceTask.resource_id:type_name -> c1.connector.v2.ResourceId
	54, // 58: c1.connectorapi.baton.v1.Task.DeleteResourceTask.parent_resource_id:type_name -> c1.connector.v2.ResourceId
	54, // 59: c1.connectorapi.baton.v1.Task.RotateCredentialsTask.resource_id:type_name -> c1.connector.v2.ResourceId
	52, // 60: c1.connectorapi.baton.v1.Task.RotateCredentialsTask.credential_options:type_name -> c1.connector.v2.CredentialOptions
	53, // 61: c1.connectorapi.baton.v1.Task.RotateCredentialsTask.encryption_configs:type_name -> c1.connector.v2.EncryptionConfig
	55, // 62: c1.connectorapi.baton.v1.Task.CreateTicketTask.ticket_request:type_name -> c1.connector.v2.TicketRequest
	56, // 63: c1.connectorapi.baton.v1.Task.CreateTicketTask.ticket_schema:type_name -> c1.connector.v2.TicketSchema
	44, // 64: c1.connectorapi.baton.v1.Task.CreateTicketTask.annotations:type_name -> google.protobuf.Any
	24, // 65: c1.connectorapi.baton.v1.Task.BulkCreateTicketsTask.ticket_requests:type_name -> c1.connectorapi.baton.v1.Task.CreateTicketTask
	28, // 66: c1.connectorapi.baton.v1.Task.BulkGetTicketsTask.ticket_requests:type_name -> c1.connectorapi.baton.v1.Task.GetTicketTask
	44, // 67: c1.connectorapi.baton.v1.Task.ListTicketSchemasTask.annotations:type_name -> google.protobuf.Any
	44, // 68: c1.connectorapi.baton.v1.Task.GetTicketTask.annotations:type_name -> google.protobuf.Any
	44, // 69: c1.connectorapi.baton.v1.Task.ActionListSchemasTask.annotations:type_name -> google.protobuf.Any
	44, // 70: c1.connectorapi.baton.v1.Task.ActionGetSchemaTask.annotations:type_name -> google.protobuf.Any
	57, // 71: c1.connectorapi.baton.v1.Task.ActionInvokeTask.args:type_name -> google.protobuf.Struct
	44, // 72: c1.connectorapi.baton.v1.Task.ActionInvokeTask.annotations:type_name -> google.protobuf.Any
	44, // 73: c1.connectorapi.baton.v1.Task.ActionStatusTask.annotations:type_name -> google.protobuf.Any
	44, // 74: c1.connectorapi.baton.v1.Task.CreateSyncDiffTask.annotations:type_name -> google.protobuf.Any
	35, // 75: c1.connectorapi.baton.v1.Task.CompactSyncs.compactable_syncs:type_name -> c1.connectorapi.baton.v1.Task.CompactSyncs.CompactableSync
	44, // 76: c1.connectorapi.baton.v1.Task.CompactSyncs.annotations:type_name -> google.protobuf.Any
	44, // 77: c1.connectorapi.baton.v1.BatonServiceUploadAssetRequest.UploadMetadata.annotations:type_name -> google.protobuf.Any
	44, // 78: c1.connectorapi.baton.v1.BatonServiceUploadAssetRequest.UploadEOF.annotations:type_name -> google.protobuf.Any
	44, // 79: c1.connectorapi.baton.v1.BatonServiceFinishTaskRequest.Error.annotations:type_name -> google.protobuf.Any
	44, // 80: c1.connectorapi.baton.v1.BatonServiceFinishTaskRequest.Error.response:type_name -> google.protobuf.Any
	44, // 81: c1.connectorapi.baton.v1.BatonServiceFinishTaskRequest.Success.annotations:type_name -> google.protobuf.Any
	44, // 82: c1.connectorapi.baton.v1.BatonServiceFinishTaskRequest.Success.response:type_name -> google.protobuf.Any
	2,  // 83: c1.connectorapi.baton.v1.BatonService.Hello:input_type -> c1.connectorapi.baton.v1.BatonServiceHelloRequest
	4,  // 84: c1.connectorapi.baton.v1.BatonService.GetTask:input_type -> c1.connectorapi.baton.v1.BatonServiceGetTaskRequest
	6,  // 85: c1.connectorapi.baton.v1.BatonService.Heartbeat:input_type -> c1.connectorapi.baton.v1.BatonServiceHeartbeatRequest
	10, // 86: c1.connectorapi.baton.v1.BatonService.FinishTask:input_type -> c1.connectorapi.baton.v1.BatonServiceFinishTaskRequest
	8,  // 87: c1.connectorapi.baton.v1.BatonService.UploadAsset:input_type -> c1.connectorapi.baton.v1.BatonServiceUploadAssetRequest
	12, // 88: c1.connectorapi.baton.v1.BatonService.StartDebugging:input_type -> c1.connectorapi.baton.v1.StartDebuggingRequest
	3,  // 89: c1.connectorapi.baton.v1.BatonService.Hello:output_type -> c1.connectorapi.baton.v1.BatonServiceHelloResponse
	5,  // 90: c1.connectorapi.baton.v1.BatonService.GetTask:output_type -> c1.connectorapi.baton.v1.BatonServiceGetTaskResponse
	7,  // 91: c1.connectorapi.baton.v1.BatonService.Heartbeat:output_type -> c1.connectorapi.baton.v1.BatonServiceHeartbeatResponse
	11, // 92: c1.connectorapi.baton.v1.BatonService.FinishTask:output_type -> c1.connectorapi.baton.v1.BatonServiceFinishTaskResponse
	9,  // 93: c1.connectorapi.baton.v1.BatonService.UploadAsset:output_type -> c1.connectorapi.baton.v1.BatonServiceUploadAssetResponse
	13, // 94: c1.connectorapi.baton.v1.BatonService.StartDebugging:output_type -> c1.connectorapi.baton.v1.StartDebuggingResponse
	89, // [89:95] is the sub-list for method output_type
	83, // [83:89] is the sub-list for method input_type
	83, // [83:83] is the sub-list for extension type_name
	83, // [83:83] is the sub-list for extension extendee
	0,  // [0:83] is the sub-list for field type_name
}

func init() { file_c1_connectorapi_baton_v1_baton_proto_init() }
func file_c1_connectorapi_baton_v1_baton_proto_init() {
	if File_c1_connectorapi_baton_v1_baton_proto != nil {
		return
	}
	file_c1_connectorapi_baton_v1_baton_proto_msgTypes[0].OneofWrappers = []any{
		(*Task_None)(nil),
		(*Task_Hello)(nil),
		(*Task_SyncFull)(nil),
		(*Task_Grant)(nil),
		(*Task_Revoke)(nil),
		(*Task_CreateAccount)(nil),
		(*Task_CreateResource)(nil),
		(*Task_DeleteResource)(nil),
		(*Task_RotateCredentials)(nil),
		(*Task_EventFeed)(nil),
		(*Task_CreateTicketTask_)(nil),
		(*Task_ListTicketSchemas)(nil),
		(*Task_GetTicket)(nil),
		(*Task_BulkCreateTickets)(nil),
		(*Task_BulkGetTickets)(nil),
		(*Task_ActionListSchemas)(nil),
		(*Task_ActionGetSchema)(nil),
		(*Task_ActionInvoke)(nil),
		(*Task_ActionStatus)(nil),
		(*Task_CreateSyncDiff)(nil),
		(*Task_CompactSyncs_)(nil),
	}
	file_c1_connectorapi_baton_v1_baton_proto_msgTypes[7].OneofWrappers = []any{
		(*BatonServiceUploadAssetRequest_Metadata)(nil),
		(*BatonServiceUploadAssetRequest_Data)(nil),
		(*BatonServiceUploadAssetRequest_Eof)(nil),
	}
	file_c1_connectorapi_baton_v1_baton_proto_msgTypes[9].OneofWrappers = []any{
		(*BatonServiceFinishTaskRequest_Error_)(nil),
		(*BatonServiceFinishTaskRequest_Success_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_c1_connectorapi_baton_v1_baton_proto_rawDesc), len(file_c1_connectorapi_baton_v1_baton_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   42,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_c1_connectorapi_baton_v1_baton_proto_goTypes,
		DependencyIndexes: file_c1_connectorapi_baton_v1_baton_proto_depIdxs,
		EnumInfos:         file_c1_connectorapi_baton_v1_baton_proto_enumTypes,
		MessageInfos:      file_c1_connectorapi_baton_v1_baton_proto_msgTypes,
	}.Build()
	File_c1_connectorapi_baton_v1_baton_proto = out.File
	file_c1_connectorapi_baton_v1_baton_proto_goTypes = nil
	file_c1_connectorapi_baton_v1_baton_proto_depIdxs = nil
}
