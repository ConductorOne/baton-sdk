// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        (unknown)
// source: c1/connectorapi/rtun/v1/rtun.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RstCode int32

const (
	RstCode_RST_CODE_UNSPECIFIED         RstCode = 0
	RstCode_RST_CODE_NO_LISTENER         RstCode = 1
	RstCode_RST_CODE_PORT_NOT_ADVERTISED RstCode = 2
	RstCode_RST_CODE_TIMEOUT             RstCode = 3
	RstCode_RST_CODE_INTERNAL            RstCode = 4
)

// Enum value maps for RstCode.
var (
	RstCode_name = map[int32]string{
		0: "RST_CODE_UNSPECIFIED",
		1: "RST_CODE_NO_LISTENER",
		2: "RST_CODE_PORT_NOT_ADVERTISED",
		3: "RST_CODE_TIMEOUT",
		4: "RST_CODE_INTERNAL",
	}
	RstCode_value = map[string]int32{
		"RST_CODE_UNSPECIFIED":         0,
		"RST_CODE_NO_LISTENER":         1,
		"RST_CODE_PORT_NOT_ADVERTISED": 2,
		"RST_CODE_TIMEOUT":             3,
		"RST_CODE_INTERNAL":            4,
	}
)

func (x RstCode) Enum() *RstCode {
	p := new(RstCode)
	*p = x
	return p
}

func (x RstCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RstCode) Descriptor() protoreflect.EnumDescriptor {
	return file_c1_connectorapi_rtun_v1_rtun_proto_enumTypes[0].Descriptor()
}

func (RstCode) Type() protoreflect.EnumType {
	return &file_c1_connectorapi_rtun_v1_rtun_proto_enumTypes[0]
}

func (x RstCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RstCode.Descriptor instead.
func (RstCode) EnumDescriptor() ([]byte, []int) {
	return file_c1_connectorapi_rtun_v1_rtun_proto_rawDescGZIP(), []int{0}
}

type ReverseTunnelServiceLinkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Frame         *Frame                 `protobuf:"bytes,1,opt,name=frame,proto3" json:"frame,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReverseTunnelServiceLinkRequest) Reset() {
	*x = ReverseTunnelServiceLinkRequest{}
	mi := &file_c1_connectorapi_rtun_v1_rtun_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReverseTunnelServiceLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReverseTunnelServiceLinkRequest) ProtoMessage() {}

func (x *ReverseTunnelServiceLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_rtun_v1_rtun_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReverseTunnelServiceLinkRequest.ProtoReflect.Descriptor instead.
func (*ReverseTunnelServiceLinkRequest) Descriptor() ([]byte, []int) {
	return file_c1_connectorapi_rtun_v1_rtun_proto_rawDescGZIP(), []int{0}
}

func (x *ReverseTunnelServiceLinkRequest) GetFrame() *Frame {
	if x != nil {
		return x.Frame
	}
	return nil
}

type ReverseTunnelServiceLinkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Frame         *Frame                 `protobuf:"bytes,1,opt,name=frame,proto3" json:"frame,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReverseTunnelServiceLinkResponse) Reset() {
	*x = ReverseTunnelServiceLinkResponse{}
	mi := &file_c1_connectorapi_rtun_v1_rtun_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReverseTunnelServiceLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReverseTunnelServiceLinkResponse) ProtoMessage() {}

func (x *ReverseTunnelServiceLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_rtun_v1_rtun_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReverseTunnelServiceLinkResponse.ProtoReflect.Descriptor instead.
func (*ReverseTunnelServiceLinkResponse) Descriptor() ([]byte, []int) {
	return file_c1_connectorapi_rtun_v1_rtun_proto_rawDescGZIP(), []int{1}
}

func (x *ReverseTunnelServiceLinkResponse) GetFrame() *Frame {
	if x != nil {
		return x.Frame
	}
	return nil
}

type Frame struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Sid   uint32                 `protobuf:"varint,1,opt,name=sid,proto3" json:"sid,omitempty"` // 0 reserved for control
	// Types that are valid to be assigned to Kind:
	//
	//	*Frame_Hello
	//	*Frame_Syn
	//	*Frame_Data
	//	*Frame_Fin
	//	*Frame_Rst
	Kind          isFrame_Kind `protobuf_oneof:"kind"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Frame) Reset() {
	*x = Frame{}
	mi := &file_c1_connectorapi_rtun_v1_rtun_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Frame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Frame) ProtoMessage() {}

func (x *Frame) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_rtun_v1_rtun_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Frame.ProtoReflect.Descriptor instead.
func (*Frame) Descriptor() ([]byte, []int) {
	return file_c1_connectorapi_rtun_v1_rtun_proto_rawDescGZIP(), []int{2}
}

func (x *Frame) GetSid() uint32 {
	if x != nil {
		return x.Sid
	}
	return 0
}

func (x *Frame) GetKind() isFrame_Kind {
	if x != nil {
		return x.Kind
	}
	return nil
}

func (x *Frame) GetHello() *Hello {
	if x != nil {
		if x, ok := x.Kind.(*Frame_Hello); ok {
			return x.Hello
		}
	}
	return nil
}

func (x *Frame) GetSyn() *Syn {
	if x != nil {
		if x, ok := x.Kind.(*Frame_Syn); ok {
			return x.Syn
		}
	}
	return nil
}

func (x *Frame) GetData() *Data {
	if x != nil {
		if x, ok := x.Kind.(*Frame_Data); ok {
			return x.Data
		}
	}
	return nil
}

func (x *Frame) GetFin() *Fin {
	if x != nil {
		if x, ok := x.Kind.(*Frame_Fin); ok {
			return x.Fin
		}
	}
	return nil
}

func (x *Frame) GetRst() *Rst {
	if x != nil {
		if x, ok := x.Kind.(*Frame_Rst); ok {
			return x.Rst
		}
	}
	return nil
}

type isFrame_Kind interface {
	isFrame_Kind()
}

type Frame_Hello struct {
	Hello *Hello `protobuf:"bytes,10,opt,name=hello,proto3,oneof"` // client -> server (first)
}

type Frame_Syn struct {
	Syn *Syn `protobuf:"bytes,11,opt,name=syn,proto3,oneof"` // server -> client (reverse open)
}

type Frame_Data struct {
	Data *Data `protobuf:"bytes,12,opt,name=data,proto3,oneof"` // either direction
}

type Frame_Fin struct {
	Fin *Fin `protobuf:"bytes,13,opt,name=fin,proto3,oneof"` // either direction
}

type Frame_Rst struct {
	Rst *Rst `protobuf:"bytes,14,opt,name=rst,proto3,oneof"` // either direction
}

func (*Frame_Hello) isFrame_Kind() {}

func (*Frame_Syn) isFrame_Kind() {}

func (*Frame_Data) isFrame_Kind() {}

func (*Frame_Fin) isFrame_Kind() {}

func (*Frame_Rst) isFrame_Kind() {}

type Hello struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ports         []uint32               `protobuf:"varint,1,rep,packed,name=ports,proto3" json:"ports,omitempty"`
	Protocol      uint32                 `protobuf:"varint,2,opt,name=protocol,proto3" json:"protocol,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Hello) Reset() {
	*x = Hello{}
	mi := &file_c1_connectorapi_rtun_v1_rtun_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Hello) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hello) ProtoMessage() {}

func (x *Hello) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_rtun_v1_rtun_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hello.ProtoReflect.Descriptor instead.
func (*Hello) Descriptor() ([]byte, []int) {
	return file_c1_connectorapi_rtun_v1_rtun_proto_rawDescGZIP(), []int{3}
}

func (x *Hello) GetPorts() []uint32 {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *Hello) GetProtocol() uint32 {
	if x != nil {
		return x.Protocol
	}
	return 0
}

type Syn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Port          uint32                 `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Syn) Reset() {
	*x = Syn{}
	mi := &file_c1_connectorapi_rtun_v1_rtun_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Syn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Syn) ProtoMessage() {}

func (x *Syn) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_rtun_v1_rtun_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Syn.ProtoReflect.Descriptor instead.
func (*Syn) Descriptor() ([]byte, []int) {
	return file_c1_connectorapi_rtun_v1_rtun_proto_rawDescGZIP(), []int{4}
}

func (x *Syn) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type Data struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Payload       []byte                 `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Data) Reset() {
	*x = Data{}
	mi := &file_c1_connectorapi_rtun_v1_rtun_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_rtun_v1_rtun_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_c1_connectorapi_rtun_v1_rtun_proto_rawDescGZIP(), []int{5}
}

func (x *Data) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type Fin struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ack           bool                   `protobuf:"varint,1,opt,name=ack,proto3" json:"ack,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Fin) Reset() {
	*x = Fin{}
	mi := &file_c1_connectorapi_rtun_v1_rtun_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Fin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fin) ProtoMessage() {}

func (x *Fin) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_rtun_v1_rtun_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fin.ProtoReflect.Descriptor instead.
func (*Fin) Descriptor() ([]byte, []int) {
	return file_c1_connectorapi_rtun_v1_rtun_proto_rawDescGZIP(), []int{6}
}

func (x *Fin) GetAck() bool {
	if x != nil {
		return x.Ack
	}
	return false
}

type Rst struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          RstCode                `protobuf:"varint,1,opt,name=code,proto3,enum=c1.connectorapi.rtun.v1.RstCode" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Rst) Reset() {
	*x = Rst{}
	mi := &file_c1_connectorapi_rtun_v1_rtun_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Rst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rst) ProtoMessage() {}

func (x *Rst) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_rtun_v1_rtun_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rst.ProtoReflect.Descriptor instead.
func (*Rst) Descriptor() ([]byte, []int) {
	return file_c1_connectorapi_rtun_v1_rtun_proto_rawDescGZIP(), []int{7}
}

func (x *Rst) GetCode() RstCode {
	if x != nil {
		return x.Code
	}
	return RstCode_RST_CODE_UNSPECIFIED
}

var File_c1_connectorapi_rtun_v1_rtun_proto protoreflect.FileDescriptor

var file_c1_connectorapi_rtun_v1_rtun_proto_rawDesc = string([]byte{
	0x0a, 0x22, 0x63, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x61, 0x70,
	0x69, 0x2f, 0x72, 0x74, 0x75, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x74, 0x75, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x63, 0x31, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x74, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x22, 0x57, 0x0a,
	0x1f, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x34, 0x0a, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x63, 0x31, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x61, 0x70,
	0x69, 0x2e, 0x72, 0x74, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52,
	0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x22, 0x58, 0x0a, 0x20, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73,
	0x65, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69,
	0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x31, 0x2e, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x74, 0x75, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x22, 0xa4, 0x02, 0x0a, 0x05, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x05,
	0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x31,
	0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x74,
	0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x68,
	0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x30, 0x0a, 0x03, 0x73, 0x79, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x31, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x61, 0x70, 0x69, 0x2e, 0x72, 0x74, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x6e, 0x48,
	0x00, 0x52, 0x03, 0x73, 0x79, 0x6e, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x31, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x74, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x03, 0x66,
	0x69, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x31, 0x2e, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x74, 0x75, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x48, 0x00, 0x52, 0x03, 0x66, 0x69, 0x6e, 0x12, 0x30, 0x0a,
	0x03, 0x72, 0x73, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x31, 0x2e,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x74, 0x75,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x73, 0x74, 0x48, 0x00, 0x52, 0x03, 0x72, 0x73, 0x74, 0x42,
	0x06, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x22, 0x39, 0x0a, 0x05, 0x48, 0x65, 0x6c, 0x6c, 0x6f,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x22, 0x19, 0x0a, 0x03, 0x53, 0x79, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x20, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22,
	0x17, 0x0a, 0x03, 0x46, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x63, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x03, 0x61, 0x63, 0x6b, 0x22, 0x3b, 0x0a, 0x03, 0x52, 0x73, 0x74, 0x12,
	0x34, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e,
	0x63, 0x31, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x61, 0x70, 0x69, 0x2e,
	0x72, 0x74, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x73, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x2a, 0x8c, 0x01, 0x0a, 0x07, 0x52, 0x73, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x53, 0x54, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x52,
	0x53, 0x54, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4e, 0x4f, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x45,
	0x4e, 0x45, 0x52, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c, 0x52, 0x53, 0x54, 0x5f, 0x43, 0x4f, 0x44,
	0x45, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x41, 0x44, 0x56, 0x45, 0x52,
	0x54, 0x49, 0x53, 0x45, 0x44, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x53, 0x54, 0x5f, 0x43,
	0x4f, 0x44, 0x45, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10, 0x03, 0x12, 0x15, 0x0a,
	0x11, 0x52, 0x53, 0x54, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e,
	0x41, 0x4c, 0x10, 0x04, 0x32, 0x97, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65,
	0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7f, 0x0a,
	0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x38, 0x2e, 0x63, 0x31, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x74, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x39, 0x2e, 0x63, 0x31, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x61, 0x70,
	0x69, 0x2e, 0x72, 0x74, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73,
	0x65, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69,
	0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x42, 0x3e,
	0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x6e,
	0x64, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x6f, 0x6e, 0x65, 0x2f, 0x62, 0x61, 0x74, 0x6f, 0x6e, 0x2d,
	0x73, 0x64, 0x6b, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x74, 0x75, 0x6e, 0x2f, 0x76, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_c1_connectorapi_rtun_v1_rtun_proto_rawDescOnce sync.Once
	file_c1_connectorapi_rtun_v1_rtun_proto_rawDescData []byte
)

func file_c1_connectorapi_rtun_v1_rtun_proto_rawDescGZIP() []byte {
	file_c1_connectorapi_rtun_v1_rtun_proto_rawDescOnce.Do(func() {
		file_c1_connectorapi_rtun_v1_rtun_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_c1_connectorapi_rtun_v1_rtun_proto_rawDesc), len(file_c1_connectorapi_rtun_v1_rtun_proto_rawDesc)))
	})
	return file_c1_connectorapi_rtun_v1_rtun_proto_rawDescData
}

var file_c1_connectorapi_rtun_v1_rtun_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_c1_connectorapi_rtun_v1_rtun_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_c1_connectorapi_rtun_v1_rtun_proto_goTypes = []any{
	(RstCode)(0),                             // 0: c1.connectorapi.rtun.v1.RstCode
	(*ReverseTunnelServiceLinkRequest)(nil),  // 1: c1.connectorapi.rtun.v1.ReverseTunnelServiceLinkRequest
	(*ReverseTunnelServiceLinkResponse)(nil), // 2: c1.connectorapi.rtun.v1.ReverseTunnelServiceLinkResponse
	(*Frame)(nil),                            // 3: c1.connectorapi.rtun.v1.Frame
	(*Hello)(nil),                            // 4: c1.connectorapi.rtun.v1.Hello
	(*Syn)(nil),                              // 5: c1.connectorapi.rtun.v1.Syn
	(*Data)(nil),                             // 6: c1.connectorapi.rtun.v1.Data
	(*Fin)(nil),                              // 7: c1.connectorapi.rtun.v1.Fin
	(*Rst)(nil),                              // 8: c1.connectorapi.rtun.v1.Rst
}
var file_c1_connectorapi_rtun_v1_rtun_proto_depIdxs = []int32{
	3, // 0: c1.connectorapi.rtun.v1.ReverseTunnelServiceLinkRequest.frame:type_name -> c1.connectorapi.rtun.v1.Frame
	3, // 1: c1.connectorapi.rtun.v1.ReverseTunnelServiceLinkResponse.frame:type_name -> c1.connectorapi.rtun.v1.Frame
	4, // 2: c1.connectorapi.rtun.v1.Frame.hello:type_name -> c1.connectorapi.rtun.v1.Hello
	5, // 3: c1.connectorapi.rtun.v1.Frame.syn:type_name -> c1.connectorapi.rtun.v1.Syn
	6, // 4: c1.connectorapi.rtun.v1.Frame.data:type_name -> c1.connectorapi.rtun.v1.Data
	7, // 5: c1.connectorapi.rtun.v1.Frame.fin:type_name -> c1.connectorapi.rtun.v1.Fin
	8, // 6: c1.connectorapi.rtun.v1.Frame.rst:type_name -> c1.connectorapi.rtun.v1.Rst
	0, // 7: c1.connectorapi.rtun.v1.Rst.code:type_name -> c1.connectorapi.rtun.v1.RstCode
	1, // 8: c1.connectorapi.rtun.v1.ReverseTunnelService.Link:input_type -> c1.connectorapi.rtun.v1.ReverseTunnelServiceLinkRequest
	2, // 9: c1.connectorapi.rtun.v1.ReverseTunnelService.Link:output_type -> c1.connectorapi.rtun.v1.ReverseTunnelServiceLinkResponse
	9, // [9:10] is the sub-list for method output_type
	8, // [8:9] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_c1_connectorapi_rtun_v1_rtun_proto_init() }
func file_c1_connectorapi_rtun_v1_rtun_proto_init() {
	if File_c1_connectorapi_rtun_v1_rtun_proto != nil {
		return
	}
	file_c1_connectorapi_rtun_v1_rtun_proto_msgTypes[2].OneofWrappers = []any{
		(*Frame_Hello)(nil),
		(*Frame_Syn)(nil),
		(*Frame_Data)(nil),
		(*Frame_Fin)(nil),
		(*Frame_Rst)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_c1_connectorapi_rtun_v1_rtun_proto_rawDesc), len(file_c1_connectorapi_rtun_v1_rtun_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_c1_connectorapi_rtun_v1_rtun_proto_goTypes,
		DependencyIndexes: file_c1_connectorapi_rtun_v1_rtun_proto_depIdxs,
		EnumInfos:         file_c1_connectorapi_rtun_v1_rtun_proto_enumTypes,
		MessageInfos:      file_c1_connectorapi_rtun_v1_rtun_proto_msgTypes,
	}.Build()
	File_c1_connectorapi_rtun_v1_rtun_proto = out.File
	file_c1_connectorapi_rtun_v1_rtun_proto_goTypes = nil
	file_c1_connectorapi_rtun_v1_rtun_proto_depIdxs = nil
}
