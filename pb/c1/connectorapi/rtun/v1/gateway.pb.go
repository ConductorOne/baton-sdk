// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        (unknown)
// source: c1/connectorapi/rtun/v1/gateway.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ReverseDialerServiceOpenRequest is sent from caller to gateway for the Open RPC.
type ReverseDialerServiceOpenRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Kind:
	//
	//	*ReverseDialerServiceOpenRequest_OpenReq
	//	*ReverseDialerServiceOpenRequest_Frame
	Kind          isReverseDialerServiceOpenRequest_Kind `protobuf_oneof:"kind"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReverseDialerServiceOpenRequest) Reset() {
	*x = ReverseDialerServiceOpenRequest{}
	mi := &file_c1_connectorapi_rtun_v1_gateway_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReverseDialerServiceOpenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReverseDialerServiceOpenRequest) ProtoMessage() {}

func (x *ReverseDialerServiceOpenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_rtun_v1_gateway_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReverseDialerServiceOpenRequest.ProtoReflect.Descriptor instead.
func (*ReverseDialerServiceOpenRequest) Descriptor() ([]byte, []int) {
	return file_c1_connectorapi_rtun_v1_gateway_proto_rawDescGZIP(), []int{0}
}

func (x *ReverseDialerServiceOpenRequest) GetKind() isReverseDialerServiceOpenRequest_Kind {
	if x != nil {
		return x.Kind
	}
	return nil
}

func (x *ReverseDialerServiceOpenRequest) GetOpenReq() *OpenRequest {
	if x != nil {
		if x, ok := x.Kind.(*ReverseDialerServiceOpenRequest_OpenReq); ok {
			return x.OpenReq
		}
	}
	return nil
}

func (x *ReverseDialerServiceOpenRequest) GetFrame() *Frame {
	if x != nil {
		if x, ok := x.Kind.(*ReverseDialerServiceOpenRequest_Frame); ok {
			return x.Frame
		}
	}
	return nil
}

type isReverseDialerServiceOpenRequest_Kind interface {
	isReverseDialerServiceOpenRequest_Kind()
}

type ReverseDialerServiceOpenRequest_OpenReq struct {
	OpenReq *OpenRequest `protobuf:"bytes,1,opt,name=open_req,json=openReq,proto3,oneof"` // initiate a connection (first message, or concurrent opens)
}

type ReverseDialerServiceOpenRequest_Frame struct {
	Frame *Frame `protobuf:"bytes,10,opt,name=frame,proto3,oneof"` // data/control frames (reuses rtun Frame)
}

func (*ReverseDialerServiceOpenRequest_OpenReq) isReverseDialerServiceOpenRequest_Kind() {}

func (*ReverseDialerServiceOpenRequest_Frame) isReverseDialerServiceOpenRequest_Kind() {}

// ReverseDialerServiceOpenResponse is sent from gateway to caller for the Open RPC.
type ReverseDialerServiceOpenResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Kind:
	//
	//	*ReverseDialerServiceOpenResponse_OpenResp
	//	*ReverseDialerServiceOpenResponse_Frame
	Kind          isReverseDialerServiceOpenResponse_Kind `protobuf_oneof:"kind"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReverseDialerServiceOpenResponse) Reset() {
	*x = ReverseDialerServiceOpenResponse{}
	mi := &file_c1_connectorapi_rtun_v1_gateway_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReverseDialerServiceOpenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReverseDialerServiceOpenResponse) ProtoMessage() {}

func (x *ReverseDialerServiceOpenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_rtun_v1_gateway_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReverseDialerServiceOpenResponse.ProtoReflect.Descriptor instead.
func (*ReverseDialerServiceOpenResponse) Descriptor() ([]byte, []int) {
	return file_c1_connectorapi_rtun_v1_gateway_proto_rawDescGZIP(), []int{1}
}

func (x *ReverseDialerServiceOpenResponse) GetKind() isReverseDialerServiceOpenResponse_Kind {
	if x != nil {
		return x.Kind
	}
	return nil
}

func (x *ReverseDialerServiceOpenResponse) GetOpenResp() *OpenResponse {
	if x != nil {
		if x, ok := x.Kind.(*ReverseDialerServiceOpenResponse_OpenResp); ok {
			return x.OpenResp
		}
	}
	return nil
}

func (x *ReverseDialerServiceOpenResponse) GetFrame() *Frame {
	if x != nil {
		if x, ok := x.Kind.(*ReverseDialerServiceOpenResponse_Frame); ok {
			return x.Frame
		}
	}
	return nil
}

type isReverseDialerServiceOpenResponse_Kind interface {
	isReverseDialerServiceOpenResponse_Kind()
}

type ReverseDialerServiceOpenResponse_OpenResp struct {
	OpenResp *OpenResponse `protobuf:"bytes,1,opt,name=open_resp,json=openResp,proto3,oneof"` // handshake result
}

type ReverseDialerServiceOpenResponse_Frame struct {
	Frame *Frame `protobuf:"bytes,10,opt,name=frame,proto3,oneof"` // data/control frames (reuses rtun Frame)
}

func (*ReverseDialerServiceOpenResponse_OpenResp) isReverseDialerServiceOpenResponse_Kind() {}

func (*ReverseDialerServiceOpenResponse_Frame) isReverseDialerServiceOpenResponse_Kind() {}

// OpenRequest initiates a reverse connection to a client.
// The caller proposes a gSID (gateway SID) for this connection to support concurrent opens.
type OpenRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Gsid          uint32                 `protobuf:"varint,1,opt,name=gsid,proto3" json:"gsid,omitempty"`                        // caller-proposed SID for this connection (must be unique per stream)
	ClientId      string                 `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"` // target client (must be URL-safe)
	Port          uint32                 `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`                        // target port on the client
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OpenRequest) Reset() {
	*x = OpenRequest{}
	mi := &file_c1_connectorapi_rtun_v1_gateway_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenRequest) ProtoMessage() {}

func (x *OpenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_rtun_v1_gateway_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenRequest.ProtoReflect.Descriptor instead.
func (*OpenRequest) Descriptor() ([]byte, []int) {
	return file_c1_connectorapi_rtun_v1_gateway_proto_rawDescGZIP(), []int{2}
}

func (x *OpenRequest) GetGsid() uint32 {
	if x != nil {
		return x.Gsid
	}
	return 0
}

func (x *OpenRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *OpenRequest) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

// OpenResponse indicates the result of an OpenRequest.
type OpenResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Gsid  uint32                 `protobuf:"varint,1,opt,name=gsid,proto3" json:"gsid,omitempty"` // echoed from OpenRequest
	// Types that are valid to be assigned to Result:
	//
	//	*OpenResponse_NotFound
	//	*OpenResponse_Opened
	Result        isOpenResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OpenResponse) Reset() {
	*x = OpenResponse{}
	mi := &file_c1_connectorapi_rtun_v1_gateway_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenResponse) ProtoMessage() {}

func (x *OpenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_rtun_v1_gateway_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenResponse.ProtoReflect.Descriptor instead.
func (*OpenResponse) Descriptor() ([]byte, []int) {
	return file_c1_connectorapi_rtun_v1_gateway_proto_rawDescGZIP(), []int{3}
}

func (x *OpenResponse) GetGsid() uint32 {
	if x != nil {
		return x.Gsid
	}
	return 0
}

func (x *OpenResponse) GetResult() isOpenResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *OpenResponse) GetNotFound() *NotFound {
	if x != nil {
		if x, ok := x.Result.(*OpenResponse_NotFound); ok {
			return x.NotFound
		}
	}
	return nil
}

func (x *OpenResponse) GetOpened() *Opened {
	if x != nil {
		if x, ok := x.Result.(*OpenResponse_Opened); ok {
			return x.Opened
		}
	}
	return nil
}

type isOpenResponse_Result interface {
	isOpenResponse_Result()
}

type OpenResponse_NotFound struct {
	NotFound *NotFound `protobuf:"bytes,2,opt,name=not_found,json=notFound,proto3,oneof"` // gateway doesn't own this client; caller should re-resolve
}

type OpenResponse_Opened struct {
	Opened *Opened `protobuf:"bytes,3,opt,name=opened,proto3,oneof"` // success; use the gSID for subsequent frames
}

func (*OpenResponse_NotFound) isOpenResponse_Result() {}

func (*OpenResponse_Opened) isOpenResponse_Result() {}

type NotFound struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotFound) Reset() {
	*x = NotFound{}
	mi := &file_c1_connectorapi_rtun_v1_gateway_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotFound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotFound) ProtoMessage() {}

func (x *NotFound) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_rtun_v1_gateway_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotFound.ProtoReflect.Descriptor instead.
func (*NotFound) Descriptor() ([]byte, []int) {
	return file_c1_connectorapi_rtun_v1_gateway_proto_rawDescGZIP(), []int{4}
}

type Opened struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Opened) Reset() {
	*x = Opened{}
	mi := &file_c1_connectorapi_rtun_v1_gateway_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Opened) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Opened) ProtoMessage() {}

func (x *Opened) ProtoReflect() protoreflect.Message {
	mi := &file_c1_connectorapi_rtun_v1_gateway_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Opened.ProtoReflect.Descriptor instead.
func (*Opened) Descriptor() ([]byte, []int) {
	return file_c1_connectorapi_rtun_v1_gateway_proto_rawDescGZIP(), []int{5}
}

var File_c1_connectorapi_rtun_v1_gateway_proto protoreflect.FileDescriptor

var file_c1_connectorapi_rtun_v1_gateway_proto_rawDesc = string([]byte{
	0x0a, 0x25, 0x63, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x61, 0x70,
	0x69, 0x2f, 0x72, 0x74, 0x75, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x63, 0x31, 0x2e, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x74, 0x75, 0x6e, 0x2e, 0x76, 0x31,
	0x1a, 0x22, 0x63, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x61, 0x70,
	0x69, 0x2f, 0x72, 0x74, 0x75, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x74, 0x75, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa4, 0x01, 0x0a, 0x1f, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65,
	0x44, 0x69, 0x61, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x65,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x6e,
	0x5f, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x31, 0x2e,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x74, 0x75,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x07, 0x6f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x36, 0x0a, 0x05, 0x66,
	0x72, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x31, 0x2e,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x74, 0x75,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x05, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x22, 0xa8, 0x01, 0x0a, 0x20,
	0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x44, 0x69, 0x61, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x44, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x31, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x74, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70,
	0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x08, 0x6f, 0x70,
	0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x31, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x74, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x42, 0x06,
	0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x22, 0x52, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x67, 0x73, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0xa9, 0x01, 0x0a, 0x0c, 0x4f,
	0x70, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x67,
	0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x67, 0x73, 0x69, 0x64, 0x12,
	0x40, 0x0a, 0x09, 0x6e, 0x6f, 0x74, 0x5f, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x31, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x74, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74,
	0x46, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x08, 0x6e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e,
	0x64, 0x12, 0x39, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x31, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x61, 0x70, 0x69, 0x2e, 0x72, 0x74, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x6e,
	0x65, 0x64, 0x48, 0x00, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x42, 0x08, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x0a, 0x0a, 0x08, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75,
	0x6e, 0x64, 0x22, 0x08, 0x0a, 0x06, 0x4f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x32, 0x97, 0x01, 0x0a,
	0x14, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x44, 0x69, 0x61, 0x6c, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7f, 0x0a, 0x04, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x38, 0x2e,
	0x63, 0x31, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x61, 0x70, 0x69, 0x2e,
	0x72, 0x74, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x44,
	0x69, 0x61, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x65, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x63, 0x31, 0x2e, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x74, 0x75, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x44, 0x69, 0x61, 0x6c, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x42, 0x3e, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x6f, 0x6e,
	0x65, 0x2f, 0x62, 0x61, 0x74, 0x6f, 0x6e, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x62, 0x2f, 0x63,
	0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x61, 0x70, 0x69, 0x2f, 0x72,
	0x74, 0x75, 0x6e, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_c1_connectorapi_rtun_v1_gateway_proto_rawDescOnce sync.Once
	file_c1_connectorapi_rtun_v1_gateway_proto_rawDescData []byte
)

func file_c1_connectorapi_rtun_v1_gateway_proto_rawDescGZIP() []byte {
	file_c1_connectorapi_rtun_v1_gateway_proto_rawDescOnce.Do(func() {
		file_c1_connectorapi_rtun_v1_gateway_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_c1_connectorapi_rtun_v1_gateway_proto_rawDesc), len(file_c1_connectorapi_rtun_v1_gateway_proto_rawDesc)))
	})
	return file_c1_connectorapi_rtun_v1_gateway_proto_rawDescData
}

var file_c1_connectorapi_rtun_v1_gateway_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_c1_connectorapi_rtun_v1_gateway_proto_goTypes = []any{
	(*ReverseDialerServiceOpenRequest)(nil),  // 0: c1.connectorapi.rtun.v1.ReverseDialerServiceOpenRequest
	(*ReverseDialerServiceOpenResponse)(nil), // 1: c1.connectorapi.rtun.v1.ReverseDialerServiceOpenResponse
	(*OpenRequest)(nil),                      // 2: c1.connectorapi.rtun.v1.OpenRequest
	(*OpenResponse)(nil),                     // 3: c1.connectorapi.rtun.v1.OpenResponse
	(*NotFound)(nil),                         // 4: c1.connectorapi.rtun.v1.NotFound
	(*Opened)(nil),                           // 5: c1.connectorapi.rtun.v1.Opened
	(*Frame)(nil),                            // 6: c1.connectorapi.rtun.v1.Frame
}
var file_c1_connectorapi_rtun_v1_gateway_proto_depIdxs = []int32{
	2, // 0: c1.connectorapi.rtun.v1.ReverseDialerServiceOpenRequest.open_req:type_name -> c1.connectorapi.rtun.v1.OpenRequest
	6, // 1: c1.connectorapi.rtun.v1.ReverseDialerServiceOpenRequest.frame:type_name -> c1.connectorapi.rtun.v1.Frame
	3, // 2: c1.connectorapi.rtun.v1.ReverseDialerServiceOpenResponse.open_resp:type_name -> c1.connectorapi.rtun.v1.OpenResponse
	6, // 3: c1.connectorapi.rtun.v1.ReverseDialerServiceOpenResponse.frame:type_name -> c1.connectorapi.rtun.v1.Frame
	4, // 4: c1.connectorapi.rtun.v1.OpenResponse.not_found:type_name -> c1.connectorapi.rtun.v1.NotFound
	5, // 5: c1.connectorapi.rtun.v1.OpenResponse.opened:type_name -> c1.connectorapi.rtun.v1.Opened
	0, // 6: c1.connectorapi.rtun.v1.ReverseDialerService.Open:input_type -> c1.connectorapi.rtun.v1.ReverseDialerServiceOpenRequest
	1, // 7: c1.connectorapi.rtun.v1.ReverseDialerService.Open:output_type -> c1.connectorapi.rtun.v1.ReverseDialerServiceOpenResponse
	7, // [7:8] is the sub-list for method output_type
	6, // [6:7] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_c1_connectorapi_rtun_v1_gateway_proto_init() }
func file_c1_connectorapi_rtun_v1_gateway_proto_init() {
	if File_c1_connectorapi_rtun_v1_gateway_proto != nil {
		return
	}
	file_c1_connectorapi_rtun_v1_rtun_proto_init()
	file_c1_connectorapi_rtun_v1_gateway_proto_msgTypes[0].OneofWrappers = []any{
		(*ReverseDialerServiceOpenRequest_OpenReq)(nil),
		(*ReverseDialerServiceOpenRequest_Frame)(nil),
	}
	file_c1_connectorapi_rtun_v1_gateway_proto_msgTypes[1].OneofWrappers = []any{
		(*ReverseDialerServiceOpenResponse_OpenResp)(nil),
		(*ReverseDialerServiceOpenResponse_Frame)(nil),
	}
	file_c1_connectorapi_rtun_v1_gateway_proto_msgTypes[3].OneofWrappers = []any{
		(*OpenResponse_NotFound)(nil),
		(*OpenResponse_Opened)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_c1_connectorapi_rtun_v1_gateway_proto_rawDesc), len(file_c1_connectorapi_rtun_v1_gateway_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_c1_connectorapi_rtun_v1_gateway_proto_goTypes,
		DependencyIndexes: file_c1_connectorapi_rtun_v1_gateway_proto_depIdxs,
		MessageInfos:      file_c1_connectorapi_rtun_v1_gateway_proto_msgTypes,
	}.Build()
	File_c1_connectorapi_rtun_v1_gateway_proto = out.File
	file_c1_connectorapi_rtun_v1_gateway_proto_goTypes = nil
	file_c1_connectorapi_rtun_v1_gateway_proto_depIdxs = nil
}
